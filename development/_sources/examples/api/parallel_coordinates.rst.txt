
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/api/parallel_coordinates.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_api_parallel_coordinates.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_api_parallel_coordinates.py:


Parallel Coordinates
^^^^^^^^^^^^^^^^^^^^

This example shows how to use the plugin parallel coordinates.
Note that other plugins use the same interfaces and can be used in the same fashion.

.. GENERATED FROM PYTHON SOURCE LINES 8-34

.. code-block:: Python


    from deepcave.plugins.objective.parallel_coordinates import ParallelCoordinates
    from deepcave.runs.converters.deepcave import DeepCAVERun


    if __name__ == "__main__":
        # Instantiate the run
        run = DeepCAVERun.from_path("examples/record/logs/DeepCAVE/mlp/run_2")
        objective_id = run.get_objective_ids()[0]
        budget_id = run.get_budget_ids()[-1]

        # Instantiate the plugin
        plugin = ParallelCoordinates()
        inputs = plugin.generate_inputs(
            hyperparameter_names=run.configspace.get_hyperparameter_names(),
            objective_id=objective_id,
            budget_id=budget_id,
        )
        # Note: Filter variables are not considered.
        outputs = plugin.generate_outputs(run, inputs)

        # Finally, you can load the figure. Here, the filter variables play a role.
        # Alternatively: Use the matplotlib output (`load_mpl_outputs`) if available.
        figure = plugin.load_outputs(run, inputs, outputs)  # plotly.go figure
        # figure.show()
        # figure.write_image("examples/api/test.png")


.. _sphx_glr_download_examples_api_parallel_coordinates.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: parallel_coordinates.ipynb <parallel_coordinates.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: parallel_coordinates.py <parallel_coordinates.py>`
