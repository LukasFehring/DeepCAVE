Search.setIndex({"docnames": ["api", "api/deepcave.evaluators", "api/deepcave.evaluators.epm", "api/deepcave.evaluators.epm.fanova_forest", "api/deepcave.evaluators.epm.random_forest", "api/deepcave.evaluators.epm.random_forest_surrogate", "api/deepcave.evaluators.epm.utils", "api/deepcave.evaluators.fanova", "api/deepcave.evaluators.footprint", "api/deepcave.evaluators.lpi", "api/deepcave.layouts", "api/deepcave.layouts.not_found", "api/deepcave.layouts.sidebar", "api/deepcave.plugins", "api/deepcave.plugins.budget", "api/deepcave.plugins.dynamic", "api/deepcave.plugins.hyperparameter", "api/deepcave.plugins.hyperparameter.pdp", "api/deepcave.plugins.objective", "api/deepcave.plugins.objective.configuration_cube", "api/deepcave.plugins.objective.cost_over_time", "api/deepcave.plugins.objective.parallel_coordinates", "api/deepcave.plugins.static", "api/deepcave.plugins.summary", "api/deepcave.plugins.summary.configurations", "api/deepcave.plugins.summary.overview", "api/deepcave.runs", "api/deepcave.runs.converters", "api/deepcave.runs.converters.bohb", "api/deepcave.runs.converters.deepcave", "api/deepcave.runs.converters.smac3v1", "api/deepcave.runs.converters.smac3v2", "api/deepcave.runs.exceptions", "api/deepcave.runs.group", "api/deepcave.runs.handler", "api/deepcave.runs.objective", "api/deepcave.runs.recorder", "api/deepcave.runs.run", "api/deepcave.runs.status", "api/deepcave.runs.trial", "api/deepcave.utils", "api/deepcave.utils.cache", "api/deepcave.utils.cast", "api/deepcave.utils.compression", "api/deepcave.utils.configs", "api/deepcave.utils.configspace", "api/deepcave.utils.dash", "api/deepcave.utils.data_structures", "api/deepcave.utils.docs", "api/deepcave.utils.files", "api/deepcave.utils.hash", "api/deepcave.utils.layout", "api/deepcave.utils.logs", "api/deepcave.utils.notification", "api/deepcave.utils.run_caches", "api/deepcave.utils.styled_plotty", "api/deepcave.utils.url", "api/deepcave.utils.util", "converters", "examples/api/index", "examples/api/parallel_coordinates", "examples/index", "examples/record/digits_sklearn", "examples/record/index", "examples/record/minimal", "examples/record/mnist_pytorch", "faq", "getting_started", "glossary", "index", "installation", "plugins/budget_correlation", "plugins/configuration_cube", "plugins/configuration_footprint", "plugins/configurations", "plugins/cost_over_time", "plugins/importances", "plugins/index", "plugins/overview", "plugins/parallel_coordinates", "plugins/pareto_front", "plugins/partial_dependencies", "redis"], "filenames": ["api.rst", "api/deepcave.evaluators.rst", "api/deepcave.evaluators.epm.rst", "api/deepcave.evaluators.epm.fanova_forest.rst", "api/deepcave.evaluators.epm.random_forest.rst", "api/deepcave.evaluators.epm.random_forest_surrogate.rst", "api/deepcave.evaluators.epm.utils.rst", "api/deepcave.evaluators.fanova.rst", "api/deepcave.evaluators.footprint.rst", "api/deepcave.evaluators.lpi.rst", "api/deepcave.layouts.rst", "api/deepcave.layouts.not_found.rst", "api/deepcave.layouts.sidebar.rst", "api/deepcave.plugins.rst", "api/deepcave.plugins.budget.rst", "api/deepcave.plugins.dynamic.rst", "api/deepcave.plugins.hyperparameter.rst", "api/deepcave.plugins.hyperparameter.pdp.rst", "api/deepcave.plugins.objective.rst", "api/deepcave.plugins.objective.configuration_cube.rst", "api/deepcave.plugins.objective.cost_over_time.rst", "api/deepcave.plugins.objective.parallel_coordinates.rst", "api/deepcave.plugins.static.rst", "api/deepcave.plugins.summary.rst", "api/deepcave.plugins.summary.configurations.rst", "api/deepcave.plugins.summary.overview.rst", "api/deepcave.runs.rst", "api/deepcave.runs.converters.rst", "api/deepcave.runs.converters.bohb.rst", "api/deepcave.runs.converters.deepcave.rst", "api/deepcave.runs.converters.smac3v1.rst", "api/deepcave.runs.converters.smac3v2.rst", "api/deepcave.runs.exceptions.rst", "api/deepcave.runs.group.rst", "api/deepcave.runs.handler.rst", "api/deepcave.runs.objective.rst", "api/deepcave.runs.recorder.rst", "api/deepcave.runs.run.rst", "api/deepcave.runs.status.rst", "api/deepcave.runs.trial.rst", "api/deepcave.utils.rst", "api/deepcave.utils.cache.rst", "api/deepcave.utils.cast.rst", "api/deepcave.utils.compression.rst", "api/deepcave.utils.configs.rst", "api/deepcave.utils.configspace.rst", "api/deepcave.utils.dash.rst", "api/deepcave.utils.data_structures.rst", "api/deepcave.utils.docs.rst", "api/deepcave.utils.files.rst", "api/deepcave.utils.hash.rst", "api/deepcave.utils.layout.rst", "api/deepcave.utils.logs.rst", "api/deepcave.utils.notification.rst", "api/deepcave.utils.run_caches.rst", "api/deepcave.utils.styled_plotty.rst", "api/deepcave.utils.url.rst", "api/deepcave.utils.util.rst", "converters.rst", "examples/api/index.rst", "examples/api/parallel_coordinates.rst", "examples/index.rst", "examples/record/digits_sklearn.rst", "examples/record/index.rst", "examples/record/minimal.rst", "examples/record/mnist_pytorch.rst", "faq.rst", "getting_started.rst", "glossary.rst", "index.rst", "installation.rst", "plugins/budget_correlation.rst", "plugins/configuration_cube.rst", "plugins/configuration_footprint.rst", "plugins/configurations.rst", "plugins/cost_over_time.rst", "plugins/importances.rst", "plugins/index.rst", "plugins/overview.rst", "plugins/parallel_coordinates.rst", "plugins/pareto_front.rst", "plugins/partial_dependencies.rst", "redis.rst"], "titles": ["API References", "deepcave.evaluators", "deepcave.evaluators.epm", "deepcave.evaluators.epm.fanova_forest", "deepcave.evaluators.epm.random_forest", "deepcave.evaluators.epm.random_forest_surrogate", "deepcave.evaluators.epm.utils", "deepcave.evaluators.fanova", "deepcave.evaluators.footprint", "deepcave.evaluators.lpi", "deepcave.layouts", "deepcave.layouts.not_found", "deepcave.layouts.sidebar", "deepcave.plugins", "deepcave.plugins.budget", "deepcave.plugins.dynamic", "deepcave.plugins.hyperparameter", "deepcave.plugins.hyperparameter.pdp", "deepcave.plugins.objective", "deepcave.plugins.objective.configuration_cube", "deepcave.plugins.objective.cost_over_time", "deepcave.plugins.objective.parallel_coordinates", "deepcave.plugins.static", "deepcave.plugins.summary", "deepcave.plugins.summary.configurations", "deepcave.plugins.summary.overview", "deepcave.runs", "deepcave.runs.converters", "deepcave.runs.converters.bohb", "deepcave.runs.converters.deepcave", "deepcave.runs.converters.smac3v1", "deepcave.runs.converters.smac3v2", "deepcave.runs.exceptions", "deepcave.runs.group", "deepcave.runs.handler", "deepcave.runs.objective", "deepcave.runs.recorder", "deepcave.runs.run", "deepcave.runs.status", "deepcave.runs.trial", "deepcave.utils", "deepcave.utils.cache", "deepcave.utils.cast", "deepcave.utils.compression", "deepcave.utils.configs", "deepcave.utils.configspace", "deepcave.utils.dash", "deepcave.utils.data_structures", "deepcave.utils.docs", "deepcave.utils.files", "deepcave.utils.hash", "deepcave.utils.layout", "deepcave.utils.logs", "deepcave.utils.notification", "deepcave.utils.run_caches", "deepcave.utils.styled_plotty", "deepcave.utils.url", "deepcave.utils.util", "Converters", "API", "Parallel Coordinates", "Examples", "Multi-Layer Perceptron via Sklearn", "Record", "Record Minimal Run", "Multi-Layer Perceptron via PyTorch", "Frequently Asked Questions", "Getting Started", "Glossary", "Home", "Installation", "Budget Correlation", "Configuration Cube", "Configuration Footprint", "Configurations", "Cost Over Time", "Importances", "Plugins", "Overview", "Parallel Coordinates", "Pareto Front", "Partial Dependencies", "Install Redis Server"], "terms": {"modul": [1, 2, 10, 13, 14, 16, 18, 23, 26, 27, 37, 40], "class": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 53, 54, 58, 61, 63, 65, 67], "fanovaforest": 3, "configspac": [3, 4, 5, 7, 26, 28, 29, 30, 31, 37, 58, 60, 62, 64, 65], "n_tree": [3, 4, 7], "10": [3, 55, 62, 65, 69, 79], "ratio_featur": [3, 4], "1": [3, 4, 7, 9, 55, 60, 62, 64, 65, 67, 71], "0": [3, 4, 9, 37, 58, 60, 62, 64, 65, 71], "min_samples_split": [3, 4], "min_samples_leaf": [3, 4], "max_depth": [3, 4], "64": [3, 65], "max_nod": [3, 4], "1048576": [3, 4], "eps_pur": [3, 4], "1e": [3, 4, 65], "08": [3, 4], "bootstrap": [3, 4], "true": [3, 4, 7, 13, 26, 34, 41, 54, 55, 62, 65, 70, 71, 73], "instance_featur": [3, 4, 6], "none": [3, 4, 5, 6, 7, 13, 15, 17, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 33, 34, 35, 37, 41, 44, 45, 47, 51, 54, 55, 62, 64, 65], "pca_compon": [3, 4], "2": [3, 4, 65, 70, 71, 72, 82], "cutoff": 3, "inf": [3, 37], "seed": [3, 4, 5, 7, 62, 64, 65], "sourc": [3, 5, 6, 7, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 43, 44, 45, 46, 47, 51, 54, 55, 60, 61, 62, 64, 65, 77], "base": [3, 4, 5, 7, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 54, 75, 78], "randomforest": [3, 4], "A": [3, 4, 26, 67, 68, 69, 75, 80], "fanova": [3, 26, 79], "forest": [3, 4, 5, 7], "wrapper": [3, 4, 26], "pyrfr": [3, 4, 26], "compute_margin": 3, "hp_id": 3, "depth": [3, 7], "return": [3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 41, 43, 44, 45, 47, 51, 54, 55, 58, 62, 65], "margin": [3, 4, 7], "select": [3, 7, 13, 17, 19, 20, 21, 24, 25, 26, 33, 34, 54, 58, 67, 69, 71, 72, 74, 75, 78, 79, 80], "paramet": [3, 4, 5, 7, 13, 17, 19, 20, 21, 24, 25, 26, 33, 34, 37, 44, 45, 47, 54, 55, 65, 68], "list": [3, 6, 7, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 33, 34, 37, 51, 55, 71, 74], "int": [3, 6, 7, 13, 24, 26, 33, 45, 55, 65], "contain": [3, 26, 44], "indic": [3, 73, 78, 79], "start": [3, 13, 37, 62, 64, 65, 66, 70, 77], "16": [4, 7, 65], "8333333333333334": 4, "3": [4, 55, 65, 70, 72], "log_i": 4, "fals": [4, 13, 26, 34, 41, 51, 65], "object": [4, 7, 13, 26, 28, 29, 30, 31, 33, 34, 37, 39, 41, 54, 58, 60, 62, 64, 65, 68, 71, 72, 73, 75, 77, 79, 80, 81], "random": [4, 5, 7, 9, 45, 64, 65], "thi": [4, 13, 15, 17, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 33, 37, 45, 54, 55, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "i": [4, 7, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 32, 33, 34, 35, 37, 41, 44, 45, 54, 55, 58, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "handi": [4, 78], "becaus": [4, 13, 54, 74], "we": [4, 65, 70, 71, 73, 77, 78, 79], "onli": [4, 7, 13, 17, 19, 20, 21, 24, 25, 26, 34, 45, 54, 55, 70, 72, 74, 79], "need": [4, 7, 13, 20, 41, 54, 58, 70, 71, 73, 75, 77], "pass": [4, 7, 13, 17, 19, 20, 21, 24, 25, 26, 34, 79], "have": [4, 13, 17, 19, 21, 24, 55, 58, 59, 61, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 82], "work": [4, 34, 58, 69, 70, 77, 82], "version": [4, 55], "without": 4, "specifi": [4, 7, 13, 26, 37, 72, 75, 79], "e": [4, 13, 20, 41, 55, 58, 66, 69, 74], "g": [4, 13, 20, 41, 55, 58, 66, 69, 74], "type": [4, 5, 6, 7, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 41, 43, 44, 45, 47, 51, 54, 55, 65, 73], "bound": [4, 6, 35, 73, 78], "also": [4, 13, 20, 34, 67, 69, 74, 75, 77, 78], "support": [4, 26, 58, 69, 75], "instanc": [4, 6, 34], "predict": [4, 5, 26], "x": [4, 5, 9, 55, 62, 65, 73, 75, 78, 79], "mean": [4, 5, 7, 71, 75], "varianc": [4, 7], "given": [4, 26, 33, 37, 44, 54, 72, 73, 80], "np": [4, 64, 65], "ndarrai": [4, 5], "n_sampl": 4, "n_featur": 4, "config": [4, 13, 15, 22, 26, 33, 34, 37, 54, 58, 62, 64, 65, 66, 67, 77, 78], "featur": [4, 6, 13, 75, 79], "train": [4, 7, 65, 71, 77], "sampl": [4, 5, 73], "tupl": [4, 5, 6, 7, 26, 55], "option": [4, 7, 13, 17, 19, 21, 24, 26, 33, 34, 37, 41, 44, 45, 55, 67, 73, 75], "n_object": 4, "var": [4, 7], "standard": [4, 26, 33, 75], "deviat": [4, 26, 33, 75], "predict_margin": 4, "over": [4, 72, 73, 74, 77, 78, 80], "all": [4, 7, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 34, 41, 54, 55, 61, 71, 72, 73, 75, 79], "marginalis": 4, "set": [4, 13, 17, 19, 20, 21, 24, 25, 34, 41, 54, 66], "configur": [4, 26, 37, 44, 45, 67, 68, 71, 75, 79, 80], "shape": [4, 5], "y": [4, 26, 55, 62, 65, 75, 78], "transform": [4, 34, 65], "pca": 4, "appli": 4, "afterward": 4, "_train": 4, "call": [4, 10, 11, 12, 13, 17, 19, 20, 21, 24], "input": [4, 5, 13, 15, 17, 19, 20, 21, 22, 24, 25, 54, 58, 60, 77], "data": [4, 5, 7, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 34, 37, 43, 54, 55, 58, 62, 65, 67, 69, 77, 78], "point": [4, 71, 72, 73, 77], "target": [4, 62], "valu": [4, 7, 13, 17, 19, 20, 21, 22, 24, 25, 26, 34, 38, 41, 45, 51, 54, 55, 64, 66, 71, 72, 73, 74, 75, 78, 79], "must": [4, 13, 17, 19, 20, 21, 24, 25, 26, 44, 54, 55, 67], "match": [4, 37], "number": [4, 26, 37, 55, 67, 71, 72, 75, 78, 79], "name": [4, 7, 13, 26, 28, 29, 30, 31, 33, 34, 35, 37, 44, 55, 62, 64, 65, 67, 78, 80], "constructor": 4, "interv": [4, 9], "randomforestsurrog": 5, "surrogatemodel": 5, "surrog": 5, "pypdp": 5, "packag": [5, 70], "calcul": [5, 7, 13, 22, 26, 33, 54, 66, 77, 79], "sigma": 5, "nxk": 5, "n": [5, 70], "k": 5, "std": 5, "function": [6, 10, 11, 12, 13, 20, 26, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 65], "get_typ": 6, "config_spac": 6, "hyperparamet": [6, 7, 26, 45, 55, 62, 64, 65, 68, 69, 72, 73, 74, 76, 77, 79, 81], "float": [6, 7, 26, 33, 37, 45, 55], "run": [7, 13, 17, 19, 20, 21, 24, 25, 54, 58, 60, 61, 62, 63, 65, 67, 69, 70, 71, 73, 74, 75, 77, 78, 80, 82], "provid": [7, 13, 17, 19, 21, 24, 37, 58, 69, 71, 73, 74, 77, 78, 79], "midpoint": 7, "size": [7, 55, 64], "from": [7, 13, 17, 19, 20, 21, 24, 25, 26, 34, 37, 41, 43, 44, 45, 54, 55, 58, 60, 62, 64, 65, 67, 69, 70, 73, 74, 78, 79], "": [7, 54, 65, 66, 69, 73, 74, 77, 78], "split": [7, 78], "order": [7, 72, 79], "get": [7, 13, 17, 19, 20, 21, 24, 26, 41, 45, 54, 59, 61, 62, 63, 70, 73, 78, 82], "budget": [7, 13, 20, 26, 33, 37, 39, 58, 62, 64, 65, 68, 69, 72, 73, 74, 76, 77, 78, 79], "wrt": [7, 74, 81], "encod": [7, 26, 55], "right": [7, 34, 58, 79, 80], "now": [7, 65, 70, 73, 82], "us": [7, 13, 15, 20, 22, 26, 33, 34, 37, 41, 44, 51, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78], "It": [7, 13, 66, 73, 77], "can": [7, 13, 20, 26, 34, 45, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80], "further": [7, 26, 67, 71, 78, 79], "union": [7, 10, 12, 13, 17, 19, 20, 21, 24, 25, 26, 33, 34, 37, 55], "considerd": [7, 26], "By": [7, 13, 26, 33, 37, 44, 45, 55, 79], "default": [7, 13, 17, 19, 21, 24, 26, 33, 34, 37, 41, 44, 45, 55, 78, 79], "If": [7, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 44, 51, 54, 55, 59, 61, 69, 70, 71, 72, 75, 77, 78, 80, 82], "ar": [7, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 32, 34, 37, 44, 45, 51, 54, 55, 58, 60, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "consid": [7, 26, 60, 70, 71, 78, 79, 80, 82], "highest": [7, 26, 33, 71, 72, 78, 79], "chosen": [7, 26, 33, 34, 72, 80], "how": [7, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82], "mani": [7, 65, 69, 72, 75, 77, 78, 79], "tree": [7, 26, 77, 79], "should": [7, 13, 24, 26, 33, 34, 37, 54, 55, 67, 68, 71, 77, 80], "get_import": 7, "hp_name": 7, "sort": 7, "import": [7, 13, 60, 62, 64, 65, 71, 73, 74, 77, 78, 79, 80], "score": [7, 62, 71, 72, 73, 79], "higher": [7, 66, 71], "than": [7, 75, 80], "might": [7, 55, 66, 71, 74, 77], "take": [7, 55, 75, 77], "much": [7, 71, 73, 75, 76, 77], "longer": [7, 71, 77], "str": [7, 13, 17, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 33, 34, 37, 43, 44, 47, 51, 54, 55], "often": [7, 74, 78], "dimens": 7, "combin": [7, 26, 37, 67, 68, 69, 72, 74, 75, 79], "bool": [7, 13, 26, 34, 37, 41, 54, 55], "whether": [7, 13, 26, 41, 55, 71, 75, 78], "dictionari": [7, 13, 17, 19, 20, 21, 24, 26, 41, 47], "corresbond": 7, "The": [7, 13, 17, 19, 20, 21, 24, 25, 26, 33, 34, 37, 44, 45, 54, 55, 58, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79], "form": 7, "individu": [7, 80], "total": [7, 60, 62, 64, 65], "note": [7, 26, 60, 73], "same": [7, 13, 17, 19, 20, 21, 24, 25, 26, 55, 60, 71, 72, 73, 77, 79], "dict": [7, 13, 17, 19, 20, 21, 24, 25, 26, 34, 37, 47, 51, 54, 65], "rais": [7, 13, 15, 20, 22, 26, 32, 34, 35, 37, 44, 65], "runtimeerror": [7, 13, 15, 22, 26, 34, 35, 37, 44, 65], "zero": 7, "abc": [10, 13, 15, 22, 26, 37], "abstract": [10, 26, 37], "__call__": [10, 11, 12, 13, 15, 22], "self": [10, 11, 12, 13, 34, 65, 69], "compon": [10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 25], "notfoundlayout": 11, "url": [11, 13, 69], "sidebarlayout": 12, "categorized_plugin": 12, "layout": [13, 15, 17, 19, 20, 21, 22, 24, 25], "id": [13, 26, 33, 34, 37, 54, 74, 78], "uniqu": [13, 58], "identifi": [13, 26, 33, 37, 79], "shown": [13, 55, 73], "navig": 13, "titl": [13, 69], "descript": 13, "displai": [13, 15, 22, 55, 72, 74, 75, 77, 78], "below": 13, "icon": 13, "fontawesom": 13, "help": [13, 66, 69, 72, 79], "path": [13, 28, 29, 30, 31, 34, 37, 44, 58, 65, 67, 70, 82], "file": [13, 26, 33, 34, 37, 41, 44, 58, 66, 67, 70, 77, 82], "button_capt": 13, "caption": 13, "button": [13, 69, 73, 77], "staticplugin": [13, 17, 21, 22], "activate_run_select": [13, 17, 19, 20, 21, 24, 25], "show": [13, 55, 60, 62, 64, 65, 72, 75, 77, 78, 79, 80, 81], "dropdown": 13, "one": [13, 17, 19, 21, 24, 26, 34, 66, 69, 72, 73, 78, 81], "could": [13, 34, 44, 66, 71, 78, 79], "view": [13, 72, 73, 74, 75, 78, 79], "time": [13, 17, 19, 20, 21, 22, 24, 26, 33, 37, 58, 60, 62, 64, 65, 69, 72, 73, 77], "moreov": [13, 26, 69], "prevent": 13, "result": [13, 17, 19, 20, 21, 24, 26, 28, 29, 30, 31, 33, 54, 58, 61, 63, 65, 69, 75, 77], "across": [13, 78], "render_button": 13, "basic": [13, 15, 22, 72, 77], "block": [13, 15, 17, 19, 20, 21, 22, 24, 25, 74, 77], "element": [13, 15, 22], "stack": [13, 15, 22, 78], "up": [13, 15, 22, 26], "here": [13, 15, 22, 60, 64, 71, 72, 73, 74, 78, 79], "static": [13, 17, 19, 20, 21, 24, 25, 77], "check_run_compat": 13, "check": [13, 26, 37, 41, 70, 71, 77, 78, 82], "compat": [13, 20, 26], "you": [13, 55, 58, 59, 60, 61, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82], "abstractrun": [13, 17, 19, 20, 21, 24, 25, 26, 33, 34, 37, 54], "One": [13, 71, 75, 79], "group": [13, 26, 34, 67, 69, 74, 75, 78, 79], "check_runs_compat": [13, 20], "someth": [13, 20, 70, 73, 82], "common": [13, 20], "sinc": [13, 20, 41, 54, 70, 74, 75, 77], "befor": [13, 20, 66, 77], "creat": [13, 20, 24, 34, 37, 41, 54, 58, 70, 77], "notmergeableerror": [13, 20, 32, 34], "an": [13, 20, 22, 26, 34, 38, 45, 55, 59, 61, 62, 63, 68, 69, 71, 72, 77, 78], "error": [13, 20, 34, 78], "thrown": [13, 20, 34], "generate_input": [13, 60], "kwarg": [13, 33, 65], "gener": [13, 45, 55, 69, 71, 73, 77, 78], "process": [13, 17, 19, 20, 21, 24, 26, 58, 62, 69, 70, 71, 73, 77], "load_output": [13, 17, 19, 20, 21, 24, 25, 60], "requir": [13, 55, 77, 82], "api": [13, 60, 69], "mode": [13, 59, 61, 69, 70, 82], "argument": [13, 45, 67], "valid": [13, 32, 65, 67, 73], "against": 13, "schema": 13, "avail": [13, 26, 34, 58, 60, 70, 74, 82], "runtim": 13, "therefor": [13, 17, 19, 20, 21, 24, 25, 58, 69, 78], "beforehand": 13, "ani": [13, 17, 19, 20, 21, 24, 26, 37, 41, 51, 54, 67, 69, 77], "addit": [13, 37, 39, 55, 77], "keyword": 13, "classmethod": [13, 28, 29, 30, 31, 37], "generate_output": [13, 60], "activ": [13, 62, 65, 70], "accept": [13, 67], "either": [13, 26, 44], "multipl": [13, 26, 65, 69, 71, 72, 75, 79, 80, 81], "onc": [13, 67], "intern": [13, 34, 37], "real": 13, "filter": [13, 17, 19, 20, 21, 24, 25, 60, 72, 77, 79], "necessari": [13, 17, 19, 20, 21, 24, 54], "output": [13, 17, 19, 20, 21, 24, 25, 26, 54, 60, 65, 77], "first": [13, 17, 19, 20, 21, 24, 26, 70, 71, 73, 79, 82], "kei": [13, 34, 41, 54], "get_base_url": 13, "cl": 13, "string": [13, 26, 43, 55], "get_filter_layout": [13, 17, 19, 20, 21, 24], "regist": [13, 15, 17, 19, 20, 21, 22, 24, 25, 77], "callabl": [13, 17, 19, 20, 21, 24, 25], "method": [13, 17, 19, 20, 21, 24, 25, 58], "user": [13, 17, 19, 20, 21, 24, 25, 77], "variabl": [13, 17, 19, 20, 21, 24, 60], "get_input_layout": [13, 17, 19, 20, 21, 24], "get_mpl_output_layout": 13, "matplotlib": [13, 60, 69], "get_output_layout": [13, 17, 19, 20, 21, 24, 25], "get_run_input_layout": 13, "case": [13, 17, 19, 21, 24, 26, 37, 66, 72], "get_selected_run": 13, "pars": [13, 44], "otherwis": [13, 34, 69, 75], "possibl": [13, 44, 45, 55, 69, 70, 73, 75, 77, 78], "preventupd": 13, "load_dependency_input": [13, 17, 19, 20, 21, 24, 25], "previous_input": [13, 17, 19, 21, 24], "load_input": [13, 17, 19, 20, 21, 24, 25], "after": [13, 17, 19, 21, 24, 26, 58, 67, 74, 77], "chang": [13, 15, 17, 19, 21, 22, 24, 26, 28, 29, 30, 31, 33, 34, 37, 41, 54, 58, 67, 69, 74, 75, 77, 78, 79, 81], "lot": [13, 17, 19, 21, 24, 73], "flexibl": [13, 17, 19, 21, 24, 69], "merg": [13, 17, 19, 21, 24, 26, 34], "selected_run": [13, 17, 19, 21, 24], "In": [13, 17, 19, 21, 24, 26, 33, 37, 67, 74, 75, 77, 78], "previou": [13, 17, 19, 21, 24, 71], "content": [13, 17, 19, 20, 21, 24, 41, 66], "current": [13, 17, 19, 21, 24, 26, 28, 29, 30, 31, 33, 34, 55, 58, 77], "load": [13, 17, 19, 20, 21, 24, 34, 37, 41, 44, 54, 60], "defin": [13, 17, 19, 20, 21, 24, 25, 62, 65], "pre": [13, 17, 19, 20, 21, 24], "so": [13, 17, 19, 20, 21, 24, 54, 58, 61, 63, 66, 71, 72, 73, 77, 79], "cach": [13, 17, 19, 20, 21, 24, 26, 28, 29, 30, 31, 33, 34, 54, 55, 69, 73, 77], "its": [13, 17, 19, 20, 21, 24, 26, 54, 68, 71, 73, 77], "fill": [13, 17, 19, 20, 21, 24], "load_mpl_output": [13, 60], "read": [13, 17, 19, 20, 21, 24, 25, 41], "raw": [13, 15, 17, 19, 20, 21, 22, 24, 25, 54, 69, 77], "prepar": [13, 17, 19, 20, 21, 24, 25], "them": [13, 17, 19, 20, 21, 24, 25, 26, 55, 67, 73, 79], "clean": [13, 17, 19, 20, 21, 24, 25, 77], "differ": [13, 17, 19, 20, 21, 24, 25, 26, 54, 70, 72, 73, 76, 79], "compar": [13, 17, 19, 20, 21, 24, 25, 72, 75], "pleas": [13, 17, 19, 20, 21, 24, 25, 67, 69], "see": [13, 17, 19, 20, 21, 24, 25, 61, 63, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 82], "_clean_input": [13, 17, 19, 20, 21, 24, 25], "more": [13, 17, 19, 20, 21, 24, 25, 32, 62, 65, 71, 73, 74, 77, 78], "inform": [13, 17, 19, 20, 21, 24, 25, 37, 71, 73, 74, 77, 82], "posit": [13, 17, 19, 20, 21, 24, 25], "load_run_input": 13, "both": [13, 44, 51, 55, 58, 67, 77, 80], "singl": [13, 74, 76], "separ": 13, "json": [13, 17, 19, 20, 21, 24, 41], "serializ": [13, 17, 19, 20, 21, 24], "serial": [13, 17, 19, 20, 21, 24, 43], "register_callback": [13, 15, 22], "callback": [13, 15, 22], "follow": [13, 15, 22, 26, 37, 41, 58, 61, 63, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82], "past": [13, 15, 22], "back": [13, 15, 22, 69, 71], "particular": [13, 15, 22, 55, 72], "interest": [13, 15, 22], "depend": [13, 15, 22, 26, 71], "dialog": [13, 15, 22], "redirect": [13, 15, 22, 67, 80], "click": [13, 15, 22, 79, 80], "_description_": [13, 15, 22, 55], "register_input": 13, "attribut": [13, 26], "server": [13, 66, 67], "map": [13, 72, 77], "which": [13, 24, 26, 34, 45, 54, 55, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "dash": [13, 69], "cast": 13, "global": [13, 26, 33], "register_output": 13, "mpl": 13, "registr": 13, "dynamicplugin": [15, 19, 20, 24, 25], "partialdepend": 17, "configurationcub": 19, "_": [19, 21, 25], "costovertim": 20, "parallelcoordin": [21, 60], "pluginst": 22, "enum": 22, "enumer": [22, 38], "queue": [22, 66, 67, 77], "made": 22, "consum": 22, "task": 22, "get_link": 24, "config_id": [24, 26, 33, 39], "link": [24, 74, 78], "specif": [24, 26, 41, 65, 74, 75, 77, 80], "visit": 24, "encode_config": 26, "normal": [26, 65], "look": [26, 34, 59, 61, 67, 72, 77], "ha": [26, 28, 29, 30, 31, 33, 41, 45, 54, 65, 67, 77, 80], "done": [26, 45, 73, 77], "itself": [26, 71], "get_all_cost": 26, "status": 26, "cost": [26, 33, 37, 39, 62, 64, 65, 67, 73, 77, 80], "histori": [26, 58], "statu": [26, 37, 39, 65, 74, 78], "stati": [26, 65], "get_budget": 26, "human": [26, 69], "want": [26, 55, 59, 61, 67, 70, 75, 80], "convert": [26, 34, 55, 60, 67, 69, 73], "integ": [26, 45], "include_combin": 26, "meta": [26, 28, 29, 30, 31, 34, 37, 58], "make": [26, 58, 59, 61, 66, 67, 69, 70, 71, 74, 79, 82], "better": [26, 68, 71, 75, 80], "readabl": 26, "get_config": 26, "were": [26, 72, 74, 78], "evalu": [26, 71, 72, 73, 74, 75, 78, 79], "includ": [26, 34, 55, 67, 68, 75], "get_cost": 26, "multi": [26, 37, 61, 63, 70, 77], "valueerror": 26, "found": [26, 34, 37, 65, 67, 70, 73, 82], "wa": [26, 34, 54, 58, 66, 70, 71, 72, 73, 74, 77, 78, 79, 82], "associ": [26, 67, 71, 72, 74, 78], "get_encoded_data": 26, "include_config_id": 26, "include_combined_cost": 26, "thei": [26, 54, 71, 72, 78, 79], "model": [26, 37, 65, 77], "encode_i": 26, "too": [26, 66, 75], "implement": [26, 77], "epm": 26, "df": 26, "datafram": [26, 43], "column": [26, 78], "hp1": 26, "hp2": 26, "hpn": 26, "obj1": 26, "obj2": 26, "objm": 26, "combined_cost": 26, "pd": 26, "get_highest_budget": 26, "get_incumb": 26, "incumb": [26, 73], "get_object": 26, "get_objective_id": [26, 60], "objective_id": [26, 60], "get_objective_nam": 26, "involv": 26, "get_statu": 26, "get_trajectori": [26, 33], "trajectori": [26, 33], "costs_mean": [26, 33], "costs_std": [26, 33], "particularli": [26, 33], "trial": [26, 30, 31, 33, 37, 58, 67, 71, 72, 74, 78, 79, 81], "properti": [26, 28, 29, 30, 31, 33, 37], "hash": [26, 28, 29, 30, 31, 33, 34, 37, 54, 58], "clear": [26, 28, 29, 30, 31, 33, 41, 54, 71], "ensur": [26, 28, 29, 30, 31, 33, 54], "alwai": [26, 28, 29, 30, 31, 33], "hold": [26, 28, 29, 30, 31, 33, 54], "latest": [26, 28, 29, 30, 31, 33, 58, 78], "contrast": [26, 33, 37, 75, 77], "throughout": [26, 33, 37, 74], "merge_cost": 26, "weight": [26, 65], "everi": [26, 69], "lower": [26, 35, 62, 64, 65, 71, 73], "length": 26, "origin": [26, 37, 74], "check_equ": 26, "equal": [26, 75], "request": [26, 77], "exclud": 26, "bohbrun": 28, "from_path": [28, 29, 30, 31, 37, 58, 60], "new": [28, 29, 30, 31, 34, 37, 58, 77], "deepcaverun": [29, 60], "smac3v1run": 30, "working_dir": [30, 31], "run_nam": [30, 31], "smac3v2run": 31, "two": [32, 68, 73, 77, 80, 81], "mergeabl": 32, "notvalidrunerror": [32, 34], "directori": [32, 34, 67, 69, 77], "arg": 33, "runhandl": 34, "run_cach": 34, "handl": [34, 41], "automat": [34, 55, 58, 67, 69], "switch": 34, "plugin": [34, 54, 60, 66, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81], "add_run": 34, "run_path": 34, "add": [34, 37, 58, 65, 67, 70, 77, 79], "alreadi": [34, 37, 71, 73, 77], "do": [34, 61, 63, 66, 69, 70, 71, 72, 73, 77, 79, 81, 82], "noth": 34, "get_available_run_path": 34, "get_group": 34, "instanti": [34, 60], "groupedrun": 34, "get_run": 34, "run_id": [34, 62, 65], "insid": [34, 58, 70, 82], "refer": [34, 77, 78], "get_run_nam": 34, "stem": 34, "include_group": 34, "readi": [34, 77], "get_selected_run_nam": 34, "get_selected_run_path": 34, "get_working_directori": 34, "remove_run": 34, "remov": [34, 54, 79], "set_working_directori": 34, "working_directori": 34, "directoi": 34, "updat": [34, 41, 47, 54, 66, 77, 78], "update_group": 34, "save": [34, 54, 55, 61, 63, 69, 77], "update_run": 34, "class_hint": 34, "upper": [35, 62, 64, 65], "optim": [35, 58, 62, 64, 65, 68, 69, 71, 72, 73, 75, 78, 79, 80], "__post_init__": 35, "lock": 35, "space": [37, 45, 71, 72, 73, 75], "start_tim": [37, 39, 65], "end_tim": [37, 39, 65], "success": [37, 65, 78], "exist": [37, 54, 73, 75], "overwritten": 37, "Not": 37, "ad": [37, 47, 67, 70, 82], "expect": [37, 78], "correspond": 37, "end": [37, 60, 62, 64, 65, 74, 77, 78], "quot": [37, 67], "torch": [37, 65], "nn": [37, 65], "traceback": 37, "doe": [37, 54, 71, 72, 73, 75, 77, 79, 81], "intenum": 38, "filenam": [41, 44, 70, 82], "debug": 41, "write_fil": 41, "decid": [41, 68, 75], "flask_cach": 41, "code": [41, 60, 61, 62, 64, 65, 69], "easier": 41, "our": [41, 69, 77], "reset": [41, 54], "retriev": 41, "chain": 41, "b": [41, 47, 75, 80], "c": [41, 64, 65, 70], "4": [41, 45, 55, 58, 65, 70, 82], "set_dict": 41, "d": [41, 45], "write": [41, 58], "deseri": 43, "dtype": 43, "panda": 43, "core": [43, 68], "frame": 43, "typevar": 43, "parse_config": 44, "rel": [44, 67], "absolut": [44, 67], "locat": 44, "python": [44, 60, 61, 62, 64, 65, 69, 70, 74], "inherit": [44, 58, 67], "sample_border_config": 45, "border": [45, 73], "configurationspac": [45, 62, 64, 65], "drawn": 45, "yield": 45, "iter": 45, "sample_random_config": 45, "reduc": 45, "rang": [45, 62, 65, 71, 79], "discret": [45, 55], "For": [45, 68, 71, 77, 79, 80, 81], "exampl": [45, 59, 60, 62, 63, 64, 65, 68, 71, 77, 78, 79, 80, 81], "four": [45, 74], "flash": 46, "messag": 46, "categori": 46, "info": 46, "flask": 46, "style": 46, "alert": 46, "update_dict": 47, "inplac": 47, "get_select_opt": 51, "label": [51, 55, 79], "disabl": [51, 80], "binari": 51, "empti": 51, "runcach": 54, "store": 54, "again": [54, 79], "each": [54, 73], "own": [54, 71, 77], "clear_run": 54, "plugin_id": 54, "inputs_kei": 54, "_dict_as_kei": 54, "variant": 54, "get_color": 55, "id_": 55, "alpha": [55, 64], "plotli": [55, 60], "5": [55, 62, 65, 78, 79], "color": [55, 71, 72], "get_discrete_heatmap": 55, "colorscal": 55, "nest": 55, "numpi": [55, 64, 65], "arrai": 55, "_type_": 55, "get_hyperparameter_tick": 55, "hp": 55, "additional_valu": 55, "tick": 55, "include_nan": 55, "tickval": 55, "ticktext": 55, "background": [55, 73], "don": 55, "t": [55, 65], "With": [55, 79], "6": [55, 70, 82], "behaviour": [55, 79], "ignor": [55, 65], "categor": [55, 79], "forc": 55, "nan": 55, "get_hyperparameter_ticks_from_valu": 55, "boolean": 55, "enforc": 55, "independ": 55, "hex_to_rgb": 55, "hex_str": 55, "rgb": 55, "format": [55, 58, 61, 62, 63], "000000": 55, "ff00ff": 55, "prettify_label": 55, "prettifi": 55, "shorten": 55, "save_imag": 55, "figur": [55, 60, 77], "imag": [55, 67], "fig": 55, "go": [55, 60, 62, 64, 65], "extens": 55, "Will": 55, "deepcav": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 77, 82], "interpret": [58, 67], "sure": [58, 66, 67, 70, 71], "folder": [58, 70, 82], "put": 58, "correctli": 58, "nativ": [58, 69], "smac": [58, 68, 69], "v1": 58, "v2": 58, "bohb": [58, 69], "auto": 58, "sklearn": [58, 61, 63], "pytorch": [58, 61, 63], "observ": 58, "system": 58, "allow": [58, 69, 72, 79], "monitor": 58, "finish": [58, 66], "regularli": 58, "disk": 58, "long": [58, 75], "To": [58, 61, 63, 66, 73, 75, 78, 80], "three": [58, 77], "latest_chang": 58, "when": [58, 66, 71, 72, 73, 75, 77, 78], "available_convert": 58, "your": [58, 61, 63, 64, 66, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 82], "directli": [58, 59, 61, 63, 69, 70, 75, 77], "branch": [58, 77], "py": [58, 60, 62, 64, 65, 67, 77], "next": [58, 70, 73, 77, 78], "did": [58, 78, 79], "fail": 58, "interact": [59, 61, 67, 69, 70, 82], "overview": [59, 61, 73], "wai": [59, 61, 71, 75, 77, 78, 79], "parallel": [59, 61], "coordin": [59, 61], "download": [60, 61, 62, 64, 65, 70, 82], "full": [60, 62, 64, 65, 69, 78], "other": [60, 62, 65, 67, 73, 74, 75], "interfac": [60, 69, 77], "fashion": 60, "parallel_coordin": 60, "__name__": [60, 62, 65], "__main__": [60, 62, 65], "record": [60, 62, 65, 69], "log": [60, 61, 62, 63, 64, 65, 78], "mlp": [60, 65], "run_2": 60, "budget_id": 60, "get_budget_id": 60, "hyperparameter_nam": 60, "get_hyperparameter_nam": 60, "final": [60, 71, 72, 79], "plai": 60, "role": 60, "altern": 60, "write_imag": 60, "test": [60, 65, 70], "png": 60, "script": [60, 62, 64, 65, 70], "minut": [60, 62, 64, 65], "000": [60, 62, 64, 65], "second": [60, 62, 64, 65], "jupyt": [60, 61, 62, 64, 65], "notebook": [60, 61, 62, 64, 65], "ipynb": [60, 62, 64, 65], "incorpor": [61, 63, 65, 71], "idea": [61, 63], "automl": [61, 63, 69, 70, 75, 77], "minim": [61, 63, 68, 77], "layer": [61, 63], "perceptron": [61, 63], "via": [61, 63, 67], "examples_python": 61, "zip": 61, "examples_jupyt": 61, "advanc": [62, 65], "neural_network": 62, "mlpclassifi": 62, "model_select": 62, "train_test_split": 62, "uniformfloathyperparamet": [62, 64, 65], "categoricalhyperparamet": [62, 65], "uniformintegerhyperparamet": [62, 65], "dataset": [62, 65], "load_digit": 62, "def": [62, 65], "get_dataset": 62, "digit": 62, "x_train": 62, "x_test": 62, "y_train": 62, "y_test": 62, "stratifi": 62, "random_st": 62, "get_configspac": [62, 65], "num_neurons_layer1": [62, 65], "100": [62, 64, 65], "num_neurons_layer2": [62, 65], "choic": [62, 65, 75], "logist": 62, "tanh": [62, 65], "relu": [62, 65], "solver": 62, "sgd": 62, "adam": [62, 65], "batch_siz": [62, 65], "learning_r": [62, 65], "0001": [62, 65], "add_hyperparamet": [62, 64, 65], "accuraci": [62, 64, 65, 68, 81], "20": [62, 64, 71], "30": [62, 71], "40": [62, 64, 71], "50": 62, "60": [62, 64], "70": [62, 71], "80": 62, "90": 62, "num_config": [62, 65], "200": 62, "num_run": [62, 65], "save_path": [62, 64, 65], "digits_sklearn": 62, "r": [62, 64, 65], "sample_configur": [62, 64, 65], "clf": 62, "max_it": 62, "hidden_layer_s": 62, "learning_rate_init": 62, "fit": [62, 65], "beta": 64, "constant": 64, "goe": 64, "uniform": [64, 65], "low": [64, 71, 77, 78, 80], "high": [64, 71, 72, 73, 75, 78, 79], "statuss": 65, "strenght": 65, "inspect": [65, 72], "boundargu": 65, "o": 65, "re": [65, 79], "f": 65, "util": 65, "dataload": 65, "random_split": 65, "torchvis": 65, "torchmetr": 65, "mnist": 65, "pytorch_lightn": 65, "pl": 65, "num_work": 65, "mnistmodel": 65, "lightningmodul": 65, "__init__": 65, "dropout_r": 65, "super": 65, "elif": 65, "sigmoid": 65, "els": 65, "data_dir": 65, "join": 65, "getcwd": 65, "num_class": 65, "dim": 65, "28": 65, "channel": 65, "width": 65, "height": 65, "compos": 65, "totensor": 65, "1307": 65, "3081": 65, "prepare_data": 65, "setup": 65, "stage": 65, "assign": 65, "val": 65, "mnist_ful": 65, "mnist_train": 65, "mnist_val": 65, "20000": 65, "40000": 65, "mnist_test": 65, "train_dataload": 65, "val_dataload": 65, "test_dataload": 65, "training_step": 65, "batch": 65, "batch_idx": 65, "logit": 65, "loss": [65, 68], "nll_loss": 65, "validation_step": 65, "pred": 65, "argmax": 65, "val_loss": 65, "prog_bar": 65, "val_acc": 65, "test_step": 65, "configure_optim": 65, "lr": 65, "num_neuron": 65, "32": 65, "sequenti": 65, "flatten": 65, "linear": [65, 78], "dropout": 65, "forward": 65, "log_softmax": 65, "cnn": 65, "conv1": 65, "conv2d": 65, "in_channel": 65, "out_channel": 65, "kernel_s": 65, "stride": 65, "pad": 65, "maxpool2d": 65, "conv2": 65, "fulli": [65, 71], "connect": 65, "out": [65, 78], "7": [65, 71], "9": [65, 70], "256": 65, "sub": [65, 69], "add_condit": 65, "equalscondit": 65, "max_epoch": 65, "8": 65, "n_epoch": 65, "linspac": 65, "num": 65, "1000": 65, "mnist_pytorch": 65, "seed_everyth": 65, "epoch": [65, 68], "round": 65, "trainer": 65, "acceler": 65, "gpu": 65, "devic": 65, "num_sanity_val_step": 65, "No": [65, 71, 79], "saniti": [65, 71, 77, 78], "auto_scale_batch_s": 65, "power": [65, 69], "determinist": 65, "min_epoch": 65, "accuracy_": 65, "loss_": 65, "just": [65, 79], "some": [65, 66, 73, 77, 78], "potenti": 65, "later": 65, "crash": [65, 74, 78, 79], "05": 65, "chanc": 65, "memoryout": 65, "timeout": 65, "elapsed_tim": 65, "what": [66, 71, 73, 78, 79], "wrong": 66, "instal": [66, 67], "redi": 66, "my": [66, 80], "machin": [66, 68, 69], "fastest": 66, "issu": 66, "slow": 66, "circl": 66, "increas": [66, 73, 74, 81], "refresh": [66, 67], "rate": [66, 67, 81], "refresh_r": 66, "step": [67, 70], "command": [67, 70], "addition": 67, "sever": 67, "open": 67, "n_worker": 67, "local": 67, "gui": 67, "browser": 67, "been": [67, 73, 74, 78], "worker": [67, 70], "custom": [67, 69], "like": [67, 69, 70, 71, 73, 75, 79, 82], "ip": 67, "port": 67, "howev": [67, 71, 75, 78], "enclos": 67, "avoid": 67, "reserv": 67, "hit": [67, 73], "enter": 67, "dashboard": [67, 69], "main": [67, 68], "page": [67, 76, 81, 82], "analyz": [67, 69, 71, 72, 74, 79], "action": 67, "collect": [67, 69], "easili": 67, "bo": 68, "bayesian": 68, "black": 68, "box": [68, 78], "algorithm": [68, 73], "weigh": 68, "explor": [68, 69, 73], "exploit": 68, "find": [68, 71, 73, 74, 78, 79, 80], "minimum": 68, "tool": [68, 69], "arbitrari": [68, 71], "learn": [68, 69, 81], "consist": 68, "aggress": 68, "race": 68, "mechan": 68, "effici": [68, 69, 80], "perform": [68, 69, 71, 75, 77, 79, 80], "metric": [68, 74], "maxim": [68, 69], "wherea": 68, "limit": [68, 79], "anyth": 68, "most": [68, 73, 76, 77, 78, 79], "frequent": 68, "neural": [68, 71], "network": [68, 71], "restrict": 68, "subset": 68, "visual": [69, 72, 74, 75, 77, 79], "analysi": [69, 77, 79], "especi": [69, 74], "problem": [69, 70, 79, 80], "framework": 69, "program": 69, "top": [69, 79], "entir": [69, 78], "divers": 69, "insight": [69, 73, 77, 79], "bring": 69, "loop": 69, "modular": 69, "structur": 69, "extend": 69, "effortlessli": 69, "complet": [69, 77, 79], "written": 69, "while": [69, 74, 77], "detect": 69, "larg": [69, 76], "area": 69, "access": [69, 70, 74, 82], "asynchron": 69, "execut": 69, "expens": 69, "integr": 69, "document": 69, "understand": [69, 73, 77, 78], "plot": [69, 72, 78, 80], "public": 69, "give": [69, 72, 74, 77, 82], "research": 69, "project": 69, "cite": 69, "realml": 69, "icml": 69, "22": 69, "workshop": 69, "paper": 69, "misc": 69, "sass": 69, "realml2022": 69, "autom": 69, "author": 69, "ren\u00e9": 69, "bergman": 69, "eddi": 69, "biedenkapp": 69, "andr\u00e9": 69, "hutter": 69, "frank": 69, "lindauer": 69, "mariu": 69, "doi": 69, "48550": 69, "arxiv": 69, "2206": 69, "03493": 69, "http": [69, 70, 82], "org": 69, "ab": 69, "publish": 69, "year": 69, "2022": 69, "copyright": 69, "perpetu": 69, "non": 69, "exclus": 69, "licens": 69, "brew": [70, 82], "sudo": [70, 82], "apt": [70, 82], "linux": [70, 82], "section": [70, 74, 78], "exten": 70, "instruct": 70, "bash": 70, "servic": 70, "webserv": 70, "window": 70, "recommend": [70, 77], "anaconda": 70, "swig": 70, "environ": 70, "conda": 70, "pip": 70, "contribut": 70, "github": 70, "dev": 70, "git": 70, "clone": 70, "com": 70, "try": [70, 71, 73, 78, 82], "usr": [70, 82], "sbin": [70, 82], "simpli": [70, 74, 82], "expand": [70, 82], "export": [70, 82], "bashrc": [70, 82], "admin": [70, 82], "root": [70, 82], "tar": [70, 82], "gz": [70, 82], "mkdir": [70, 82], "p": [70, 82], "vendor": [70, 82], "cd": [70, 82], "wget": [70, 82], "io": [70, 82], "releas": [70, 82], "xzvf": [70, 82], "rm": [70, 82], "pwd": [70, 82], "m1": 70, "disable_spr": 70, "objc_disable_initialize_fork_safeti": 70, "ye": [70, 79], "bash_profil": 70, "enabl": [70, 79, 80], "representit": 71, "gain": [71, 75], "knowledg": [71, 73], "about": [71, 73, 74, 78], "well": [71, 73, 78, 79], "know": [71, 73, 74, 75, 78, 79], "good": [71, 73, 75, 80], "enough": 71, "infer": [71, 73], "would": [71, 75, 77, 78], "conversli": 71, "realli": [71, 79], "converg": [71, 75], "reach": [71, 75, 79], "still": [71, 73], "continu": 71, "till": 71, "between": [71, 73, 75, 76, 78], "capabl": [71, 73, 74, 75, 76, 78, 80, 81], "answer": [71, 72, 73, 74, 75, 76, 78, 79, 80, 81], "question": [71, 72, 73, 74, 75, 76, 78, 79, 80, 81], "fair": [71, 78], "represent": [71, 73], "cover": [71, 73], "wish": [71, 72, 79], "commun": [71, 72], "through": [71, 72, 73, 79], "heatmap": [71, 72, 78], "thing": 71, "perfectli": 71, "trace": 71, "ll": [71, 73, 78], "mid": 71, "slowli": 71, "drop": 71, "There": [71, 73, 77], "great": 71, "certain": [71, 72, 74, 75, 78, 79], "extra": 71, "resourc": [71, 73], "determin": [71, 74, 75, 79], "less": 71, "faster": [71, 75], "lowest": 71, "achiev": [71, 73, 75, 79], "least": 71, "rather": 71, "context": 71, "dynam": [71, 77, 79], "text": 71, "veri": [71, 72, 77], "strong": 71, "relationship": 71, "69": 71, "39": 71, "moder": 71, "29": 71, "weak": 71, "01": 71, "19": 71, "neglig": 71, "natur": 72, "mai": [72, 79], "dimension": [72, 73, 77], "investig": 72, "2d": [72, 73], "3d": 72, "slice": 72, "under": [72, 73, 76, 78, 79, 81], "slider": 72, "where": [72, 73, 74, 80], "move": 72, "along": [72, 78, 79], "chose": 72, "hyperparamt": [72, 79], "1d": 72, "grid": 72, "evid": 72, "influenc": [72, 73, 75, 76, 77], "anoth": 72, "tend": [72, 79], "prefer": [72, 73, 79, 80], "correl": 72, "respect": 72, "known": 73, "dure": [73, 78], "These": [73, 78, 79], "stop": 73, "invest": 73, "comput": [73, 80], "favor": 73, "let": [73, 74, 78, 79], "briefli": 73, "mention": [73, 75], "variou": [73, 79], "kind": [73, 77], "concern": 73, "best": [73, 75, 78, 80], "red": 73, "triangl": 73, "orang": 73, "unevalu": 73, "purpl": 73, "edg": 73, "min": 73, "max": 73, "scalar": 73, "around": 73, "those": [73, 79], "address": 73, "repres": 73, "reduct": 73, "md": 73, "attempt": 73, "preserv": 73, "distanc": 73, "spaceto": 73, "Of": 73, "cours": 73, "perfect": [73, 75, 78], "begin": 73, "talk": 73, "share": [73, 79], "axi": [73, 75, 78, 79], "co": 73, "ordin": 73, "swap": 73, "benefici": 73, "firm": 73, "grasp": 73, "perhap": 73, "mous": 73, "tell": [73, 74, 76], "possibli": 73, "noisi": 73, "rest": 73, "colour": [73, 78], "represnt": 73, "estim": 73, "region": 73, "resolut": 73, "detail": [73, 77, 78, 79, 80], "gridsiz": 73, "nice": [73, 74, 78], "quit": [73, 79], "ideal": [73, 78], "blob": 73, "small": 73, "cluster": 73, "focus": 73, "scatter": 73, "part": [74, 78], "applic": 74, "come": 74, "hand": [74, 79], "tabl": 74, "why": [74, 78], "graph": [74, 75], "concret": 74, "deploy": 74, "crucial": 74, "somehow": 74, "wise": [74, 77], "goal": [75, 77], "peak": 75, "comparison": [75, 80], "conveni": 75, "logarithm": 75, "adition": 75, "As": 75, "abov": [75, 79], "line": [75, 78, 79], "wors": 75, "spread": 75, "construct": [76, 81], "analys": 77, "aspect": 77, "easi": [77, 79], "serv": [77, 78], "deeper": 77, "suit": 77, "trigger": 77, "act": 77, "immedi": 77, "describ": 77, "quick": 77, "soon": 77, "decis": 77, "viewabl": 77, "side": 77, "bar": [77, 78, 79], "upon": 77, "design": 77, "adapt": 77, "happi": 77, "receiv": 77, "pull": 77, "statist": 78, "unsuccess": [78, 79], "On": 78, "regard": 78, "summari": 78, "notabl": 78, "tri": 78, "last": [78, 79], "alloc": 78, "barplot": 78, "occur": 78, "tab": 78, "reciev": 78, "accord": [78, 79], "exit": 78, "progress": 78, "scenario": 78, "mostli": 78, "span": 78, "not_evalu": 78, "face": 78, "onward": 78, "balanc": 78, "breif": 78, "lastli": [78, 79], "being": 78, "scale": 78, "v": 78, "trend": 79, "left": 79, "ones": 79, "place": 79, "spine": 79, "home": 79, "lead": 79, "incom": 79, "arrang": 79, "instead": 79, "crowd": 79, "manag": 79, "caus": 79, "overwhelm": 79, "draw": 79, "drag": 79, "togeth": 79, "relev": 79, "sens": 79, "sometim": 79, "similar": [79, 81], "situat": 80, "due": 80, "suitabl": 80, "choos": 80, "slightli": 80, "decreas": 81, "behavior": 81, "mac": 82}, "objects": {"deepcave": [[1, 0, 0, "-", "evaluators"], [10, 0, 0, "-", "layouts"], [13, 0, 0, "-", "plugins"], [26, 0, 0, "-", "runs"], [40, 0, 0, "-", "utils"]], "deepcave.evaluators": [[2, 0, 0, "-", "epm"], [7, 0, 0, "-", "fanova"], [8, 0, 0, "-", "footprint"], [9, 0, 0, "-", "lpi"]], "deepcave.evaluators.epm": [[3, 0, 0, "-", "fanova_forest"], [4, 0, 0, "-", "random_forest"], [5, 0, 0, "-", "random_forest_surrogate"], [6, 0, 0, "-", "utils"]], "deepcave.evaluators.epm.fanova_forest": [[3, 1, 1, "", "FanovaForest"]], "deepcave.evaluators.epm.fanova_forest.FanovaForest": [[3, 2, 1, "", "compute_marginals"]], "deepcave.evaluators.epm.random_forest": [[4, 1, 1, "", "RandomForest"], [4, 3, 1, "", "random"]], "deepcave.evaluators.epm.random_forest.RandomForest": [[4, 2, 1, "", "predict"], [4, 2, 1, "", "predict_marginalized"], [4, 2, 1, "", "train"]], "deepcave.evaluators.epm.random_forest_surrogate": [[5, 1, 1, "", "RandomForestSurrogate"]], "deepcave.evaluators.epm.random_forest_surrogate.RandomForestSurrogate": [[5, 2, 1, "", "predict"]], "deepcave.evaluators.epm.utils": [[6, 3, 1, "", "get_types"]], "deepcave.evaluators.fanova": [[7, 1, 1, "", "fANOVA"]], "deepcave.evaluators.fanova.fANOVA": [[7, 2, 1, "", "calculate"], [7, 2, 1, "", "get_importances"]], "deepcave.evaluators.lpi": [[9, 3, 1, "", "random"]], "deepcave.layouts": [[10, 1, 1, "", "Layout"], [11, 0, 0, "-", "not_found"], [12, 0, 0, "-", "sidebar"]], "deepcave.layouts.Layout": [[10, 2, 1, "", "__call__"]], "deepcave.layouts.not_found": [[11, 1, 1, "", "NotFoundLayout"]], "deepcave.layouts.not_found.NotFoundLayout": [[11, 2, 1, "", "__call__"]], "deepcave.layouts.sidebar": [[12, 1, 1, "", "SidebarLayout"]], "deepcave.layouts.sidebar.SidebarLayout": [[12, 2, 1, "", "__call__"]], "deepcave.plugins": [[13, 1, 1, "", "Plugin"], [14, 0, 0, "-", "budget"], [15, 0, 0, "-", "dynamic"], [16, 0, 0, "-", "hyperparameter"], [18, 0, 0, "-", "objective"], [22, 0, 0, "-", "static"], [23, 0, 0, "-", "summary"]], "deepcave.plugins.Plugin": [[13, 2, 1, "", "__call__"], [13, 4, 1, "", "activate_run_selection"], [13, 4, 1, "", "button_caption"], [13, 2, 1, "", "check_run_compatibility"], [13, 2, 1, "", "check_runs_compatibility"], [13, 4, 1, "", "description"], [13, 2, 1, "", "generate_inputs"], [13, 2, 1, "", "generate_outputs"], [13, 2, 1, "", "get_base_url"], [13, 2, 1, "", "get_filter_layout"], [13, 2, 1, "", "get_input_layout"], [13, 2, 1, "", "get_mpl_output_layout"], [13, 2, 1, "", "get_output_layout"], [13, 2, 1, "", "get_run_input_layout"], [13, 2, 1, "", "get_selected_runs"], [13, 4, 1, "", "help"], [13, 4, 1, "", "icon"], [13, 4, 1, "", "id"], [13, 2, 1, "", "load_dependency_inputs"], [13, 2, 1, "", "load_inputs"], [13, 2, 1, "", "load_mpl_outputs"], [13, 2, 1, "", "load_outputs"], [13, 2, 1, "", "load_run_inputs"], [13, 4, 1, "", "name"], [13, 2, 1, "", "process"], [13, 2, 1, "", "register_callbacks"], [13, 2, 1, "", "register_input"], [13, 2, 1, "", "register_output"]], "deepcave.plugins.dynamic": [[15, 1, 1, "", "DynamicPlugin"]], "deepcave.plugins.dynamic.DynamicPlugin": [[15, 2, 1, "", "__call__"], [15, 2, 1, "", "register_callbacks"]], "deepcave.plugins.hyperparameter": [[17, 0, 0, "-", "pdp"]], "deepcave.plugins.hyperparameter.pdp": [[17, 1, 1, "", "PartialDependencies"]], "deepcave.plugins.hyperparameter.pdp.PartialDependencies": [[17, 2, 1, "", "get_filter_layout"], [17, 2, 1, "", "get_input_layout"], [17, 2, 1, "", "get_output_layout"], [17, 2, 1, "", "load_dependency_inputs"], [17, 2, 1, "", "load_inputs"], [17, 2, 1, "", "load_outputs"], [17, 2, 1, "", "process"]], "deepcave.plugins.objective": [[19, 0, 0, "-", "configuration_cube"], [20, 0, 0, "-", "cost_over_time"], [21, 0, 0, "-", "parallel_coordinates"]], "deepcave.plugins.objective.configuration_cube": [[19, 1, 1, "", "ConfigurationCube"]], "deepcave.plugins.objective.configuration_cube.ConfigurationCube": [[19, 2, 1, "", "get_filter_layout"], [19, 2, 1, "", "get_input_layout"], [19, 2, 1, "", "get_output_layout"], [19, 2, 1, "", "load_dependency_inputs"], [19, 2, 1, "", "load_inputs"], [19, 2, 1, "", "load_outputs"], [19, 2, 1, "", "process"]], "deepcave.plugins.objective.cost_over_time": [[20, 1, 1, "", "CostOverTime"]], "deepcave.plugins.objective.cost_over_time.CostOverTime": [[20, 2, 1, "", "check_runs_compatibility"], [20, 2, 1, "", "get_filter_layout"], [20, 2, 1, "", "get_input_layout"], [20, 2, 1, "", "get_output_layout"], [20, 2, 1, "", "load_inputs"], [20, 2, 1, "", "load_outputs"], [20, 2, 1, "", "process"]], "deepcave.plugins.objective.parallel_coordinates": [[21, 1, 1, "", "ParallelCoordinates"]], "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates": [[21, 2, 1, "", "get_filter_layout"], [21, 2, 1, "", "get_input_layout"], [21, 2, 1, "", "get_output_layout"], [21, 2, 1, "", "load_dependency_inputs"], [21, 2, 1, "", "load_inputs"], [21, 2, 1, "", "load_outputs"], [21, 2, 1, "", "process"]], "deepcave.plugins.static": [[22, 1, 1, "", "PluginState"], [22, 1, 1, "", "StaticPlugin"]], "deepcave.plugins.static.StaticPlugin": [[22, 2, 1, "", "__call__"], [22, 2, 1, "", "register_callbacks"]], "deepcave.plugins.summary": [[24, 0, 0, "-", "configurations"], [25, 0, 0, "-", "overview"]], "deepcave.plugins.summary.configurations": [[24, 1, 1, "", "Configurations"]], "deepcave.plugins.summary.configurations.Configurations": [[24, 2, 1, "", "get_input_layout"], [24, 2, 1, "", "get_link"], [24, 2, 1, "", "get_output_layout"], [24, 2, 1, "", "load_dependency_inputs"], [24, 2, 1, "", "load_inputs"], [24, 2, 1, "", "load_outputs"], [24, 2, 1, "", "process"]], "deepcave.plugins.summary.overview": [[25, 1, 1, "", "Overview"]], "deepcave.plugins.summary.overview.Overview": [[25, 2, 1, "", "get_output_layout"], [25, 2, 1, "", "load_outputs"]], "deepcave.runs": [[26, 1, 1, "", "AbstractRun"], [26, 3, 1, "", "check_equality"], [27, 0, 0, "-", "converters"], [32, 0, 0, "-", "exceptions"], [33, 0, 0, "-", "group"], [34, 0, 0, "-", "handler"], [35, 0, 0, "-", "objective"], [36, 0, 0, "-", "recorder"], [37, 0, 0, "-", "run"], [38, 0, 0, "-", "status"], [39, 0, 0, "-", "trial"]], "deepcave.runs.AbstractRun": [[26, 2, 1, "", "encode_config"], [26, 2, 1, "", "get_all_costs"], [26, 2, 1, "", "get_budget"], [26, 2, 1, "", "get_budgets"], [26, 2, 1, "", "get_configs"], [26, 2, 1, "", "get_costs"], [26, 2, 1, "", "get_encoded_data"], [26, 2, 1, "", "get_highest_budget"], [26, 2, 1, "", "get_incumbent"], [26, 2, 1, "", "get_objective"], [26, 2, 1, "", "get_objective_id"], [26, 2, 1, "", "get_objective_name"], [26, 2, 1, "", "get_status"], [26, 2, 1, "", "get_trajectory"], [26, 5, 1, "", "hash"], [26, 5, 1, "", "id"], [26, 2, 1, "", "merge_costs"]], "deepcave.runs.converters": [[28, 0, 0, "-", "bohb"], [29, 0, 0, "-", "deepcave"], [30, 0, 0, "-", "smac3v1"], [31, 0, 0, "-", "smac3v2"]], "deepcave.runs.converters.bohb": [[28, 1, 1, "", "BOHBRun"]], "deepcave.runs.converters.bohb.BOHBRun": [[28, 2, 1, "", "from_path"], [28, 5, 1, "", "hash"]], "deepcave.runs.converters.deepcave": [[29, 1, 1, "", "DeepCAVERun"]], "deepcave.runs.converters.deepcave.DeepCAVERun": [[29, 2, 1, "", "from_path"], [29, 5, 1, "", "hash"]], "deepcave.runs.converters.smac3v1": [[30, 1, 1, "", "SMAC3v1Run"]], "deepcave.runs.converters.smac3v1.SMAC3v1Run": [[30, 2, 1, "", "from_path"], [30, 5, 1, "", "hash"]], "deepcave.runs.converters.smac3v2": [[31, 1, 1, "", "SMAC3v2Run"]], "deepcave.runs.converters.smac3v2.SMAC3v2Run": [[31, 2, 1, "", "from_path"], [31, 5, 1, "", "hash"]], "deepcave.runs.exceptions": [[32, 6, 1, "", "NotMergeableError"], [32, 6, 1, "", "NotValidRunError"]], "deepcave.runs.group": [[33, 1, 1, "", "Group"]], "deepcave.runs.group.Group": [[33, 2, 1, "", "get_trajectory"], [33, 5, 1, "", "hash"], [33, 5, 1, "", "id"]], "deepcave.runs.handler": [[34, 1, 1, "", "RunHandler"]], "deepcave.runs.handler.RunHandler": [[34, 2, 1, "", "add_run"], [34, 2, 1, "", "get_available_run_paths"], [34, 2, 1, "", "get_groups"], [34, 2, 1, "", "get_run"], [34, 2, 1, "", "get_run_name"], [34, 2, 1, "", "get_runs"], [34, 2, 1, "", "get_selected_run_names"], [34, 2, 1, "", "get_selected_run_paths"], [34, 2, 1, "", "get_working_directory"], [34, 2, 1, "", "remove_run"], [34, 2, 1, "", "set_working_directory"], [34, 2, 1, "", "update"], [34, 2, 1, "", "update_groups"], [34, 2, 1, "", "update_run"], [34, 2, 1, "", "update_runs"]], "deepcave.runs.objective": [[35, 1, 1, "", "Objective"]], "deepcave.runs.objective.Objective": [[35, 2, 1, "", "__post_init__"]], "deepcave.runs.run": [[37, 1, 1, "", "Run"]], "deepcave.runs.run.Run": [[37, 2, 1, "", "add"], [37, 2, 1, "", "exists"], [37, 2, 1, "", "from_path"], [37, 5, 1, "", "id"]], "deepcave.runs.status": [[38, 1, 1, "", "Status"]], "deepcave.runs.trial": [[39, 1, 1, "", "Trial"]], "deepcave.utils": [[41, 0, 0, "-", "cache"], [42, 0, 0, "-", "cast"], [43, 0, 0, "-", "compression"], [44, 0, 0, "-", "configs"], [45, 0, 0, "-", "configspace"], [46, 0, 0, "-", "dash"], [47, 0, 0, "-", "data_structures"], [48, 0, 0, "-", "docs"], [49, 0, 0, "-", "files"], [50, 0, 0, "-", "hash"], [51, 0, 0, "-", "layout"], [52, 0, 0, "-", "logs"], [53, 0, 0, "-", "notification"], [54, 0, 0, "-", "run_caches"], [55, 0, 0, "-", "styled_plotty"], [56, 0, 0, "-", "url"], [57, 0, 0, "-", "util"]], "deepcave.utils.cache": [[41, 1, 1, "", "Cache"]], "deepcave.utils.cache.Cache": [[41, 2, 1, "", "clear"], [41, 2, 1, "", "get"], [41, 2, 1, "", "has"], [41, 2, 1, "", "read"], [41, 2, 1, "", "set"], [41, 2, 1, "", "set_dict"], [41, 2, 1, "", "write"]], "deepcave.utils.compression": [[43, 3, 1, "", "deserialize"], [43, 3, 1, "", "serialize"]], "deepcave.utils.configs": [[44, 3, 1, "", "parse_config"]], "deepcave.utils.configspace": [[45, 3, 1, "", "sample_border_config"], [45, 3, 1, "", "sample_random_config"]], "deepcave.utils.dash": [[46, 3, 1, "", "flash"]], "deepcave.utils.data_structures": [[47, 3, 1, "", "update_dict"]], "deepcave.utils.layout": [[51, 3, 1, "", "get_select_options"]], "deepcave.utils.run_caches": [[54, 1, 1, "", "RunCaches"]], "deepcave.utils.run_caches.RunCaches": [[54, 2, 1, "", "clear"], [54, 2, 1, "", "clear_run"], [54, 2, 1, "", "get"], [54, 2, 1, "", "set"], [54, 2, 1, "", "update"]], "deepcave.utils.styled_plotty": [[55, 3, 1, "", "get_color"], [55, 3, 1, "", "get_discrete_heatmap"], [55, 3, 1, "", "get_hyperparameter_ticks"], [55, 3, 1, "", "get_hyperparameter_ticks_from_values"], [55, 3, 1, "", "hex_to_rgb"], [55, 3, 1, "", "prettify_label"], [55, 3, 1, "", "save_image"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"api": [0, 59, 61], "refer": 0, "deepcav": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "evalu": [1, 2, 3, 4, 5, 6, 7, 8, 9], "epm": [2, 3, 4, 5, 6], "fanova_forest": 3, "random_forest": 4, "random_forest_surrog": 5, "util": [6, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "fanova": 7, "footprint": [8, 73], "lpi": 9, "layout": [10, 11, 12, 51], "not_found": 11, "sidebar": 12, "plugin": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 77], "budget": [14, 71], "dynam": 15, "hyperparamet": [16, 17], "pdp": 17, "object": [18, 19, 20, 21, 35, 74, 78], "configuration_cub": 19, "cost_over_tim": 20, "parallel_coordin": 21, "static": 22, "summari": [23, 24, 25], "configur": [24, 72, 73, 74, 78], "overview": [25, 74, 78], "run": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 64], "convert": [27, 28, 29, 30, 31, 58], "bohb": 28, "smac3v1": 30, "smac3v2": 31, "except": 32, "group": 33, "handler": 34, "record": [36, 61, 63, 64], "statu": 38, "trial": 39, "cach": 41, "cast": 42, "compress": 43, "config": 44, "configspac": 45, "dash": 46, "data_structur": 47, "doc": 48, "file": 49, "hash": 50, "log": 52, "notif": 53, "run_cach": 54, "styled_plotti": 55, "url": 56, "custom": [58, 77], "parallel": [60, 79], "coordin": [60, 79], "exampl": 61, "multi": [62, 65], "layer": [62, 65], "perceptron": [62, 65], "via": [62, 65], "sklearn": 62, "minim": 64, "pytorch": 65, "frequent": 66, "ask": 66, "question": 66, "get": 67, "start": 67, "glossari": 68, "home": 69, "featur": 69, "citat": 69, "instal": [70, 82], "redi": [70, 82], "server": [70, 82], "mac": 70, "relat": 70, "correl": 71, "option": [71, 79], "interpret": [71, 75], "cube": 72, "perform": 73, "plot": [73, 79], "coverag": 73, "code": 74, "cost": 75, "over": 75, "time": 75, "input": 75, "filter": 75, "import": 76, "structur": 77, "type": 77, "quick": 78, "inform": 78, "meta": 78, "status": 78, "space": 78, "us": 79, "pareto": 80, "front": 80, "partial": 81, "depend": 81}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"API References": [[0, "api-references"]], "deepcave.evaluators": [[1, "module-deepcave.evaluators"]], "deepcave.evaluators.epm": [[2, "module-deepcave.evaluators.epm"]], "deepcave.evaluators.epm.fanova_forest": [[3, "module-deepcave.evaluators.epm.fanova_forest"]], "deepcave.evaluators.epm.random_forest": [[4, "module-deepcave.evaluators.epm.random_forest"]], "deepcave.evaluators.epm.random_forest_surrogate": [[5, "module-deepcave.evaluators.epm.random_forest_surrogate"]], "deepcave.evaluators.epm.utils": [[6, "module-deepcave.evaluators.epm.utils"]], "deepcave.evaluators.fanova": [[7, "module-deepcave.evaluators.fanova"]], "deepcave.evaluators.footprint": [[8, "module-deepcave.evaluators.footprint"]], "deepcave.evaluators.lpi": [[9, "module-deepcave.evaluators.lpi"]], "deepcave.layouts": [[10, "module-deepcave.layouts"]], "deepcave.layouts.not_found": [[11, "module-deepcave.layouts.not_found"]], "deepcave.layouts.sidebar": [[12, "module-deepcave.layouts.sidebar"]], "deepcave.plugins": [[13, "module-deepcave.plugins"]], "deepcave.plugins.budget": [[14, "module-deepcave.plugins.budget"]], "deepcave.plugins.dynamic": [[15, "module-deepcave.plugins.dynamic"]], "deepcave.plugins.hyperparameter": [[16, "module-deepcave.plugins.hyperparameter"]], "deepcave.plugins.hyperparameter.pdp": [[17, "module-deepcave.plugins.hyperparameter.pdp"]], "deepcave.plugins.objective": [[18, "module-deepcave.plugins.objective"]], "deepcave.plugins.objective.configuration_cube": [[19, "module-deepcave.plugins.objective.configuration_cube"]], "deepcave.plugins.objective.cost_over_time": [[20, "module-deepcave.plugins.objective.cost_over_time"]], "deepcave.plugins.objective.parallel_coordinates": [[21, "module-deepcave.plugins.objective.parallel_coordinates"]], "deepcave.plugins.static": [[22, "module-deepcave.plugins.static"]], "deepcave.plugins.summary": [[23, "module-deepcave.plugins.summary"]], "deepcave.plugins.summary.configurations": [[24, "module-deepcave.plugins.summary.configurations"]], "deepcave.plugins.summary.overview": [[25, "module-deepcave.plugins.summary.overview"]], "deepcave.runs": [[26, "module-deepcave.runs"]], "deepcave.runs.converters": [[27, "module-deepcave.runs.converters"]], "deepcave.runs.converters.bohb": [[28, "module-deepcave.runs.converters.bohb"]], "deepcave.runs.converters.deepcave": [[29, "module-deepcave.runs.converters.deepcave"]], "deepcave.runs.converters.smac3v1": [[30, "module-deepcave.runs.converters.smac3v1"]], "deepcave.runs.converters.smac3v2": [[31, "module-deepcave.runs.converters.smac3v2"]], "deepcave.runs.exceptions": [[32, "module-deepcave.runs.exceptions"]], "deepcave.runs.group": [[33, "module-deepcave.runs.group"]], "deepcave.runs.handler": [[34, "module-deepcave.runs.handler"]], "deepcave.runs.objective": [[35, "module-deepcave.runs.objective"]], "deepcave.runs.recorder": [[36, "module-deepcave.runs.recorder"]], "deepcave.runs.run": [[37, "module-deepcave.runs.run"]], "deepcave.runs.status": [[38, "module-deepcave.runs.status"]], "deepcave.runs.trial": [[39, "module-deepcave.runs.trial"]], "deepcave.utils": [[40, "module-deepcave.utils"]], "deepcave.utils.cache": [[41, "module-deepcave.utils.cache"]], "deepcave.utils.cast": [[42, "module-deepcave.utils.cast"]], "deepcave.utils.compression": [[43, "module-deepcave.utils.compression"]], "deepcave.utils.configs": [[44, "module-deepcave.utils.configs"]], "deepcave.utils.configspace": [[45, "module-deepcave.utils.configspace"]], "deepcave.utils.dash": [[46, "module-deepcave.utils.dash"]], "deepcave.utils.data_structures": [[47, "module-deepcave.utils.data_structures"]], "deepcave.utils.docs": [[48, "module-deepcave.utils.docs"]], "deepcave.utils.files": [[49, "module-deepcave.utils.files"]], "deepcave.utils.hash": [[50, "module-deepcave.utils.hash"]], "deepcave.utils.layout": [[51, "module-deepcave.utils.layout"]], "deepcave.utils.logs": [[52, "module-deepcave.utils.logs"]], "deepcave.utils.notification": [[53, "module-deepcave.utils.notification"]], "deepcave.utils.run_caches": [[54, "module-deepcave.utils.run_caches"]], "deepcave.utils.styled_plotty": [[55, "module-deepcave.utils.styled_plotty"]], "deepcave.utils.url": [[56, "module-deepcave.utils.url"]], "deepcave.utils.util": [[57, "module-deepcave.utils.util"]], "Converters": [[58, "converters"]], "Custom Converter": [[58, "custom-converter"]], "API": [[59, "api"], [61, "api"]], "Parallel Coordinates": [[60, "parallel-coordinates"], [79, "parallel-coordinates"]], "Examples": [[61, "examples"]], "Record": [[61, "record"], [63, "record"]], "Multi-Layer Perceptron via Sklearn": [[62, "multi-layer-perceptron-via-sklearn"]], "Record Minimal Run": [[64, "record-minimal-run"]], "Multi-Layer Perceptron via PyTorch": [[65, "multi-layer-perceptron-via-pytorch"]], "Frequently Asked Questions": [[66, "frequently-asked-questions"]], "Getting Started": [[67, "getting-started"]], "Glossary": [[68, "glossary"]], "Home": [[69, "home"]], "Features": [[69, "features"]], "Citation": [[69, "citation"]], "Installation": [[70, "installation"]], "Redis Server": [[70, "id1"]], "Mac Related": [[70, "mac-related"]], "Budget Correlation": [[71, "budget-correlation"]], "Options": [[71, "options"], [79, "options"]], "Correlation Interpretation": [[71, "correlation-interpretation"]], "Configuration Cube": [[72, "configuration-cube"]], "Configuration Footprint": [[73, "configuration-footprint"]], "Performance plot": [[73, "performance-plot"]], "Coverage plot": [[73, "coverage-plot"]], "Configurations": [[74, "configurations"]], "Overview": [[74, "overview"], [78, "overview"]], "Objectives": [[74, "objectives"], [78, "objectives"]], "Configuration": [[74, "configuration"]], "Code": [[74, "code"]], "Cost Over Time": [[75, "cost-over-time"]], "Inputs and Filters": [[75, "inputs-and-filters"]], "Interpretation": [[75, "interpretation"]], "Importances": [[76, "importances"]], "Plugins": [[77, "plugins"]], "Plugin Structure": [[77, "plugin-structure"]], "Plugin Types": [[77, "plugin-types"]], "Custom Plugin": [[77, "custom-plugin"]], "Quick Information": [[78, "quick-information"]], "Meta": [[78, "meta"]], "Statuses": [[78, "statuses"]], "Configuration Space": [[78, "configuration-space"]], "Using the plot": [[79, "using-the-plot"]], "Pareto Front": [[80, "pareto-front"]], "Partial Dependencies": [[81, "partial-dependencies"]], "Install Redis Server": [[82, "install-redis-server"]]}, "indexentries": {"deepcave.evaluators": [[1, "module-deepcave.evaluators"]], "module": [[1, "module-deepcave.evaluators"], [2, "module-deepcave.evaluators.epm"], [3, "module-deepcave.evaluators.epm.fanova_forest"], [4, "module-deepcave.evaluators.epm.random_forest"], [5, "module-deepcave.evaluators.epm.random_forest_surrogate"], [6, "module-deepcave.evaluators.epm.utils"], [7, "module-deepcave.evaluators.fanova"], [8, "module-deepcave.evaluators.footprint"], [9, "module-deepcave.evaluators.lpi"], [10, "module-deepcave.layouts"], [11, "module-deepcave.layouts.not_found"], [12, "module-deepcave.layouts.sidebar"], [13, "module-deepcave.plugins"], [14, "module-deepcave.plugins.budget"], [15, "module-deepcave.plugins.dynamic"], [16, "module-deepcave.plugins.hyperparameter"], [17, "module-deepcave.plugins.hyperparameter.pdp"], [18, "module-deepcave.plugins.objective"], [19, "module-deepcave.plugins.objective.configuration_cube"], [20, "module-deepcave.plugins.objective.cost_over_time"], [21, "module-deepcave.plugins.objective.parallel_coordinates"], [22, "module-deepcave.plugins.static"], [23, "module-deepcave.plugins.summary"], [24, "module-deepcave.plugins.summary.configurations"], [25, "module-deepcave.plugins.summary.overview"], [26, "module-deepcave.runs"], [27, "module-deepcave.runs.converters"], [28, "module-deepcave.runs.converters.bohb"], [29, "module-deepcave.runs.converters.deepcave"], [30, "module-deepcave.runs.converters.smac3v1"], [31, "module-deepcave.runs.converters.smac3v2"], [32, "module-deepcave.runs.exceptions"], [33, "module-deepcave.runs.group"], [34, "module-deepcave.runs.handler"], [35, "module-deepcave.runs.objective"], [36, "module-deepcave.runs.recorder"], [37, "module-deepcave.runs.run"], [38, "module-deepcave.runs.status"], [39, "module-deepcave.runs.trial"], [40, "module-deepcave.utils"], [41, "module-deepcave.utils.cache"], [42, "module-deepcave.utils.cast"], [43, "module-deepcave.utils.compression"], [44, "module-deepcave.utils.configs"], [45, "module-deepcave.utils.configspace"], [46, "module-deepcave.utils.dash"], [47, "module-deepcave.utils.data_structures"], [48, "module-deepcave.utils.docs"], [49, "module-deepcave.utils.files"], [50, "module-deepcave.utils.hash"], [51, "module-deepcave.utils.layout"], [52, "module-deepcave.utils.logs"], [53, "module-deepcave.utils.notification"], [54, "module-deepcave.utils.run_caches"], [55, "module-deepcave.utils.styled_plotty"], [56, "module-deepcave.utils.url"], [57, "module-deepcave.utils.util"]], "deepcave.evaluators.epm": [[2, "module-deepcave.evaluators.epm"]], "fanovaforest (class in deepcave.evaluators.epm.fanova_forest)": [[3, "deepcave.evaluators.epm.fanova_forest.FanovaForest"]], "compute_marginals() (deepcave.evaluators.epm.fanova_forest.fanovaforest method)": [[3, "deepcave.evaluators.epm.fanova_forest.FanovaForest.compute_marginals"]], "deepcave.evaluators.epm.fanova_forest": [[3, "module-deepcave.evaluators.epm.fanova_forest"]], "randomforest (class in deepcave.evaluators.epm.random_forest)": [[4, "deepcave.evaluators.epm.random_forest.RandomForest"]], "deepcave.evaluators.epm.random_forest": [[4, "module-deepcave.evaluators.epm.random_forest"]], "predict() (deepcave.evaluators.epm.random_forest.randomforest method)": [[4, "deepcave.evaluators.epm.random_forest.RandomForest.predict"]], "predict_marginalized() (deepcave.evaluators.epm.random_forest.randomforest method)": [[4, "deepcave.evaluators.epm.random_forest.RandomForest.predict_marginalized"]], "random() (in module deepcave.evaluators.epm.random_forest)": [[4, "deepcave.evaluators.epm.random_forest.random"]], "train() (deepcave.evaluators.epm.random_forest.randomforest method)": [[4, "deepcave.evaluators.epm.random_forest.RandomForest.train"]], "randomforestsurrogate (class in deepcave.evaluators.epm.random_forest_surrogate)": [[5, "deepcave.evaluators.epm.random_forest_surrogate.RandomForestSurrogate"]], "deepcave.evaluators.epm.random_forest_surrogate": [[5, "module-deepcave.evaluators.epm.random_forest_surrogate"]], "predict() (deepcave.evaluators.epm.random_forest_surrogate.randomforestsurrogate method)": [[5, "deepcave.evaluators.epm.random_forest_surrogate.RandomForestSurrogate.predict"]], "deepcave.evaluators.epm.utils": [[6, "module-deepcave.evaluators.epm.utils"]], "get_types() (in module deepcave.evaluators.epm.utils)": [[6, "deepcave.evaluators.epm.utils.get_types"]], "calculate() (deepcave.evaluators.fanova.fanova method)": [[7, "deepcave.evaluators.fanova.fANOVA.calculate"]], "deepcave.evaluators.fanova": [[7, "module-deepcave.evaluators.fanova"]], "fanova (class in deepcave.evaluators.fanova)": [[7, "deepcave.evaluators.fanova.fANOVA"]], "get_importances() (deepcave.evaluators.fanova.fanova method)": [[7, "deepcave.evaluators.fanova.fANOVA.get_importances"]], "deepcave.evaluators.footprint": [[8, "module-deepcave.evaluators.footprint"]], "deepcave.evaluators.lpi": [[9, "module-deepcave.evaluators.lpi"]], "random() (in module deepcave.evaluators.lpi)": [[9, "deepcave.evaluators.lpi.random"]], "layout (class in deepcave.layouts)": [[10, "deepcave.layouts.Layout"]], "__call__() (deepcave.layouts.layout method)": [[10, "deepcave.layouts.Layout.__call__"]], "deepcave.layouts": [[10, "module-deepcave.layouts"]], "notfoundlayout (class in deepcave.layouts.not_found)": [[11, "deepcave.layouts.not_found.NotFoundLayout"]], "__call__() (deepcave.layouts.not_found.notfoundlayout method)": [[11, "deepcave.layouts.not_found.NotFoundLayout.__call__"]], "deepcave.layouts.not_found": [[11, "module-deepcave.layouts.not_found"]], "sidebarlayout (class in deepcave.layouts.sidebar)": [[12, "deepcave.layouts.sidebar.SidebarLayout"]], "__call__() (deepcave.layouts.sidebar.sidebarlayout method)": [[12, "deepcave.layouts.sidebar.SidebarLayout.__call__"]], "deepcave.layouts.sidebar": [[12, "module-deepcave.layouts.sidebar"]], "plugin (class in deepcave.plugins)": [[13, "deepcave.plugins.Plugin"]], "__call__() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.__call__"]], "activate_run_selection (deepcave.plugins.plugin attribute)": [[13, "deepcave.plugins.Plugin.activate_run_selection"]], "button_caption (deepcave.plugins.plugin attribute)": [[13, "deepcave.plugins.Plugin.button_caption"]], "check_run_compatibility() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.check_run_compatibility"]], "check_runs_compatibility() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.check_runs_compatibility"]], "deepcave.plugins": [[13, "module-deepcave.plugins"]], "description (deepcave.plugins.plugin attribute)": [[13, "deepcave.plugins.Plugin.description"]], "generate_inputs() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.generate_inputs"]], "generate_outputs() (deepcave.plugins.plugin class method)": [[13, "deepcave.plugins.Plugin.generate_outputs"]], "get_base_url() (deepcave.plugins.plugin class method)": [[13, "deepcave.plugins.Plugin.get_base_url"]], "get_filter_layout() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.get_filter_layout"]], "get_input_layout() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.get_input_layout"]], "get_mpl_output_layout() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.get_mpl_output_layout"]], "get_output_layout() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.get_output_layout"]], "get_run_input_layout() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.get_run_input_layout"]], "get_selected_runs() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.get_selected_runs"]], "help (deepcave.plugins.plugin attribute)": [[13, "deepcave.plugins.Plugin.help"]], "icon (deepcave.plugins.plugin attribute)": [[13, "deepcave.plugins.Plugin.icon"]], "id (deepcave.plugins.plugin attribute)": [[13, "deepcave.plugins.Plugin.id"]], "load_dependency_inputs() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.load_inputs"]], "load_mpl_outputs() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.load_mpl_outputs"]], "load_outputs() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.load_outputs"]], "load_run_inputs() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.load_run_inputs"]], "name (deepcave.plugins.plugin attribute)": [[13, "deepcave.plugins.Plugin.name"]], "process() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.process"]], "register_callbacks() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.register_callbacks"]], "register_input() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.register_input"]], "register_output() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.register_output"]], "deepcave.plugins.budget": [[14, "module-deepcave.plugins.budget"]], "dynamicplugin (class in deepcave.plugins.dynamic)": [[15, "deepcave.plugins.dynamic.DynamicPlugin"]], "__call__() (deepcave.plugins.dynamic.dynamicplugin method)": [[15, "deepcave.plugins.dynamic.DynamicPlugin.__call__"]], "deepcave.plugins.dynamic": [[15, "module-deepcave.plugins.dynamic"]], "register_callbacks() (deepcave.plugins.dynamic.dynamicplugin method)": [[15, "deepcave.plugins.dynamic.DynamicPlugin.register_callbacks"]], "deepcave.plugins.hyperparameter": [[16, "module-deepcave.plugins.hyperparameter"]], "partialdependencies (class in deepcave.plugins.hyperparameter.pdp)": [[17, "deepcave.plugins.hyperparameter.pdp.PartialDependencies"]], "deepcave.plugins.hyperparameter.pdp": [[17, "module-deepcave.plugins.hyperparameter.pdp"]], "get_filter_layout() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[17, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.get_filter_layout"]], "get_input_layout() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[17, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.get_input_layout"]], "get_output_layout() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[17, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.get_output_layout"]], "load_dependency_inputs() (deepcave.plugins.hyperparameter.pdp.partialdependencies method)": [[17, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.hyperparameter.pdp.partialdependencies method)": [[17, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.load_inputs"]], "load_outputs() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[17, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.load_outputs"]], "process() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[17, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.process"]], "deepcave.plugins.objective": [[18, "module-deepcave.plugins.objective"]], "configurationcube (class in deepcave.plugins.objective.configuration_cube)": [[19, "deepcave.plugins.objective.configuration_cube.ConfigurationCube"]], "deepcave.plugins.objective.configuration_cube": [[19, "module-deepcave.plugins.objective.configuration_cube"]], "get_filter_layout() (deepcave.plugins.objective.configuration_cube.configurationcube static method)": [[19, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.get_filter_layout"]], "get_input_layout() (deepcave.plugins.objective.configuration_cube.configurationcube static method)": [[19, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.get_input_layout"]], "get_output_layout() (deepcave.plugins.objective.configuration_cube.configurationcube static method)": [[19, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.get_output_layout"]], "load_dependency_inputs() (deepcave.plugins.objective.configuration_cube.configurationcube method)": [[19, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.objective.configuration_cube.configurationcube method)": [[19, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.load_inputs"]], "load_outputs() (deepcave.plugins.objective.configuration_cube.configurationcube static method)": [[19, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.load_outputs"]], "process() (deepcave.plugins.objective.configuration_cube.configurationcube static method)": [[19, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.process"]], "costovertime (class in deepcave.plugins.objective.cost_over_time)": [[20, "deepcave.plugins.objective.cost_over_time.CostOverTime"]], "check_runs_compatibility() (deepcave.plugins.objective.cost_over_time.costovertime method)": [[20, "deepcave.plugins.objective.cost_over_time.CostOverTime.check_runs_compatibility"]], "deepcave.plugins.objective.cost_over_time": [[20, "module-deepcave.plugins.objective.cost_over_time"]], "get_filter_layout() (deepcave.plugins.objective.cost_over_time.costovertime static method)": [[20, "deepcave.plugins.objective.cost_over_time.CostOverTime.get_filter_layout"]], "get_input_layout() (deepcave.plugins.objective.cost_over_time.costovertime static method)": [[20, "deepcave.plugins.objective.cost_over_time.CostOverTime.get_input_layout"]], "get_output_layout() (deepcave.plugins.objective.cost_over_time.costovertime static method)": [[20, "deepcave.plugins.objective.cost_over_time.CostOverTime.get_output_layout"]], "load_inputs() (deepcave.plugins.objective.cost_over_time.costovertime method)": [[20, "deepcave.plugins.objective.cost_over_time.CostOverTime.load_inputs"]], "load_outputs() (deepcave.plugins.objective.cost_over_time.costovertime static method)": [[20, "deepcave.plugins.objective.cost_over_time.CostOverTime.load_outputs"]], "process() (deepcave.plugins.objective.cost_over_time.costovertime static method)": [[20, "deepcave.plugins.objective.cost_over_time.CostOverTime.process"]], "parallelcoordinates (class in deepcave.plugins.objective.parallel_coordinates)": [[21, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates"]], "deepcave.plugins.objective.parallel_coordinates": [[21, "module-deepcave.plugins.objective.parallel_coordinates"]], "get_filter_layout() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates static method)": [[21, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.get_filter_layout"]], "get_input_layout() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates static method)": [[21, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.get_input_layout"]], "get_output_layout() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates static method)": [[21, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.get_output_layout"]], "load_dependency_inputs() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates method)": [[21, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates method)": [[21, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.load_inputs"]], "load_outputs() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates static method)": [[21, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.load_outputs"]], "process() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates static method)": [[21, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.process"]], "pluginstate (class in deepcave.plugins.static)": [[22, "deepcave.plugins.static.PluginState"]], "staticplugin (class in deepcave.plugins.static)": [[22, "deepcave.plugins.static.StaticPlugin"]], "__call__() (deepcave.plugins.static.staticplugin method)": [[22, "deepcave.plugins.static.StaticPlugin.__call__"]], "deepcave.plugins.static": [[22, "module-deepcave.plugins.static"]], "register_callbacks() (deepcave.plugins.static.staticplugin method)": [[22, "deepcave.plugins.static.StaticPlugin.register_callbacks"]], "deepcave.plugins.summary": [[23, "module-deepcave.plugins.summary"]], "configurations (class in deepcave.plugins.summary.configurations)": [[24, "deepcave.plugins.summary.configurations.Configurations"]], "deepcave.plugins.summary.configurations": [[24, "module-deepcave.plugins.summary.configurations"]], "get_input_layout() (deepcave.plugins.summary.configurations.configurations static method)": [[24, "deepcave.plugins.summary.configurations.Configurations.get_input_layout"]], "get_link() (deepcave.plugins.summary.configurations.configurations static method)": [[24, "deepcave.plugins.summary.configurations.Configurations.get_link"]], "get_output_layout() (deepcave.plugins.summary.configurations.configurations static method)": [[24, "deepcave.plugins.summary.configurations.Configurations.get_output_layout"]], "load_dependency_inputs() (deepcave.plugins.summary.configurations.configurations method)": [[24, "deepcave.plugins.summary.configurations.Configurations.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.summary.configurations.configurations method)": [[24, "deepcave.plugins.summary.configurations.Configurations.load_inputs"]], "load_outputs() (deepcave.plugins.summary.configurations.configurations static method)": [[24, "deepcave.plugins.summary.configurations.Configurations.load_outputs"]], "process() (deepcave.plugins.summary.configurations.configurations static method)": [[24, "deepcave.plugins.summary.configurations.Configurations.process"]], "overview (class in deepcave.plugins.summary.overview)": [[25, "deepcave.plugins.summary.overview.Overview"]], "deepcave.plugins.summary.overview": [[25, "module-deepcave.plugins.summary.overview"]], "get_output_layout() (deepcave.plugins.summary.overview.overview static method)": [[25, "deepcave.plugins.summary.overview.Overview.get_output_layout"]], "load_outputs() (deepcave.plugins.summary.overview.overview static method)": [[25, "deepcave.plugins.summary.overview.Overview.load_outputs"]], "abstractrun (class in deepcave.runs)": [[26, "deepcave.runs.AbstractRun"]], "check_equality() (in module deepcave.runs)": [[26, "deepcave.runs.check_equality"]], "deepcave.runs": [[26, "module-deepcave.runs"]], "encode_config() (deepcave.runs.abstractrun method)": [[26, "deepcave.runs.AbstractRun.encode_config"]], "get_all_costs() (deepcave.runs.abstractrun method)": [[26, "deepcave.runs.AbstractRun.get_all_costs"]], "get_budget() (deepcave.runs.abstractrun method)": [[26, "deepcave.runs.AbstractRun.get_budget"]], "get_budgets() (deepcave.runs.abstractrun method)": [[26, "deepcave.runs.AbstractRun.get_budgets"]], "get_configs() (deepcave.runs.abstractrun method)": [[26, "deepcave.runs.AbstractRun.get_configs"]], "get_costs() (deepcave.runs.abstractrun method)": [[26, "deepcave.runs.AbstractRun.get_costs"]], "get_encoded_data() (deepcave.runs.abstractrun method)": [[26, "deepcave.runs.AbstractRun.get_encoded_data"]], "get_highest_budget() (deepcave.runs.abstractrun method)": [[26, "deepcave.runs.AbstractRun.get_highest_budget"]], "get_incumbent() (deepcave.runs.abstractrun method)": [[26, "deepcave.runs.AbstractRun.get_incumbent"]], "get_objective() (deepcave.runs.abstractrun method)": [[26, "deepcave.runs.AbstractRun.get_objective"]], "get_objective_id() (deepcave.runs.abstractrun method)": [[26, "deepcave.runs.AbstractRun.get_objective_id"]], "get_objective_name() (deepcave.runs.abstractrun method)": [[26, "deepcave.runs.AbstractRun.get_objective_name"]], "get_status() (deepcave.runs.abstractrun method)": [[26, "deepcave.runs.AbstractRun.get_status"]], "get_trajectory() (deepcave.runs.abstractrun method)": [[26, "deepcave.runs.AbstractRun.get_trajectory"]], "hash (deepcave.runs.abstractrun property)": [[26, "deepcave.runs.AbstractRun.hash"]], "id (deepcave.runs.abstractrun property)": [[26, "deepcave.runs.AbstractRun.id"]], "merge_costs() (deepcave.runs.abstractrun method)": [[26, "deepcave.runs.AbstractRun.merge_costs"]], "deepcave.runs.converters": [[27, "module-deepcave.runs.converters"]], "bohbrun (class in deepcave.runs.converters.bohb)": [[28, "deepcave.runs.converters.bohb.BOHBRun"]], "deepcave.runs.converters.bohb": [[28, "module-deepcave.runs.converters.bohb"]], "from_path() (deepcave.runs.converters.bohb.bohbrun class method)": [[28, "deepcave.runs.converters.bohb.BOHBRun.from_path"]], "hash (deepcave.runs.converters.bohb.bohbrun property)": [[28, "deepcave.runs.converters.bohb.BOHBRun.hash"]], "deepcaverun (class in deepcave.runs.converters.deepcave)": [[29, "deepcave.runs.converters.deepcave.DeepCAVERun"]], "deepcave.runs.converters.deepcave": [[29, "module-deepcave.runs.converters.deepcave"]], "from_path() (deepcave.runs.converters.deepcave.deepcaverun class method)": [[29, "deepcave.runs.converters.deepcave.DeepCAVERun.from_path"]], "hash (deepcave.runs.converters.deepcave.deepcaverun property)": [[29, "deepcave.runs.converters.deepcave.DeepCAVERun.hash"]], "smac3v1run (class in deepcave.runs.converters.smac3v1)": [[30, "deepcave.runs.converters.smac3v1.SMAC3v1Run"]], "deepcave.runs.converters.smac3v1": [[30, "module-deepcave.runs.converters.smac3v1"]], "from_path() (deepcave.runs.converters.smac3v1.smac3v1run class method)": [[30, "deepcave.runs.converters.smac3v1.SMAC3v1Run.from_path"]], "hash (deepcave.runs.converters.smac3v1.smac3v1run property)": [[30, "deepcave.runs.converters.smac3v1.SMAC3v1Run.hash"]], "smac3v2run (class in deepcave.runs.converters.smac3v2)": [[31, "deepcave.runs.converters.smac3v2.SMAC3v2Run"]], "deepcave.runs.converters.smac3v2": [[31, "module-deepcave.runs.converters.smac3v2"]], "from_path() (deepcave.runs.converters.smac3v2.smac3v2run class method)": [[31, "deepcave.runs.converters.smac3v2.SMAC3v2Run.from_path"]], "hash (deepcave.runs.converters.smac3v2.smac3v2run property)": [[31, "deepcave.runs.converters.smac3v2.SMAC3v2Run.hash"]], "notmergeableerror": [[32, "deepcave.runs.exceptions.NotMergeableError"]], "notvalidrunerror": [[32, "deepcave.runs.exceptions.NotValidRunError"]], "deepcave.runs.exceptions": [[32, "module-deepcave.runs.exceptions"]], "group (class in deepcave.runs.group)": [[33, "deepcave.runs.group.Group"]], "deepcave.runs.group": [[33, "module-deepcave.runs.group"]], "get_trajectory() (deepcave.runs.group.group method)": [[33, "deepcave.runs.group.Group.get_trajectory"]], "hash (deepcave.runs.group.group property)": [[33, "deepcave.runs.group.Group.hash"]], "id (deepcave.runs.group.group property)": [[33, "deepcave.runs.group.Group.id"]], "runhandler (class in deepcave.runs.handler)": [[34, "deepcave.runs.handler.RunHandler"]], "add_run() (deepcave.runs.handler.runhandler method)": [[34, "deepcave.runs.handler.RunHandler.add_run"]], "deepcave.runs.handler": [[34, "module-deepcave.runs.handler"]], "get_available_run_paths() (deepcave.runs.handler.runhandler method)": [[34, "deepcave.runs.handler.RunHandler.get_available_run_paths"]], "get_groups() (deepcave.runs.handler.runhandler method)": [[34, "deepcave.runs.handler.RunHandler.get_groups"]], "get_run() (deepcave.runs.handler.runhandler method)": [[34, "deepcave.runs.handler.RunHandler.get_run"]], "get_run_name() (deepcave.runs.handler.runhandler method)": [[34, "deepcave.runs.handler.RunHandler.get_run_name"]], "get_runs() (deepcave.runs.handler.runhandler method)": [[34, "deepcave.runs.handler.RunHandler.get_runs"]], "get_selected_run_names() (deepcave.runs.handler.runhandler method)": [[34, "deepcave.runs.handler.RunHandler.get_selected_run_names"]], "get_selected_run_paths() (deepcave.runs.handler.runhandler method)": [[34, "deepcave.runs.handler.RunHandler.get_selected_run_paths"]], "get_working_directory() (deepcave.runs.handler.runhandler method)": [[34, "deepcave.runs.handler.RunHandler.get_working_directory"]], "remove_run() (deepcave.runs.handler.runhandler method)": [[34, "deepcave.runs.handler.RunHandler.remove_run"]], "set_working_directory() (deepcave.runs.handler.runhandler method)": [[34, "deepcave.runs.handler.RunHandler.set_working_directory"]], "update() (deepcave.runs.handler.runhandler method)": [[34, "deepcave.runs.handler.RunHandler.update"]], "update_groups() (deepcave.runs.handler.runhandler method)": [[34, "deepcave.runs.handler.RunHandler.update_groups"]], "update_run() (deepcave.runs.handler.runhandler method)": [[34, "deepcave.runs.handler.RunHandler.update_run"]], "update_runs() (deepcave.runs.handler.runhandler method)": [[34, "deepcave.runs.handler.RunHandler.update_runs"]], "objective (class in deepcave.runs.objective)": [[35, "deepcave.runs.objective.Objective"]], "__post_init__() (deepcave.runs.objective.objective method)": [[35, "deepcave.runs.objective.Objective.__post_init__"]], "deepcave.runs.objective": [[35, "module-deepcave.runs.objective"]], "deepcave.runs.recorder": [[36, "module-deepcave.runs.recorder"]], "run (class in deepcave.runs.run)": [[37, "deepcave.runs.run.Run"]], "add() (deepcave.runs.run.run method)": [[37, "deepcave.runs.run.Run.add"]], "deepcave.runs.run": [[37, "module-deepcave.runs.run"]], "exists() (deepcave.runs.run.run method)": [[37, "deepcave.runs.run.Run.exists"]], "from_path() (deepcave.runs.run.run class method)": [[37, "deepcave.runs.run.Run.from_path"]], "id (deepcave.runs.run.run property)": [[37, "deepcave.runs.run.Run.id"]], "status (class in deepcave.runs.status)": [[38, "deepcave.runs.status.Status"]], "deepcave.runs.status": [[38, "module-deepcave.runs.status"]], "trial (class in deepcave.runs.trial)": [[39, "deepcave.runs.trial.Trial"]], "deepcave.runs.trial": [[39, "module-deepcave.runs.trial"]], "deepcave.utils": [[40, "module-deepcave.utils"]], "cache (class in deepcave.utils.cache)": [[41, "deepcave.utils.cache.Cache"]], "clear() (deepcave.utils.cache.cache method)": [[41, "deepcave.utils.cache.Cache.clear"]], "deepcave.utils.cache": [[41, "module-deepcave.utils.cache"]], "get() (deepcave.utils.cache.cache method)": [[41, "deepcave.utils.cache.Cache.get"]], "has() (deepcave.utils.cache.cache method)": [[41, "deepcave.utils.cache.Cache.has"]], "read() (deepcave.utils.cache.cache method)": [[41, "deepcave.utils.cache.Cache.read"]], "set() (deepcave.utils.cache.cache method)": [[41, "deepcave.utils.cache.Cache.set"]], "set_dict() (deepcave.utils.cache.cache method)": [[41, "deepcave.utils.cache.Cache.set_dict"]], "write() (deepcave.utils.cache.cache method)": [[41, "deepcave.utils.cache.Cache.write"]], "deepcave.utils.cast": [[42, "module-deepcave.utils.cast"]], "deepcave.utils.compression": [[43, "module-deepcave.utils.compression"]], "deserialize() (in module deepcave.utils.compression)": [[43, "deepcave.utils.compression.deserialize"]], "serialize() (in module deepcave.utils.compression)": [[43, "deepcave.utils.compression.serialize"]], "deepcave.utils.configs": [[44, "module-deepcave.utils.configs"]], "parse_config() (in module deepcave.utils.configs)": [[44, "deepcave.utils.configs.parse_config"]], "deepcave.utils.configspace": [[45, "module-deepcave.utils.configspace"]], "sample_border_config() (in module deepcave.utils.configspace)": [[45, "deepcave.utils.configspace.sample_border_config"]], "sample_random_config() (in module deepcave.utils.configspace)": [[45, "deepcave.utils.configspace.sample_random_config"]], "deepcave.utils.dash": [[46, "module-deepcave.utils.dash"]], "flash() (in module deepcave.utils.dash)": [[46, "deepcave.utils.dash.flash"]], "deepcave.utils.data_structures": [[47, "module-deepcave.utils.data_structures"]], "update_dict() (in module deepcave.utils.data_structures)": [[47, "deepcave.utils.data_structures.update_dict"]], "deepcave.utils.docs": [[48, "module-deepcave.utils.docs"]], "deepcave.utils.files": [[49, "module-deepcave.utils.files"]], "deepcave.utils.hash": [[50, "module-deepcave.utils.hash"]], "deepcave.utils.layout": [[51, "module-deepcave.utils.layout"]], "get_select_options() (in module deepcave.utils.layout)": [[51, "deepcave.utils.layout.get_select_options"]], "deepcave.utils.logs": [[52, "module-deepcave.utils.logs"]], "deepcave.utils.notification": [[53, "module-deepcave.utils.notification"]], "runcaches (class in deepcave.utils.run_caches)": [[54, "deepcave.utils.run_caches.RunCaches"]], "clear() (deepcave.utils.run_caches.runcaches method)": [[54, "deepcave.utils.run_caches.RunCaches.clear"]], "clear_run() (deepcave.utils.run_caches.runcaches method)": [[54, "deepcave.utils.run_caches.RunCaches.clear_run"]], "deepcave.utils.run_caches": [[54, "module-deepcave.utils.run_caches"]], "get() (deepcave.utils.run_caches.runcaches method)": [[54, "deepcave.utils.run_caches.RunCaches.get"]], "set() (deepcave.utils.run_caches.runcaches method)": [[54, "deepcave.utils.run_caches.RunCaches.set"]], "update() (deepcave.utils.run_caches.runcaches method)": [[54, "deepcave.utils.run_caches.RunCaches.update"]], "deepcave.utils.styled_plotty": [[55, "module-deepcave.utils.styled_plotty"]], "get_color() (in module deepcave.utils.styled_plotty)": [[55, "deepcave.utils.styled_plotty.get_color"]], "get_discrete_heatmap() (in module deepcave.utils.styled_plotty)": [[55, "deepcave.utils.styled_plotty.get_discrete_heatmap"]], "get_hyperparameter_ticks() (in module deepcave.utils.styled_plotty)": [[55, "deepcave.utils.styled_plotty.get_hyperparameter_ticks"]], "get_hyperparameter_ticks_from_values() (in module deepcave.utils.styled_plotty)": [[55, "deepcave.utils.styled_plotty.get_hyperparameter_ticks_from_values"]], "hex_to_rgb() (in module deepcave.utils.styled_plotty)": [[55, "deepcave.utils.styled_plotty.hex_to_rgb"]], "prettify_label() (in module deepcave.utils.styled_plotty)": [[55, "deepcave.utils.styled_plotty.prettify_label"]], "save_image() (in module deepcave.utils.styled_plotty)": [[55, "deepcave.utils.styled_plotty.save_image"]], "deepcave.utils.url": [[56, "module-deepcave.utils.url"]], "deepcave.utils.util": [[57, "module-deepcave.utils.util"]], "bo": [[68, "term-BO"]], "budget": [[68, "term-Budget"]], "objective": [[68, "term-Objective"]], "smac": [[68, "term-SMAC"]]}})