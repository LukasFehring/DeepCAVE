Search.setIndex({"docnames": ["api", "api/deepcave.evaluators", "api/deepcave.evaluators.epm", "api/deepcave.evaluators.epm.fanova_forest", "api/deepcave.evaluators.epm.random_forest", "api/deepcave.evaluators.epm.random_forest_surrogate", "api/deepcave.evaluators.epm.utils", "api/deepcave.evaluators.fanova", "api/deepcave.evaluators.footprint", "api/deepcave.evaluators.lpi", "api/deepcave.layouts", "api/deepcave.layouts.not_found", "api/deepcave.layouts.sidebar", "api/deepcave.plugins", "api/deepcave.plugins.budget", "api/deepcave.plugins.dynamic", "api/deepcave.plugins.hyperparameter", "api/deepcave.plugins.hyperparameter.importances", "api/deepcave.plugins.hyperparameter.pdp", "api/deepcave.plugins.hyperparameter.symbolic_explanations", "api/deepcave.plugins.objective", "api/deepcave.plugins.objective.configuration_cube", "api/deepcave.plugins.objective.cost_over_time", "api/deepcave.plugins.objective.parallel_coordinates", "api/deepcave.plugins.objective.pareto_front", "api/deepcave.plugins.static", "api/deepcave.plugins.summary", "api/deepcave.plugins.summary.configurations", "api/deepcave.plugins.summary.footprint", "api/deepcave.plugins.summary.overview", "api/deepcave.runs", "api/deepcave.runs.converters", "api/deepcave.runs.converters.bohb", "api/deepcave.runs.converters.deepcave", "api/deepcave.runs.converters.smac3v1", "api/deepcave.runs.converters.smac3v2", "api/deepcave.runs.exceptions", "api/deepcave.runs.group", "api/deepcave.runs.handler", "api/deepcave.runs.objective", "api/deepcave.runs.recorder", "api/deepcave.runs.run", "api/deepcave.runs.status", "api/deepcave.runs.trial", "api/deepcave.utils", "api/deepcave.utils.cache", "api/deepcave.utils.cast", "api/deepcave.utils.compression", "api/deepcave.utils.configs", "api/deepcave.utils.configspace", "api/deepcave.utils.dash", "api/deepcave.utils.data_structures", "api/deepcave.utils.docs", "api/deepcave.utils.files", "api/deepcave.utils.hash", "api/deepcave.utils.layout", "api/deepcave.utils.logs", "api/deepcave.utils.notification", "api/deepcave.utils.run_caches", "api/deepcave.utils.styled_plot", "api/deepcave.utils.styled_plotty", "api/deepcave.utils.symbolic_regression", "api/deepcave.utils.url", "api/deepcave.utils.util", "converters", "examples/api/importances", "examples/api/index", "examples/api/parallel_coordinates", "examples/api/pdp", "examples/api/sg_execution_times", "examples/index", "examples/record/digits_sklearn", "examples/record/index", "examples/record/minimal", "examples/record/mnist_pytorch", "examples/record/sg_execution_times", "examples/sg_execution_times", "faq", "getting_started", "glossary", "index", "installation", "plugins/budget_correlation", "plugins/configuration_cube", "plugins/configuration_footprint", "plugins/configurations", "plugins/cost_over_time", "plugins/importances", "plugins/index", "plugins/overview", "plugins/parallel_coordinates", "plugins/pareto_front", "plugins/partial_dependencies", "plugins/symbolic_explanations", "redis", "sg_execution_times"], "filenames": ["api.rst", "api/deepcave.evaluators.rst", "api/deepcave.evaluators.epm.rst", "api/deepcave.evaluators.epm.fanova_forest.rst", "api/deepcave.evaluators.epm.random_forest.rst", "api/deepcave.evaluators.epm.random_forest_surrogate.rst", "api/deepcave.evaluators.epm.utils.rst", "api/deepcave.evaluators.fanova.rst", "api/deepcave.evaluators.footprint.rst", "api/deepcave.evaluators.lpi.rst", "api/deepcave.layouts.rst", "api/deepcave.layouts.not_found.rst", "api/deepcave.layouts.sidebar.rst", "api/deepcave.plugins.rst", "api/deepcave.plugins.budget.rst", "api/deepcave.plugins.dynamic.rst", "api/deepcave.plugins.hyperparameter.rst", "api/deepcave.plugins.hyperparameter.importances.rst", "api/deepcave.plugins.hyperparameter.pdp.rst", "api/deepcave.plugins.hyperparameter.symbolic_explanations.rst", "api/deepcave.plugins.objective.rst", "api/deepcave.plugins.objective.configuration_cube.rst", "api/deepcave.plugins.objective.cost_over_time.rst", "api/deepcave.plugins.objective.parallel_coordinates.rst", "api/deepcave.plugins.objective.pareto_front.rst", "api/deepcave.plugins.static.rst", "api/deepcave.plugins.summary.rst", "api/deepcave.plugins.summary.configurations.rst", "api/deepcave.plugins.summary.footprint.rst", "api/deepcave.plugins.summary.overview.rst", "api/deepcave.runs.rst", "api/deepcave.runs.converters.rst", "api/deepcave.runs.converters.bohb.rst", "api/deepcave.runs.converters.deepcave.rst", "api/deepcave.runs.converters.smac3v1.rst", "api/deepcave.runs.converters.smac3v2.rst", "api/deepcave.runs.exceptions.rst", "api/deepcave.runs.group.rst", "api/deepcave.runs.handler.rst", "api/deepcave.runs.objective.rst", "api/deepcave.runs.recorder.rst", "api/deepcave.runs.run.rst", "api/deepcave.runs.status.rst", "api/deepcave.runs.trial.rst", "api/deepcave.utils.rst", "api/deepcave.utils.cache.rst", "api/deepcave.utils.cast.rst", "api/deepcave.utils.compression.rst", "api/deepcave.utils.configs.rst", "api/deepcave.utils.configspace.rst", "api/deepcave.utils.dash.rst", "api/deepcave.utils.data_structures.rst", "api/deepcave.utils.docs.rst", "api/deepcave.utils.files.rst", "api/deepcave.utils.hash.rst", "api/deepcave.utils.layout.rst", "api/deepcave.utils.logs.rst", "api/deepcave.utils.notification.rst", "api/deepcave.utils.run_caches.rst", "api/deepcave.utils.styled_plot.rst", "api/deepcave.utils.styled_plotty.rst", "api/deepcave.utils.symbolic_regression.rst", "api/deepcave.utils.url.rst", "api/deepcave.utils.util.rst", "converters.rst", "examples/api/importances.rst", "examples/api/index.rst", "examples/api/parallel_coordinates.rst", "examples/api/pdp.rst", "examples/api/sg_execution_times.rst", "examples/index.rst", "examples/record/digits_sklearn.rst", "examples/record/index.rst", "examples/record/minimal.rst", "examples/record/mnist_pytorch.rst", "examples/record/sg_execution_times.rst", "examples/sg_execution_times.rst", "faq.rst", "getting_started.rst", "glossary.rst", "index.rst", "installation.rst", "plugins/budget_correlation.rst", "plugins/configuration_cube.rst", "plugins/configuration_footprint.rst", "plugins/configurations.rst", "plugins/cost_over_time.rst", "plugins/importances.rst", "plugins/index.rst", "plugins/overview.rst", "plugins/parallel_coordinates.rst", "plugins/pareto_front.rst", "plugins/partial_dependencies.rst", "plugins/symbolic_explanations.rst", "redis.rst", "sg_execution_times.rst"], "titles": ["API References", "deepcave.evaluators", "deepcave.evaluators.epm", "deepcave.evaluators.epm.fanova_forest", "deepcave.evaluators.epm.random_forest", "deepcave.evaluators.epm.random_forest_surrogate", "deepcave.evaluators.epm.utils", "deepcave.evaluators.fanova", "deepcave.evaluators.footprint", "deepcave.evaluators.lpi", "deepcave.layouts", "deepcave.layouts.not_found", "deepcave.layouts.sidebar", "deepcave.plugins", "deepcave.plugins.budget", "deepcave.plugins.dynamic", "deepcave.plugins.hyperparameter", "deepcave.plugins.hyperparameter.importances", "deepcave.plugins.hyperparameter.pdp", "deepcave.plugins.hyperparameter.symbolic_explanations", "deepcave.plugins.objective", "deepcave.plugins.objective.configuration_cube", "deepcave.plugins.objective.cost_over_time", "deepcave.plugins.objective.parallel_coordinates", "deepcave.plugins.objective.pareto_front", "deepcave.plugins.static", "deepcave.plugins.summary", "deepcave.plugins.summary.configurations", "deepcave.plugins.summary.footprint", "deepcave.plugins.summary.overview", "deepcave.runs", "deepcave.runs.converters", "deepcave.runs.converters.bohb", "deepcave.runs.converters.deepcave", "deepcave.runs.converters.smac3v1", "deepcave.runs.converters.smac3v2", "deepcave.runs.exceptions", "deepcave.runs.group", "deepcave.runs.handler", "deepcave.runs.objective", "deepcave.runs.recorder", "deepcave.runs.run", "deepcave.runs.status", "deepcave.runs.trial", "deepcave.utils", "deepcave.utils.cache", "deepcave.utils.cast", "deepcave.utils.compression", "deepcave.utils.configs", "deepcave.utils.configspace", "deepcave.utils.dash", "deepcave.utils.data_structures", "deepcave.utils.docs", "deepcave.utils.files", "deepcave.utils.hash", "deepcave.utils.layout", "deepcave.utils.logs", "deepcave.utils.notification", "deepcave.utils.run_caches", "deepcave.utils.styled_plot", "deepcave.utils.styled_plotty", "deepcave.utils.symbolic_regression", "deepcave.utils.url", "deepcave.utils.util", "Converters", "Importances", "API", "Parallel Coordinates", "Partial Dependencies", "Computation times", "Examples", "Multi-Layer Perceptron via Sklearn", "Record", "Record Minimal Run", "Multi-Layer Perceptron via PyTorch", "Computation times", "Computation times", "Frequently Asked Questions", "Getting Started", "Glossary", "Home", "Installation", "Budget Correlation", "Configuration Cube", "Configuration Footprint", "Configurations", "Cost Over Time", "Importances", "Plugins", "Overview", "Parallel Coordinates", "Pareto Front", "Partial Dependencies", "Symbolic Explanations", "Install Redis Server", "Computation times"], "terms": {"fanova": [1, 2, 3, 9, 30, 87, 90], "thi": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94], "provid": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 80, 82, 84, 85, 88, 89, 90, 93], "tool": [1, 7, 79, 80], "assess": [1, 7], "import": [1, 3, 7, 9, 13, 16, 29, 66, 67, 68, 69, 70, 71, 73, 74, 82, 84, 85, 88, 89, 90, 91, 95], "an": [1, 7, 13, 24, 25, 26, 29, 30, 38, 39, 42, 44, 46, 49, 50, 55, 60, 62, 66, 70, 71, 72, 79, 80, 82, 83, 88, 89, 93], "algorithm": [1, 7, 31, 34, 35, 79, 84], "hyperparamet": [1, 2, 3, 4, 6, 7, 8, 9, 21, 30, 31, 32, 49, 60, 65, 68, 71, 73, 74, 79, 80, 83, 84, 85, 87, 88, 90, 92, 93], "footprint": [1, 26], "util": [1, 2, 3, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 74], "creat": [1, 2, 3, 8, 10, 13, 18, 20, 21, 22, 24, 27, 29, 30, 31, 32, 33, 34, 35, 38, 39, 41, 44, 45, 53, 55, 57, 58, 59, 62, 64, 81, 88], "run": [1, 7, 8, 9, 13, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 44, 58, 60, 61, 64, 65, 67, 68, 70, 72, 74, 75, 78, 80, 81, 82, 84, 85, 86, 88, 89, 91, 94, 95], "lpi": 1, "calcul": [1, 7, 8, 9, 13, 25, 30, 37, 58, 61, 63, 77, 87, 88, 90], "local": [1, 9, 78], "paramet": [1, 3, 4, 5, 6, 7, 8, 9, 13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 74, 79], "fanova_forest": 2, "The": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 93], "forest": [2, 3, 4, 5, 7, 9], "random_forest": 2, "can": [2, 3, 4, 5, 7, 8, 13, 22, 23, 24, 30, 37, 38, 40, 44, 49, 51, 57, 59, 64, 65, 66, 67, 68, 70, 71, 72, 73, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91], "us": [2, 3, 4, 7, 8, 13, 15, 18, 19, 22, 23, 24, 25, 27, 28, 30, 34, 35, 38, 40, 41, 44, 45, 48, 51, 55, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89], "train": [2, 4, 7, 8, 9, 19, 74, 82, 88], "random": [2, 4, 5, 7, 9, 44, 49, 63, 73, 74], "regress": [2, 4, 61, 93], "model": [2, 3, 4, 5, 8, 9, 30, 31, 34, 35, 37, 40, 41, 74, 88, 93], "random_forest_surrog": 2, "randomforest": [2, 3, 4, 5, 9], "surrog": [2, 5], "get": [2, 4, 6, 7, 8, 9, 13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 41, 44, 45, 49, 55, 56, 58, 59, 60, 61, 63, 66, 70, 71, 72, 81, 84, 89, 94], "type": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 74, 84], "well": [2, 6, 30, 36, 37, 38, 44, 45, 49, 59, 60, 82, 84, 89, 90], "bound": [2, 3, 4, 6, 39, 84, 89], "fanovaforest": 3, "modul": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "It": [3, 7, 8, 13, 21, 22, 24, 25, 29, 30, 38, 39, 63, 77, 84, 88], "includ": [3, 8, 13, 17, 18, 19, 22, 24, 29, 30, 37, 38, 45, 55, 58, 60, 78, 79, 86, 87], "wrapper": [3, 4, 30], "pyrfr": [3, 4, 30, 87], "analyz": [3, 78, 80, 82, 83, 85, 90], "class": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 57, 58, 59, 60, 64, 70, 72, 74, 78], "A": [3, 4, 9, 10, 12, 13, 15, 17, 18, 19, 21, 22, 24, 27, 28, 29, 30, 34, 37, 38, 39, 40, 42, 43, 55, 60, 62, 63, 76, 78, 79, 80, 86, 91], "configspac": [3, 4, 5, 30, 32, 33, 34, 35, 37, 40, 41, 44, 64, 65, 67, 71, 73, 74], "n_tree": [3, 4, 7, 9, 65], "10": [3, 8, 9, 55, 60, 65, 71, 74, 80, 90], "ratio_featur": [3, 4], "1": [3, 4, 7, 34, 59, 60, 67, 68, 71, 73, 74, 78, 82], "0": [3, 4, 7, 8, 9, 35, 41, 59, 63, 64, 65, 67, 68, 69, 71, 73, 74, 75, 76, 82, 95], "min_samples_split": [3, 4], "min_samples_leaf": [3, 4], "max_depth": [3, 4], "64": [3, 74], "max_nod": [3, 4], "1048576": [3, 4], "eps_pur": [3, 4], "1e": [3, 4, 74], "08": [3, 4], "bootstrap": [3, 4, 55], "true": [3, 4, 7, 8, 13, 30, 38, 39, 45, 53, 55, 58, 59, 60, 67, 68, 71, 74, 81, 82, 84], "instance_featur": [3, 4, 6], "none": [3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 18, 19, 22, 24, 25, 30, 32, 33, 34, 35, 38, 39, 40, 41, 43, 45, 46, 48, 49, 51, 53, 55, 57, 58, 59, 60, 61, 62, 71, 73, 74], "pca_compon": [3, 4], "2": [3, 4, 35, 65, 67, 74, 81, 82, 83, 94], "cutoff": 3, "inf": [3, 40, 41], "seed": [3, 4, 5, 7, 9, 34, 35, 71, 73, 74], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 70, 71, 73, 74, 88], "base": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 55, 57, 58, 59, 86, 89], "tupl": [3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 21, 25, 30, 37, 40, 43, 47, 57, 60], "float": [3, 4, 6, 7, 8, 9, 30, 32, 33, 34, 35, 37, 39, 40, 41, 43, 49, 59, 60, 61], "percentil": 3, "ndarrai": [3, 4, 5, 6, 9, 30, 59, 61], "data": [3, 4, 5, 7, 9, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 38, 39, 41, 47, 51, 52, 55, 58, 60, 64, 71, 74, 78, 80, 88, 89, 93], "point": [3, 4, 5, 8, 82, 83, 84, 88], "y": [3, 4, 8, 59, 60, 71, 74, 86, 89], "all_midpoint": 3, "list": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 37, 38, 41, 43, 47, 55, 60, 61, 82, 85], "all": [3, 4, 7, 8, 9, 12, 13, 15, 22, 24, 25, 30, 38, 45, 55, 58, 60, 70, 82, 83, 84, 86, 90, 95], "midpoint": [3, 7], "tree": [3, 7, 9, 17, 30, 88, 90], "wise": [3, 85, 88], "whole": 3, "all_siz": 3, "interv": 3, "size": [3, 7, 60, 73], "store": [3, 30, 58], "featur": [3, 4, 6, 13, 86, 90], "trees_total_vari": 3, "total": [3, 7, 69, 75, 76, 95], "varianc": [3, 4, 7, 9], "ani": [3, 9, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 37, 39, 40, 41, 43, 44, 45, 46, 55, 58, 59, 60, 62, 63, 78, 80, 88], "trees_variance_fract": 3, "dict": [3, 4, 7, 9, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 37, 38, 39, 40, 41, 43, 45, 47, 51, 55, 58, 62, 74], "fraction": 3, "v_u_tot": 3, "int": [3, 4, 6, 7, 8, 9, 18, 19, 27, 30, 32, 33, 34, 35, 37, 39, 41, 42, 43, 44, 46, 49, 55, 59, 60, 61, 63, 74], "relat": [3, 93], "inform": [3, 13, 15, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 38, 40, 41, 42, 43, 44, 55, 59, 60, 62, 82, 84, 85, 88, 94], "across": [3, 13, 89], "v_u_individu": 3, "individu": [3, 7, 91], "subset": [3, 52, 79], "n_param": [3, 4], "number": [3, 4, 7, 9, 17, 19, 22, 30, 41, 55, 59, 60, 61, 78, 82, 83, 86, 89, 90], "sampl": [3, 4, 44, 49, 84], "compute_margin": 3, "hp_id": 3, "depth": [3, 7], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 71, 74], "margin": [3, 4, 7, 55, 59], "select": [3, 7, 9, 13, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 38, 44, 55, 58, 64, 78, 80, 82, 83, 85, 86, 89, 90, 91], "union": [3, 7, 8, 9, 10, 12, 13, 19, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 47, 53, 55, 59, 60, 61], "contain": [3, 9, 22, 24, 27, 28, 30, 37, 38, 39, 40, 41, 48, 55, 60, 62, 63], "indic": [3, 55, 84, 89, 90], "start": [3, 13, 40, 41, 43, 71, 73, 74, 77, 81, 88], "default": [3, 6, 7, 8, 9, 13, 30, 38, 40, 41, 45, 47, 48, 49, 50, 53, 55, 57, 59, 60, 63, 89, 90], "valu": [3, 4, 5, 7, 8, 9, 13, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 38, 39, 42, 44, 45, 46, 49, 55, 58, 59, 60, 61, 63, 73, 77, 82, 83, 84, 85, 86, 89, 90, 93], "i": [3, 4, 6, 7, 8, 9, 13, 15, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 53, 55, 57, 58, 59, 60, 61, 63, 64, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "simplif": 4, "constant": [4, 18, 19, 42, 45, 47, 59, 73, 87], "very_small_numb": 4, "pyrfr_map": 4, "str": [4, 7, 8, 9, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "16": [4, 7, 74], "8333333333333334": 4, "3": [4, 8, 60, 65, 67, 69, 74, 75, 81, 83], "log_i": 4, "fals": [4, 8, 13, 30, 38, 39, 40, 45, 55, 59, 67, 68, 74], "object": [4, 7, 8, 9, 13, 15, 18, 19, 25, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 47, 50, 54, 57, 58, 59, 60, 64, 67, 71, 73, 74, 79, 82, 83, 84, 86, 88, 90, 91, 92, 93], "handi": [4, 89], "becaus": [4, 13, 58, 85], "onli": [4, 7, 8, 13, 17, 18, 19, 21, 23, 27, 28, 30, 38, 49, 55, 58, 60, 81, 83, 85, 90], "configur": [4, 6, 7, 8, 9, 21, 22, 24, 26, 28, 30, 31, 34, 35, 37, 40, 41, 43, 44, 48, 49, 56, 60, 78, 79, 82, 86, 90, 91], "space": [4, 6, 7, 8, 9, 22, 24, 30, 37, 41, 42, 49, 82, 83, 84, 86], "need": [4, 7, 13, 22, 24, 45, 58, 64, 81, 82, 84, 86, 88], "pass": [4, 7, 13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 38, 40, 63, 90], "have": [4, 13, 17, 18, 19, 21, 23, 27, 28, 55, 60, 64, 66, 70, 72, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 94], "work": [4, 17, 18, 19, 21, 23, 27, 28, 38, 64, 80, 81, 88, 94], "version": [4, 17, 34, 35, 60], "without": 4, "specifi": [4, 7, 13, 17, 30, 41, 55, 83, 86, 90], "e": [4, 13, 22, 24, 29, 45, 60, 64, 77, 80, 85, 93], "g": [4, 13, 22, 24, 29, 45, 60, 64, 77, 80, 85], "also": [4, 6, 8, 13, 17, 22, 24, 38, 39, 63, 78, 80, 85, 86, 88, 89], "support": [4, 6, 8, 30, 34, 35, 64, 80, 86], "instanc": [4, 6, 34, 35, 38, 39, 60], "c": [4, 7, 8, 9, 38, 45, 73, 74, 81], "configurationspac": [4, 6, 7, 8, 9, 30, 37, 41, 49, 71, 73, 74], "bool": [4, 7, 8, 13, 15, 25, 30, 38, 39, 41, 45, 53, 55, 58, 59, 60], "whether": [4, 7, 8, 13, 15, 18, 30, 39, 45, 53, 55, 59, 60, 82, 86, 89], "should": [4, 7, 8, 9, 13, 27, 30, 37, 38, 39, 40, 53, 55, 58, 59, 60, 61, 78, 79, 82, 88, 91], "treat": 4, "logarithm": [4, 86], "transform": [4, 38, 74], "If": [4, 6, 7, 8, 9, 13, 15, 17, 18, 19, 22, 24, 30, 32, 33, 34, 35, 38, 39, 40, 41, 45, 46, 48, 55, 58, 59, 60, 61, 63, 66, 70, 80, 81, 82, 83, 86, 88, 89, 91, 94], "n_featur": 4, "compon": [4, 10, 11, 12, 13, 15, 25, 55, 60], "keep": 4, "princip": 4, "analysi": [4, 80, 88, 90], "pca": 4, "scaler": 4, "minmaxscal": 4, "scale": [4, 8, 65, 67, 89], "get_leaf_valu": 4, "x": [4, 5, 8, 59, 60, 61, 71, 74, 84, 86, 89, 90], "leaf": 4, "np": [4, 5, 6, 30, 40, 59, 61, 73, 74], "input": [4, 5, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 44, 58, 59, 60, 61, 62, 64, 65, 67, 68, 88], "arrai": [4, 8, 30, 60], "binary_rss_forest": 4, "predict": [4, 5, 30], "mean": [4, 5, 7, 9, 37, 82, 86], "given": [4, 5, 9, 30, 32, 33, 37, 41, 48, 55, 58, 59, 60, 61, 62, 63, 83, 84, 91], "n_sampl": 4, "config": [4, 8, 13, 15, 30, 37, 38, 40, 41, 44, 58, 64, 71, 73, 74, 77, 78, 88, 89], "n_object": 4, "var": [4, 7, 9], "standard": [4, 5, 30, 37, 86], "deviat": [4, 5, 30, 37, 86], "predict_margin": 4, "over": [4, 20, 22, 30, 37, 39, 55, 83, 84, 85, 88, 89, 91], "set": [4, 8, 13, 22, 24, 38, 39, 40, 43, 44, 45, 56, 58, 59, 61, 77], "shape": 4, "appli": [4, 87, 93], "afterward": 4, "_train": 4, "call": [4, 8, 10, 11, 12, 13, 17, 18, 19, 21, 22, 23, 24, 27, 28], "target": [4, 71], "must": [4, 13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 30, 48, 58, 60, 78], "match": [4, 40, 41], "name": [4, 7, 9, 13, 25, 30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 53, 56, 59, 60, 61, 62, 71, 73, 74, 78, 89, 91], "constructor": 4, "randomforestsurrog": 5, "pypdp": 5, "packag": [5, 81], "surrogatemodel": 5, "fit": [5, 61, 71, 74], "which": [5, 13, 27, 30, 38, 41, 49, 58, 60, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "function": [6, 10, 11, 12, 13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 39, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 74], "get_typ": 6, "config_spac": 6, "option": [6, 7, 8, 9, 13, 22, 24, 30, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 53, 55, 57, 58, 59, 60, 61, 62, 63, 78, 84, 86], "rais": [6, 7, 8, 9, 13, 17, 18, 19, 22, 24, 30, 34, 35, 36, 38, 39, 40, 41, 45, 48, 55, 58, 60, 63, 74], "valueerror": [6, 13, 30, 39, 41, 55, 60, 63], "inact": 6, "beta": [6, 68, 73], "normal": [6, 30, 74], "typeerror": [6, 30, 38], "unknown": [6, 13, 63], "wrt": 7, "budget": [7, 8, 9, 13, 22, 24, 30, 37, 40, 41, 43, 60, 64, 71, 73, 74, 79, 80, 83, 84, 85, 87, 88, 89, 90], "encod": [7, 30, 47, 60], "thei": [7, 30, 82, 83, 89, 90], "ar": [7, 8, 9, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 34, 35, 36, 38, 39, 41, 43, 48, 49, 55, 58, 60, 64, 65, 67, 68, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "gener": [7, 13, 16, 18, 19, 24, 43, 44, 49, 55, 60, 63, 80, 82, 84, 88, 89], "from": [7, 8, 9, 13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 30, 32, 33, 37, 38, 39, 41, 44, 45, 47, 48, 49, 53, 55, 58, 59, 60, 63, 64, 65, 67, 68, 69, 71, 73, 74, 75, 76, 78, 80, 81, 84, 85, 89, 90, 95], "": [7, 13, 30, 38, 58, 74, 77, 80, 84, 85, 88, 89], "split": [7, 89], "order": [7, 83, 90], "abstractrun": [7, 8, 9, 13, 17, 21, 22, 23, 24, 27, 30, 37, 38, 41, 58, 60], "abstract": [7, 10, 13, 30, 41], "hp": [7, 8, 9, 30, 60], "hp_name": [7, 9, 61], "correspond": [7, 12, 22, 24, 27, 30, 41, 55, 56, 60], "respect": [7, 83, 85, 92, 93], "right": [7, 38, 64, 90, 91], "now": [7, 63, 74, 81, 84, 94], "further": [7, 30, 78, 82, 89, 90], "consid": [7, 8, 9, 30, 65, 67, 68, 81, 82, 89, 90, 91, 94], "By": [7, 8, 9, 13, 30, 41, 48, 49, 60, 90], "highest": [7, 9, 30, 82, 83, 89, 90], "chosen": [7, 9, 30, 38, 83, 91], "how": [7, 8, 9, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94], "mani": [7, 8, 9, 74, 80, 83, 86, 88, 89, 90], "get_import": [7, 9], "sort": [7, 37], "score": [7, 9, 21, 71, 82, 83, 84, 90], "higher": [7, 77, 82], "than": [7, 8, 19, 60, 86, 91], "might": [7, 60, 77, 82, 85, 88], "take": [7, 60, 86, 88], "much": [7, 82, 84, 86, 87, 88], "longer": [7, 60, 82, 88], "often": [7, 85, 89], "dimens": 7, "combin": [7, 30, 41, 78, 79, 80, 83, 85, 86, 90], "dictionari": [7, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 27, 28, 30, 37, 38, 39, 40, 43, 44, 45, 51, 55, 62], "form": [7, 30], "note": [7, 30, 65, 67, 68, 84], "same": [7, 13, 30, 55, 60, 65, 67, 68, 82, 83, 84, 88, 90], "runtimeerror": [7, 8, 9, 13, 17, 18, 19, 30, 34, 35, 38, 39, 41, 45, 48, 60, 74], "zero": 7, "multidimension": 8, "md": [8, 44, 52, 84], "surfac": 8, "plot": [8, 16, 18, 19, 44, 59, 60, 80, 83, 89, 91, 93], "support_discret": 8, "rejection_r": 8, "01": [8, 82], "retri": 8, "exclude_config": 8, "distanc": [8, 84], "color": [8, 57, 59, 60, 82, 83], "show": [8, 13, 18, 60, 65, 67, 68, 71, 73, 74, 83, 86, 88, 89, 90, 91, 92, 93], "discret": [8, 49, 60], "step": [8, 55, 78, 81], "integ": [8, 30, 49], "reject": 8, "rate": [8, 77, 78, 92, 93], "intern": [8, 9, 13, 38, 41], "max": [8, 84], "ha": [8, 30, 32, 33, 34, 35, 45, 49, 55, 58, 74, 78, 88, 91], "smaller": [8, 19, 63], "time": [8, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 37, 40, 41, 43, 63, 64, 71, 73, 74, 80, 83, 84, 88], "ad": [8, 38, 41, 42, 51, 59, 78, 81, 94], "new": [8, 30, 32, 34, 35, 37, 38, 41, 59, 64, 88], "exclud": [8, 30], "particularli": [8, 30], "interest": [8, 13, 15], "search": 8, "get_point": 8, "categori": [8, 12, 50], "specif": [8, 18, 19, 25, 27, 28, 30, 45, 59, 60, 63, 74, 85, 86, 88, 91], "chose": [8, 83], "between": [8, 63, 82, 84, 86, 87, 89, 93], "border": [8, 44, 49, 84], "incumb": [8, 9, 30, 84], "config_id": [8, 27, 30, 37, 43, 60], "wasn": 8, "t": [8, 13, 40, 60, 74], "befor": [8, 13, 22, 24, 77, 87, 88], "get_surfac": 8, "detail": [8, 19, 84, 88, 89, 90, 91], "5": [8, 59, 60, 71, 74, 89, 90], "perform": [8, 28, 79, 80, 82, 86, 88, 90, 91, 93], "meshgrid": 8, "valid": [8, 13, 36, 74, 78, 84], "area": [8, 28, 59, 80], "1d": [8, 83], "z": 8, "2d": [8, 83, 84], "heatmap": [8, 60, 82, 83, 89], "wa": [8, 19, 30, 38, 40, 58, 64, 77, 81, 82, 83, 84, 85, 88, 89, 90, 94], "weren": 8, "overal": [9, 29], "per": [9, 59], "continuous_neighbor": 9, "neighbor": 9, "continu": [9, 82], "incumbent_arrai": 9, "numpi": [9, 30, 60, 73, 74], "vector": 9, "represent": [9, 43, 82, 84], "r": [9, 71, 73, 74], "randomst": 9, "state": [9, 25], "continous_neighbor": 9, "500": 9, "prepar": [9, 13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29], "foundat": 10, "abc": [10, 13, 15, 25, 30, 41], "logger": [10, 15, 25, 30, 38, 56, 58], "__call__": [10, 11, 12, 13, 15, 25], "self": [10, 11, 12, 13, 38, 59, 74, 80], "defin": [11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 31, 33, 34, 35, 39, 40, 44, 47, 55, 58, 59, 63, 71, 74], "custom": [11, 12, 44, 47, 55, 59, 60, 78, 80], "displai": [11, 13, 15, 21, 50, 55, 59, 60, 83, 85, 86, 88, 89], "notfound": 11, "page": [11, 78, 87, 92, 94], "notfoundlayout": 11, "url": [11, 13, 44, 80], "could": [11, 13, 38, 48, 77, 82, 89, 90], "reach": [11, 82, 86, 90], "sidebarlayout": 12, "callback": [12, 13, 15, 25], "regist": [12, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 60, 88], "handl": [12, 13, 15, 25, 30, 33, 38, 43, 44, 45], "categorized_plugin": 12, "plugin": [12, 38, 58, 60, 65, 67, 68, 77, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93], "categor": [12, 60, 90], "nav_point": 12, "attribut": [12, 13, 30, 37, 39, 41, 43], "register_callback": [12, 13, 15, 25], "avail": [13, 30, 38, 62, 64, 65, 67, 68, 81, 85, 94], "differ": [13, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 36, 44, 58, 59, 60, 63, 81, 83, 84, 87, 90], "check": [13, 22, 24, 30, 39, 41, 45, 81, 82, 88, 89, 94], "compat": [13, 22, 24, 30, 43], "layout": [13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 44], "output": [13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 55, 58, 65, 67, 68, 74, 88], "previous_input": [13, 18, 19, 27, 28], "previou": [13, 18, 19, 27, 28, 82], "raw_output": [13, 15, 25], "raw": [13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 58, 80, 88], "activate_run_select": 13, "dropdown": 13, "one": [13, 30, 38, 39, 44, 51, 77, 80, 83, 84, 89, 92, 93], "view": [13, 83, 84, 85, 86, 89, 90], "moreov": [13, 30, 80], "prevent": 13, "result": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 30, 32, 33, 34, 35, 58, 64, 70, 72, 74, 80, 86, 88], "id": [13, 15, 25, 30, 37, 38, 40, 41, 43, 58, 59, 60, 85, 89], "uniqu": [13, 43, 64], "identifi": [13, 15, 30, 90], "group": [13, 30, 38, 78, 80, 85, 86, 89, 90], "help": [13, 55, 77, 80, 83, 90], "path": [13, 30, 32, 33, 34, 35, 37, 38, 40, 41, 48, 52, 53, 54, 58, 59, 62, 64, 65, 67, 68, 74, 78, 81, 94], "document": [13, 80], "shown": [13, 60, 84], "navig": 13, "titl": [13, 18, 59, 80], "button_capt": [13, 25], "caption": [13, 25], "button": [13, 25, 55, 80, 84, 88], "staticplugin": [13, 17, 18, 19, 23, 25, 28], "render_button": 13, "basic": [13, 15, 25, 83, 88], "block": [13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 85, 88], "element": [13, 15, 25, 59], "stack": [13, 15, 25, 89], "up": [13, 15, 25, 30, 44, 56], "here": [13, 15, 25, 65, 67, 68, 73, 82, 83, 84, 85, 89, 90], "render": [13, 17, 24, 28, 59], "notmergeableerror": [13, 22, 24, 30, 36, 38, 39], "filenotfounderror": [13, 38], "file": [13, 30, 38, 41, 44, 45, 48, 52, 54, 59, 64, 69, 75, 76, 77, 78, 81, 88, 94, 95], "found": [13, 17, 30, 38, 41, 74, 78, 81, 84, 94], "all_run": 13, "static": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 39, 88], "check_run_compat": 13, "you": [13, 60, 64, 65, 66, 67, 68, 70, 72, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94], "One": [13, 82, 86, 90], "check_runs_compat": [13, 22, 24], "someth": [13, 22, 24, 81, 84, 94], "common": [13, 22, 24], "sinc": [13, 22, 24, 40, 45, 58, 81, 85, 86, 88], "error": [13, 36, 38, 89], "thrown": [13, 38], "generate_input": [13, 65, 67, 68], "kwarg": [13, 37, 74], "process": [13, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 40, 64, 71, 80, 81, 82, 84, 88], "load_output": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 65, 67, 68], "requir": [13, 60, 88, 94], "api": [13, 65, 67, 68, 69, 80, 95], "mode": [13, 63, 66, 70, 80, 81, 94], "argument": [13, 49, 78], "against": 13, "schema": 13, "runtim": 13, "therefor": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 64, 80, 89], "beforehand": 13, "addit": [13, 40, 41, 43, 60, 88], "keyword": 13, "miss": 13, "classmethod": [13, 32, 33, 34, 35, 41], "generate_output": [13, 65, 67, 68], "activ": [13, 71, 74, 81], "accept": [13, 78], "either": [13, 30, 48, 63], "multipl": [13, 30, 34, 35, 43, 74, 80, 82, 83, 86, 90, 91, 92, 93], "onc": [13, 78], "real": 13, "filter": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 65, 67, 68, 83, 88, 90], "necessari": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 58, 63], "first": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 30, 81, 82, 84, 90, 94], "kei": [13, 30, 37, 38, 40, 43, 45, 58], "get_base_url": 13, "cl": 13, "string": [13, 30, 38, 42, 44, 45, 47, 54, 55, 60, 63], "get_filter_layout": [13, 17, 18, 21, 22, 23, 24, 27, 28], "callabl": [13, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 60], "method": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 60, 64, 65], "user": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 88], "variabl": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 60, 65, 67, 68], "For": [13, 49, 60, 79, 82, 88, 90, 91, 92, 93], "more": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 36, 71, 74, 82, 84, 85, 88, 89, 93], "see": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 61, 70, 72, 78, 81, 82, 83, 84, 85, 86, 89, 90, 91, 93, 94], "register_input": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 60], "get_input_layout": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28], "get_internal_id": 13, "get_internal_input_id": 13, "get_internal_output_id": 13, "get_mpl_output_layout": [13, 17, 24, 28], "matplotlib": [13, 17, 24, 28, 44, 59, 65, 67, 68, 80], "get_output_layout": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29], "get_run_input_layout": 13, "case": [13, 19, 30, 40, 41, 42, 77, 83], "get_selected_run": 13, "pars": [13, 44, 48, 62], "otherwis": [13, 30, 38, 62, 80, 86], "possibl": [13, 44, 46, 48, 49, 60, 62, 80, 81, 84, 86, 88, 89], "preventupd": 13, "load_dependency_input": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29], "load": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 38, 41, 45, 48, 58, 65, 67, 68], "content": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 45, 77], "load_input": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29], "after": [13, 17, 18, 19, 21, 23, 27, 28, 30, 64, 78, 85, 88], "chang": [13, 15, 17, 18, 19, 21, 22, 23, 27, 28, 30, 32, 33, 34, 35, 37, 38, 45, 58, 64, 78, 80, 85, 86, 88, 89, 90, 92, 93], "lot": [13, 84], "flexibl": [13, 80], "merg": [13, 17, 18, 19, 21, 23, 27, 28, 30, 38, 39], "In": [13, 30, 37, 40, 41, 78, 85, 86, 88, 89], "current": [13, 17, 18, 19, 21, 23, 27, 28, 30, 32, 33, 34, 35, 38, 40, 60, 64, 88], "pre": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28], "so": [13, 21, 22, 23, 24, 27, 28, 58, 64, 70, 72, 77, 82, 83, 84, 88, 90], "cach": [13, 15, 17, 18, 19, 21, 22, 23, 24, 27, 28, 30, 32, 33, 34, 35, 38, 44, 58, 60, 80, 84, 88], "its": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 30, 41, 44, 58, 60, 62, 79, 82, 84, 88], "fill": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28], "load_mpl_output": [13, 17, 24, 28, 65, 67, 68], "read": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 45], "them": [13, 21, 22, 23, 24, 27, 28, 29, 30, 60, 78, 84, 90], "clean": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 88], "compar": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 39, 83, 86], "boolean": [13, 60], "cast": [13, 44], "posit": [13, 55, 59], "load_run_input": 13, "both": [13, 48, 55, 60, 64, 78, 88, 91], "singl": [13, 85, 87], "separ": 13, "json": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 39, 43, 45, 47], "serializ": [13, 17, 18, 19, 21, 22, 23, 24, 27, 28], "serial": [13, 18, 19, 21, 22, 23, 24, 27, 28, 41, 44, 47], "follow": [13, 15, 30, 41, 45, 64, 70, 72, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94], "past": [13, 15], "back": [13, 15, 80, 82], "particular": [13, 15, 60, 83], "depend": [13, 15, 16, 18, 19, 30, 66, 69, 70, 82, 93, 95], "dialog": [13, 15], "redirect": [13, 15, 78, 91], "click": [13, 15, 90, 91], "server": [13, 77, 78], "map": [13, 83, 88], "dash": [13, 44, 55, 60, 80], "global": [13, 30, 37, 65], "register_output": [13, 21, 22, 23, 24, 28], "mpl": 13, "registr": 13, "budget_correl": 14, "visual": [14, 16, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 80, 83, 85, 86, 88, 90], "correl": [14, 83], "dynamicplugin": [15, 21, 22, 24, 27, 29], "debug": [15, 45], "use_cach": 15, "pdp": [16, 19, 68, 69, 95], "partial": [16, 18, 19, 66, 69, 70, 93, 95], "symbolic_explan": 16, "symbol": [16, 19, 61], "explan": [16, 19], "non": [17, 18, 60, 80], "locat": [17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 48, 59, 60], "superclass": [17, 18, 19, 21, 22, 23, 24, 27, 28, 29], "html": [17, 19, 21, 24, 27, 55, 60, 61], "div": [17, 21, 27], "img": [17, 24], "dcc": [17, 18, 19, 21, 22, 23, 24], "graph": [17, 18, 19, 21, 22, 23, 24, 85, 86], "_": [17, 21, 23, 29], "like": [17, 18, 19, 21, 23, 27, 28, 78, 80, 81, 82, 84, 86, 90, 94], "figur": [17, 18, 19, 21, 22, 23, 24, 28, 59, 60, 65, 67, 68, 88], "pleas": [17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 78, 80, 93], "_clean_input": [17, 18, 19, 21, 22, 23, 24, 27, 28, 29], "go": [17, 18, 19, 21, 22, 23, 24, 60, 65, 67, 68, 71, 73, 74], "serialzi": 17, "partialdepend": [18, 68], "grid_points_per_axi": [18, 19], "samples_per_hp": [18, 19], "max_sampl": [18, 19], "max_shown_sampl": [18, 19], "dbc": [18, 19, 21, 22, 28, 50, 55], "row": [18, 19, 21, 22, 28, 55, 59], "get_pdp_figur": 18, "show_confid": [18, 68], "show_ic": [18, 68], "confid": 18, "ic": 18, "curv": 18, "Not": [18, 19, 27, 28, 41], "symbolicexplan": 19, "leverag": 19, "obtain": [19, 30, 93], "formula": [19, 93], "explain": 19, "optim": [19, 31, 32, 39, 64, 71, 73, 74, 79, 80, 82, 83, 84, 86, 89, 90, 91, 93], "els": [19, 39, 74], "comparison": [19, 86, 91], "configuration_cub": 20, "configru": 20, "cube": [20, 21], "cost_over_tim": 20, "cost": [20, 22, 30, 37, 40, 41, 43, 60, 71, 73, 74, 78, 84, 88, 91], "parallel_coordin": [20, 67, 69, 95], "parallel": [20, 23, 66, 69, 70, 95], "coordin": [20, 23, 66, 69, 70, 95], "pareto_front": 20, "pareto": [20, 24], "front": [20, 24], "configurationcub": 21, "restrict": [21, 79], "three": [21, 64, 88], "costovertim": 22, "regard": [22, 89], "objective_opt": [22, 24], "budget_opt": [22, 24], "meta": [22, 24, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 64, 93], "equal": [22, 24, 30, 39, 86], "parallelcoordin": [23, 67], "regsit": 23, "fromt": 23, "paretofront": 24, "interact": [24, 66, 70, 78, 80, 81, 94], "enum": [25, 42], "pluginst": 25, "queue": [25, 77, 78, 88], "made": [25, 37], "consum": 25, "task": [25, 74], "characterist": [26, 27], "within": [26, 27], "overview": [26, 66, 70, 84], "dynam": [27, 29, 82, 88, 90], "get_link": 27, "link": [27, 60, 85, 89], "visit": 27, "tabl": [27, 29, 55, 85], "tab": [28, 89], "plotli": [28, 44, 60, 65, 67, 68], "hold": [29, 30, 32, 33, 34, 35, 40, 44, 58], "most": [29, 79, 84, 87, 88, 89, 90], "statist": [29, 89], "origin": [30, 37, 40, 41, 85], "torch": [30, 41, 74], "nn": [30, 41, 74], "histori": [30, 37, 40, 41, 64], "trial": [30, 32, 34, 35, 37, 40, 41, 64, 78, 82, 83, 85, 89, 90, 92, 93], "trial_kei": [30, 37], "trial_id": 30, "models_dir": [30, 41], "directori": [30, 36, 38, 41, 44, 53, 58, 78, 80, 88], "empti": [30, 55], "encode_config": 30, "look": [30, 38, 66, 70, 78, 83, 88], "done": [30, 49, 84, 88], "itself": [30, 37, 43, 82], "get_all_cost": 30, "status": 30, "statu": [30, 40, 41, 43, 74, 85, 89], "stati": [30, 74], "get_budget": 30, "human": [30, 80], "want": [30, 60, 66, 70, 78, 81, 86, 91], "convert": [30, 38, 39, 42, 43, 44, 46, 52, 54, 60, 61, 65, 67, 68, 78, 80, 84], "make": [30, 59, 64, 66, 70, 77, 78, 80, 81, 82, 85, 90, 94], "readabl": 30, "invalid": [30, 60], "get_budget_id": [30, 65, 67, 68], "include_combin": 30, "cut": [30, 63], "last": [30, 40, 89, 90], "get_config": 30, "retriev": [30, 38, 45, 57, 59, 60], "get_config_id": 30, "find": [30, 61, 79, 82, 84, 85, 89, 90, 91], "were": [30, 41, 83, 85, 89], "evalu": [30, 82, 83, 84, 85, 86, 89, 90], "optiona": 30, "get_cost": 30, "multi": [30, 40, 41, 70, 72, 75, 81, 88, 95], "associ": [30, 78, 82, 83, 85, 89], "get_encoded_data": 30, "include_config_id": 30, "include_combined_cost": 30, "implement": [30, 87, 88], "epm": 30, "df": 30, "datafram": [30, 44, 47], "column": [30, 59, 89], "hp1": 30, "hp2": 30, "hpn": 30, "obj1": 30, "obj2": 30, "objm": 30, "combined_cost": 30, "pd": [30, 47], "get_highest_budget": 30, "get_incumb": 30, "get_meta": 30, "shallow": 30, "copi": 30, "get_model": [30, 37], "get_num_config": 30, "count": 30, "get_object": 30, "get_objective_id": [30, 65, 67, 68], "objective_id": [30, 65, 67, 68], "get_objective_nam": 30, "involv": 30, "get_origin": 30, "identif": [30, 37, 43], "get_statu": 30, "get_trajectori": [30, 37], "trajectori": [30, 37], "costs_mean": [30, 37], "costs_std": [30, 37], "get_trial": 30, "respond": 30, "exist": [30, 41, 58, 84, 86], "desir": 30, "get_trial_kei": 30, "through": [30, 82, 83, 84, 90], "assembli": 30, "repres": [30, 42, 43, 84], "consist": [30, 79], "iter": [30, 37, 49], "hash": [30, 32, 33, 34, 35, 37, 38, 41, 44, 58, 64], "clear": [30, 32, 33, 34, 35, 45, 58, 82], "ensur": [30, 32, 33, 34, 35, 58], "alwai": [30, 32, 33, 34, 35], "latest": [30, 32, 33, 34, 35, 37, 57, 61, 64, 89], "contrast": [30, 37, 86, 88], "throughout": [30, 37, 85], "latest_chang": [30, 32, 33, 34, 35, 37, 64], "merge_cost": 30, "weigh": [30, 79], "everi": [30, 80], "lower": [30, 39, 42, 59, 71, 73, 74, 82, 84], "better": [30, 79, 82, 86, 91], "length": [30, 55, 63], "reset": [30, 44, 45, 57, 58], "initi": 30, "check_equ": 30, "request": [30, 88], "wheter": 30, "bohb": [31, 64, 80], "manag": [31, 32, 37, 90], "concern": [31, 32, 36, 84], "bayesian": [31, 32, 79], "bandit": [31, 32], "smac3v1": 31, "sequenti": [31, 34, 35, 74], "smac3v2": 31, "bohbrun": 32, "from_path": [32, 33, 34, 35, 41, 64, 65, 67, 68], "add": [32, 38, 40, 41, 59, 64, 74, 78, 81, 88, 90], "pathnam": [32, 62], "timestamp": [32, 33, 34, 35, 63], "deepcaverun": [33, 40, 65, 67, 68], "smac3v1run": 34, "4": [34, 45, 49, 60, 64, 74, 81, 94], "working_dir": [34, 35], "run_nam": [34, 35, 37], "smac3v2run": 35, "mergeabl": [36, 39], "notvalidrunerror": [36, 38], "two": [36, 39, 55, 79, 84, 88, 91, 92, 93], "prefix": [37, 40, 41, 63], "__iter__": 37, "allow": [37, 64, 80, 83, 90, 93], "get_new_config_id": 37, "run_id": [37, 38, 71, 74], "original_config_id": 37, "get_original_config_id": 37, "get_original_run": 37, "get_run": [37, 38], "arg": 37, "run_path": [37, 38], "updat": [38, 44, 45, 51, 57, 58, 77, 88, 89], "remov": [38, 58, 87, 90], "runhandl": 38, "run_cach": [38, 44], "automat": [38, 60, 64, 78, 80], "switch": 38, "about": [38, 42, 55, 60, 82, 84, 85, 89, 93], "rc": 38, "runcach": [38, 58], "available_run_yf": 38, "available_run_class": 38, "add_run": 38, "alreadi": [38, 41, 82, 84, 88], "do": [38, 55, 70, 72, 77, 80, 81, 82, 83, 84, 88, 90, 92, 93, 94], "noth": 38, "get_available_run_path": 38, "except": 38, "get_group": 38, "instanti": [38, 65, 67, 68], "groupedrun": 38, "insid": [38, 64, 81, 94], "refer": [38, 88, 89], "get_run_nam": 38, "stem": 38, "include_group": 38, "readi": [38, 88], "get_selected_group": 38, "assertionerror": [38, 40, 58], "get_selected_run_nam": 38, "get_selected_run_path": 38, "get_working_directori": 38, "remove_run": 38, "selected_run_path": 38, "set_working_directori": 38, "working_directori": 38, "update_group": 38, "save": [38, 41, 58, 59, 60, 70, 72, 80, 88], "update_run": 38, "class_hint": 38, "hint": 38, "suggest": 38, "what": [38, 77, 82, 84, 89, 90], "upper": [39, 59, 71, 73, 74], "lock_low": 39, "lock": 39, "lock_upp": 39, "__eq__": 39, "other": [39, 59, 65, 67, 68, 71, 74, 78, 84, 85, 86], "__post_init__": [39, 43], "from_json": 39, "d": [39, 45, 49], "friendli": 39, "format": [39, 42, 47, 52, 60, 64, 70, 71, 72], "get_worst_valu": 39, "worst": 39, "part": [39, 85, 89], "to_json": [39, 43], "save_path": [40, 71, 73, 74], "log": [40, 44, 65, 67, 68, 70, 71, 72, 73, 74, 89], "overwrit": [40, 59], "last_trial_id": 40, "start_tim": [40, 41, 43, 74], "second": 40, "epoch": [40, 74, 79], "end": [40, 41, 43, 65, 67, 68, 71, 73, 74, 85, 88, 89], "success": [40, 41, 42, 74, 89], "end_tim": [40, 41, 43, 74], "correctli": [40, 64], "yet": 40, "meta_fn": 41, "configspace_fn": 41, "configs_fn": 41, "origins_fn": 41, "history_fn": 41, "overwritten": [41, 59], "expect": [41, 89], "traceback": 41, "doe": [41, 58, 82, 83, 84, 86, 88, 90, 92, 93], "where": [41, 83, 84, 85, 91], "text": [42, 55, 60, 82], "simpler": 42, "timeout": [42, 74], "memoryout": [42, 74], "crash": [42, 74, 85, 89, 90], "abort": 42, "not_evalu": [42, 89], "intenum": 42, "to_text": 42, "get_kei": 43, "tupel": 43, "utilitii": 44, "compress": 44, "deseri": [44, 47], "filenam": [44, 45, 48, 52, 53, 54, 59, 81, 94], "flash": [44, 50], "alert": [44, 50], "data_structur": 44, "anoth": [44, 51, 83], "inplac": [44, 51], "doc": [44, 61], "restructuredtext": [44, 52], "rst": [44, 52], "markdown": [44, 52], "notif": 44, "styled_plot": 44, "styled_plotti": 44, "style": [44, 50, 59, 60], "accord": [44, 62, 89, 90], "shorten": [44, 60, 63], "write": [45, 64], "write_fil": 45, "decid": [45, 79, 86], "flask_cach": 45, "code": [45, 60, 65, 67, 68, 70, 71, 73, 74, 80], "easier": 45, "our": [45, 80, 88], "chain": 45, "b": [45, 51, 86, 91], "set_dict": 45, "optional_int": 46, "turn": 46, "json_dense_separ": 47, "json_default_separ": 47, "typevar": 47, "dtype": 47, "panda": 47, "core": [47, 61, 79], "frame": 47, "parse_config": 48, "rel": [48, 78], "absolut": [48, 78], "python": [48, 65, 67, 68, 70, 71, 73, 74, 80, 81, 85], "inherit": [48, 64, 78], "sample_border_config": 49, "drawn": 49, "yield": 49, "sample_random_config": 49, "reduc": 49, "rang": [49, 71, 74, 82, 90], "exampl": [49, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 79, 82, 88, 89, 90, 91, 92, 93, 95], "four": [49, 85], "messag": [50, 57], "info": 50, "flask": 50, "structur": [51, 55, 80], "update_dict": 51, "rst_to_md": 52, "make_dir": 53, "parent": 53, "intermedi": 53, "file_to_hash": 54, "string_to_hash": 54, "slider": [55, 83], "mark": 55, "checklist": 55, "radio": 55, "create_t": 55, "fix": 55, "head": 55, "stripe": 55, "mb": [55, 69, 75, 76, 95], "get_checklist_opt": 55, "label": [55, 60, 90], "binari": 55, "To": [55, 64, 70, 72, 77, 84, 86, 89, 91, 93], "al": 55, "choic": [55, 71, 74, 86], "when": [55, 64, 77, 82, 83, 84, 86, 88, 89], "get_radio_opt": 55, "get_select_opt": 55, "disabl": [55, 91], "each": [55, 58, 84], "get_slider_mark": 55, "access_al": 55, "item": 55, "help_button": 55, "placement": [55, 59], "top": [55, 80, 90], "icon": 55, "popov": 55, "hover": [55, 60], "wrap": 55, "span": [55, 89], "get_logg": 56, "logger_nam": 56, "get_latest": 57, "danger": 57, "again": [58, 90], "own": [58, 82, 88], "cache_dir": 58, "clear_run": 58, "plugin_id": 58, "inputs_kei": 58, "_dict_as_kei": 58, "variant": 58, "styledplot": 59, "pyplot": 59, "fig_width": 59, "fig_height": 59, "plt": 59, "seaborn": 59, "__getattr__": 59, "sure": [59, 64, 77, 78, 81, 82], "access": [59, 80, 81, 85, 94], "directli": [59, 64, 66, 70, 72, 80, 81, 86, 88], "boxplot": 59, "width": [59, 74], "arraylik": 59, "box": [59, 79, 89], "col": 59, "dpi": 59, "200": [59, 71], "dot": 59, "inch": 59, "get_color": [59, 60], "palett": [59, 60], "legend": 59, "loc": 59, "outsid": 59, "matplot": 59, "appear": 59, "determin": [59, 82, 85, 86, 90], "place": [59, 90], "save_figur": 59, "xlim": 59, "xmin": 59, "xmax": 59, "axi": [59, 60, 84, 86, 89, 90], "limit": [59, 79, 90], "ylim": 59, "ymin": 59, "ymax": 59, "plotti": 60, "generate_config_cod": 60, "id_": 60, "alpha": [60, 68, 73], "rgba": 60, "get_discrete_heatmap": 60, "colorscal": 60, "nest": 60, "present": 60, "get_hovertext_from_config": 60, "metric": [60, 79, 85], "get_hyperparameter_tick": 60, "additional_valu": 60, "tick": 60, "include_nan": 60, "tickval": 60, "ticktext": 60, "background": [60, 84], "don": 60, "With": [60, 90], "6": [60, 81, 94, 95], "behavior": [60, 92, 93], "ignor": [60, 74], "forc": 60, "nan": 60, "get_hyperparameter_ticks_from_valu": 60, "enforc": 60, "independ": 60, "hex_to_rgb": 60, "hex_str": 60, "rgb": 60, "000000": 60, "ff00ff": 60, "hex": 60, "7": [60, 74, 82], "charact": 60, "prettify_label": 60, "prettifi": 60, "save_imag": 60, "imag": [60, 78], "extens": 60, "Will": 60, "gplearn": 61, "convert_symb": 61, "symb": 61, "n_decim": 61, "simplifi": 61, "round": [61, 74], "mathemat": 61, "express": 61, "warn": 61, "eval": 61, "thu": 61, "unsanit": 61, "http": [61, 80, 81, 94], "sympi": 61, "org": [61, 80], "highlight": 61, "sympifi": 61, "symbolicregressor": 61, "regressor": 61, "decim": 61, "replac": 61, "x0": 61, "x1": 61, "exp": 61, "safe": 61, "maximum": 61, "100000": 61, "avoid": [61, 78], "overflow": 61, "exponenti": 61, "get_function_set": 61, "_function": 61, "create_url": 62, "parse_url": 62, "extract": 62, "get_latest_chang": 63, "st_mtime": 63, "get_random_str": 63, "short_str": 63, "30": [63, 71, 82], "suffix": 63, "deepcav": [64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 80, 81, 88, 94], "interpret": [64, 78], "folder": [64, 81, 94], "put": 64, "nativ": [64, 80], "smac": [64, 79, 80], "v1": 64, "v2": 64, "auto": 64, "sklearn": [64, 70, 72, 75, 95], "pytorch": [64, 70, 72, 75, 95], "observ": 64, "system": 64, "monitor": 64, "finish": [64, 77], "regularli": 64, "disk": 64, "long": [64, 86], "available_convert": 64, "your": [64, 70, 72, 73, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 94], "branch": [64, 88], "py": [64, 65, 67, 68, 69, 71, 73, 74, 75, 78, 88, 95], "next": [64, 81, 84, 88, 89], "did": [64, 89, 90], "fail": 64, "download": [65, 67, 68, 70, 71, 73, 74, 81, 94], "full": [65, 67, 68, 71, 73, 74, 80, 89], "interfac": [65, 67, 68, 80, 88], "fashion": [65, 67, 68], "pathlib": [65, 67, 68], "__name__": [65, 67, 68, 71, 74], "__main__": [65, 67, 68, 71, 74], "minim": [65, 67, 68, 70, 72, 75, 79, 88, 95], "run_2": [65, 67, 68], "budget_id": [65, 67, 68], "hyperparameter_nam": [65, 67], "get_hyperparameter_nam": [65, 67], "n_hp": [65, 67], "final": [65, 67, 68, 82, 83, 90], "plai": [65, 67, 68], "role": [65, 67, 68], "altern": [65, 67, 68], "write_imag": [65, 67, 68], "png": [65, 67, 68], "jupyt": [65, 67, 68, 70, 71, 73, 74], "notebook": [65, 67, 68, 70, 71, 73, 74], "ipynb": [65, 67, 68, 71, 73, 74], "wai": [66, 70, 82, 86, 88, 89, 90], "show_important_onli": 67, "show_unsuccess": 67, "hide_hp": 67, "hyperparameter_name_1": 68, "hyperparameter_name_2": 68, "00": [69, 75, 76, 95], "000": [69, 75, 76, 95], "execut": [69, 75, 76, 80, 95], "mem": [69, 75, 76, 95], "incorpor": [70, 72, 74, 82], "idea": [70, 72], "automl": [70, 72, 80, 81, 86, 88], "layer": [70, 72, 75, 95], "perceptron": [70, 72, 75, 95], "via": [70, 72, 75, 78, 95], "examples_python": 70, "zip": 70, "examples_jupyt": 70, "advanc": [71, 74], "record": [71, 74, 75, 80, 95], "neural_network": 71, "mlpclassifi": 71, "model_select": 71, "train_test_split": 71, "uniformfloathyperparamet": [71, 73, 74], "categoricalhyperparamet": [71, 74], "uniformintegerhyperparamet": [71, 74], "dataset": [71, 74], "load_digit": 71, "def": [71, 74], "get_dataset": 71, "digit": 71, "x_train": 71, "x_test": 71, "y_train": 71, "y_test": 71, "stratifi": 71, "random_st": 71, "get_configspac": [71, 74], "num_neurons_layer1": [71, 74], "100": [71, 73, 74], "num_neurons_layer2": [71, 74], "logist": 71, "tanh": [71, 74], "relu": [71, 74], "solver": 71, "sgd": 71, "adam": [71, 74], "batch_siz": [71, 74], "learning_r": [71, 74], "0001": [71, 74], "add_hyperparamet": [71, 73, 74], "accuraci": [71, 73, 74, 79, 92, 93], "20": [71, 73, 82], "40": [71, 73, 82], "50": 71, "60": [71, 73], "70": [71, 82], "80": 71, "90": 71, "num_config": [71, 74], "num_run": [71, 74], "digits_sklearn": [71, 75, 95], "sample_configur": [71, 73, 74], "clf": 71, "max_it": 71, "hidden_layer_s": 71, "learning_rate_init": 71, "goe": 73, "uniform": [73, 74], "low": [73, 82, 88, 89, 91], "high": [73, 82, 83, 84, 86, 89, 90], "statuss": 74, "strenght": 74, "inspect": [74, 83], "boundargu": 74, "o": 74, "re": [74, 90], "f": 74, "dataload": 74, "random_split": 74, "torchvis": 74, "torchmetr": 74, "mnist": 74, "pytorch_lightn": 74, "pl": 74, "num_work": 74, "mnistmodel": 74, "lightningmodul": 74, "__init__": 74, "dropout_r": 74, "super": 74, "elif": 74, "sigmoid": 74, "data_dir": 74, "join": 74, "getcwd": 74, "num_class": 74, "dim": 74, "28": 74, "channel": 74, "height": 74, "compos": 74, "totensor": 74, "1307": 74, "3081": 74, "multiclass": 74, "prepare_data": 74, "setup": 74, "stage": 74, "assign": 74, "val": 74, "mnist_ful": 74, "mnist_train": 74, "mnist_val": 74, "20000": 74, "40000": 74, "test": [74, 81], "mnist_test": 74, "train_dataload": 74, "val_dataload": 74, "test_dataload": 74, "training_step": 74, "batch": 74, "batch_idx": 74, "logit": 74, "loss": [74, 79], "nll_loss": 74, "validation_step": 74, "pred": 74, "argmax": 74, "val_loss": 74, "prog_bar": 74, "val_acc": 74, "test_step": 74, "configure_optim": 74, "lr": 74, "mlp": 74, "num_neuron": 74, "32": 74, "flatten": 74, "linear": [74, 89], "dropout": 74, "forward": 74, "log_softmax": 74, "cnn": 74, "conv1": 74, "conv2d": 74, "in_channel": 74, "out_channel": 74, "kernel_s": 74, "stride": 74, "pad": 74, "maxpool2d": 74, "conv2": 74, "fulli": [74, 82], "connect": 74, "out": [74, 89], "9": [74, 81], "256": 74, "sub": [74, 80], "add_condit": 74, "equalscondit": 74, "max_epoch": 74, "8": 74, "n_epoch": 74, "linspac": 74, "num": 74, "1000": 74, "mnist_pytorch": [74, 75, 95], "seed_everyth": 74, "weight": 74, "trainer": 74, "acceler": 74, "cpu": 74, "devic": 74, "num_sanity_val_step": 74, "No": [74, 82, 90], "saniti": [74, 82, 88, 89], "determinist": 74, "min_epoch": 74, "accuracy_": 74, "loss_": 74, "we": [74, 81, 82, 84, 87, 88, 89, 90], "just": [74, 90], "some": [74, 77, 84, 88, 89], "potenti": 74, "later": 74, "05": 74, "chanc": 74, "elapsed_tim": 74, "n": [76, 81], "wrong": 77, "instal": [77, 78], "redi": 77, "my": [77, 91], "machin": [77, 79, 80], "fastest": 77, "issu": 77, "too": [77, 86], "slow": 77, "circl": 77, "increas": [77, 84, 85, 92, 93], "refresh": [77, 78], "refresh_r": 77, "command": [78, 81], "addition": [78, 93], "sever": 78, "open": 78, "n_worker": 78, "gui": 78, "browser": 78, "been": [78, 84, 85, 89], "worker": [78, 81], "ip": 78, "port": 78, "howev": [78, 82, 86, 89], "enclos": 78, "quot": 78, "reserv": 78, "hit": [78, 84], "enter": 78, "dashboard": [78, 80], "main": [78, 79], "action": 78, "collect": [78, 80, 93], "easili": 78, "bo": 79, "black": 79, "explor": [79, 80, 84], "exploit": 79, "minimum": 79, "arbitrari": [79, 82], "learn": [79, 80, 92, 93], "aggress": 79, "race": 79, "mechan": 79, "effici": [79, 80, 91], "maxim": [79, 80], "wherea": 79, "anyth": 79, "frequent": 79, "neural": [79, 82], "network": [79, 82], "especi": [80, 85], "problem": [80, 81, 90, 91], "framework": 80, "program": 80, "entir": [80, 89], "divers": 80, "insight": [80, 84, 88, 90], "bring": 80, "loop": 80, "power": 80, "modular": 80, "extend": 80, "effortlessli": 80, "complet": [80, 88, 90], "written": 80, "while": [80, 85, 88, 93], "detect": 80, "larg": [80, 87], "asynchron": 80, "expens": 80, "integr": 80, "understand": [80, 84, 88, 89], "public": 80, "give": [80, 83, 85, 88, 94], "research": 80, "project": 80, "cite": 80, "realml": 80, "icml": 80, "22": 80, "workshop": 80, "paper": [80, 93], "misc": 80, "sass": 80, "realml2022": 80, "autom": 80, "author": 80, "ren\u00e9": 80, "bergman": 80, "eddi": 80, "biedenkapp": 80, "andr\u00e9": 80, "hutter": 80, "frank": 80, "lindauer": 80, "mariu": 80, "doi": 80, "48550": 80, "arxiv": 80, "2206": 80, "03493": 80, "ab": 80, "publish": 80, "year": 80, "2022": 80, "copyright": 80, "perpetu": 80, "exclus": 80, "licens": 80, "brew": [81, 94], "sudo": [81, 94], "apt": [81, 94], "linux": [81, 94], "section": [81, 85, 89], "exten": 81, "instruct": 81, "bash": 81, "script": 81, "servic": 81, "webserv": 81, "window": 81, "recommend": [81, 88], "anaconda": 81, "swig": 81, "environ": 81, "conda": 81, "pip": 81, "contribut": 81, "github": 81, "dev": 81, "git": 81, "clone": 81, "com": 81, "try": [81, 82, 84, 89, 94], "usr": [81, 94], "sbin": [81, 94], "simpli": [81, 85, 94], "expand": [81, 94], "export": [81, 94], "bashrc": [81, 94], "admin": [81, 94], "root": [81, 94], "tar": [81, 94], "gz": [81, 94], "mkdir": [81, 94], "p": [81, 94], "vendor": [81, 94], "cd": [81, 94], "wget": [81, 94], "io": [81, 94], "releas": [81, 94], "xzvf": [81, 94], "rm": [81, 94], "pwd": [81, 94], "m1": 81, "disable_spr": 81, "objc_disable_initialize_fork_safeti": 81, "ye": [81, 90], "bash_profil": 81, "enabl": [81, 90, 91], "representit": 82, "gain": [82, 86], "knowledg": [82, 84], "know": [82, 84, 85, 86, 89, 90], "good": [82, 84, 86, 91], "enough": 82, "infer": [82, 84], "would": [82, 86, 88, 89], "conversli": 82, "realli": [82, 90], "converg": [82, 86], "still": [82, 84], "till": 82, "capabl": [82, 84, 85, 86, 87, 89, 91, 92, 93], "answer": [82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93], "question": [82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93], "fair": [82, 89], "cover": [82, 84], "wish": [82, 83, 90], "commun": [82, 83], "thing": 82, "perfectli": 82, "trace": 82, "ll": [82, 84, 89], "mid": 82, "slowli": 82, "drop": 82, "There": [82, 84, 88], "great": 82, "certain": [82, 83, 85, 86, 89, 90], "extra": 82, "resourc": [82, 84], "less": 82, "faster": [82, 86], "lowest": 82, "achiev": [82, 84, 86, 90], "least": 82, "rather": 82, "context": 82, "veri": [82, 83, 88], "strong": 82, "relationship": 82, "69": 82, "39": 82, "moder": 82, "29": 82, "weak": 82, "19": 82, "neglig": 82, "natur": 83, "mai": [83, 90], "dimension": [83, 84, 88], "investig": 83, "3d": 83, "slice": 83, "under": [83, 84, 87, 89, 90, 92], "move": 83, "along": [83, 89, 90], "hyperparamt": [83, 90], "grid": 83, "evid": 83, "influenc": [83, 84, 86, 87, 88], "tend": [83, 90], "prefer": [83, 84, 90, 91], "known": 84, "dure": [84, 89, 93], "These": [84, 89, 90], "stop": 84, "invest": 84, "comput": [84, 91], "favor": 84, "let": [84, 85, 89, 90], "briefli": 84, "mention": [84, 86], "variou": [84, 90], "kind": [84, 88], "best": [84, 86, 89, 91], "red": 84, "triangl": 84, "orang": 84, "unevalu": 84, "purpl": 84, "edg": 84, "min": 84, "scalar": 84, "around": 84, "those": [84, 90], "address": 84, "reduct": 84, "attempt": 84, "preserv": 84, "spaceto": 84, "Of": 84, "cours": 84, "perfect": [84, 86, 89], "begin": 84, "talk": 84, "share": [84, 90], "co": 84, "ordin": 84, "swap": 84, "benefici": 84, "firm": 84, "grasp": 84, "perhap": 84, "mous": 84, "tell": [84, 85, 87], "possibli": 84, "noisi": 84, "rest": 84, "colour": [84, 89], "represnt": 84, "estim": 84, "region": 84, "resolut": 84, "gridsiz": 84, "nice": [84, 85, 89], "quit": [84, 90], "ideal": [84, 89], "blob": 84, "small": 84, "cluster": 84, "focus": 84, "scatter": 84, "applic": 85, "come": 85, "hand": [85, 90], "why": [85, 89], "concret": 85, "deploy": 85, "crucial": 85, "somehow": 85, "goal": [86, 88], "peak": 86, "conveni": 86, "adition": 86, "As": [86, 87], "abov": [86, 90], "line": [86, 89, 90], "wors": 86, "spread": 86, "construct": [87, 92], "reli": 87, "cannot": 87, "workaround": 87, "break": 87, "condit": 87, "forbidden": 87, "analys": 88, "aspect": 88, "easi": [88, 90], "serv": [88, 89], "deeper": 88, "suit": 88, "trigger": 88, "act": 88, "immedi": 88, "describ": [88, 93], "quick": 88, "soon": 88, "decis": 88, "viewabl": 88, "side": 88, "bar": [88, 89, 90], "upon": 88, "design": 88, "adapt": 88, "happi": 88, "receiv": 88, "pull": 88, "unsuccess": [89, 90], "On": 89, "summari": 89, "notabl": 89, "tri": 89, "alloc": 89, "barplot": 89, "occur": 89, "reciev": 89, "exit": 89, "progress": 89, "scenario": 89, "mostli": 89, "face": 89, "onward": 89, "balanc": 89, "breif": 89, "lastli": [89, 90], "being": 89, "v": 89, "trend": 90, "left": 90, "ones": 90, "spine": 90, "home": 90, "lead": 90, "incom": 90, "arrang": 90, "instead": 90, "crowd": 90, "caus": 90, "overwhelm": 90, "draw": 90, "drag": 90, "togeth": 90, "relev": 90, "sens": 90, "sometim": 90, "similar": [90, 92, 93], "behaviour": 90, "situat": 91, "due": 91, "suitabl": 91, "choos": 91, "slightli": 91, "decreas": [92, 93], "explicit": 93, "quantifi": 93, "effect": 93, "captur": 93, "mac": 94, "galleri": 95}, "objects": {"deepcave": [[1, 0, 0, "-", "evaluators"], [10, 0, 0, "-", "layouts"], [13, 0, 0, "-", "plugins"], [30, 0, 0, "-", "runs"], [44, 0, 0, "-", "utils"]], "deepcave.evaluators": [[2, 0, 0, "-", "epm"], [7, 0, 0, "-", "fanova"], [8, 0, 0, "-", "footprint"], [9, 0, 0, "-", "lpi"]], "deepcave.evaluators.epm": [[3, 0, 0, "-", "fanova_forest"], [4, 0, 0, "-", "random_forest"], [5, 0, 0, "-", "random_forest_surrogate"], [6, 0, 0, "-", "utils"]], "deepcave.evaluators.epm.fanova_forest": [[3, 1, 1, "", "FanovaForest"]], "deepcave.evaluators.epm.fanova_forest.FanovaForest": [[3, 2, 1, "", "compute_marginals"]], "deepcave.evaluators.epm.random_forest": [[4, 1, 1, "", "RandomForest"]], "deepcave.evaluators.epm.random_forest.RandomForest": [[4, 2, 1, "", "get_leaf_values"], [4, 2, 1, "", "predict"], [4, 2, 1, "", "predict_marginalized"], [4, 2, 1, "", "train"]], "deepcave.evaluators.epm.random_forest_surrogate": [[5, 1, 1, "", "RandomForestSurrogate"]], "deepcave.evaluators.epm.random_forest_surrogate.RandomForestSurrogate": [[5, 2, 1, "", "predict"]], "deepcave.evaluators.epm.utils": [[6, 3, 1, "", "get_types"]], "deepcave.evaluators.fanova": [[7, 1, 1, "", "fANOVA"]], "deepcave.evaluators.fanova.fANOVA": [[7, 2, 1, "", "calculate"], [7, 2, 1, "", "get_importances"]], "deepcave.evaluators.footprint": [[8, 1, 1, "", "Footprint"]], "deepcave.evaluators.footprint.Footprint": [[8, 2, 1, "", "calculate"], [8, 2, 1, "", "get_points"], [8, 2, 1, "", "get_surface"]], "deepcave.evaluators.lpi": [[9, 1, 1, "", "LPI"]], "deepcave.evaluators.lpi.LPI": [[9, 2, 1, "", "calculate"], [9, 2, 1, "", "get_importances"]], "deepcave.layouts": [[10, 1, 1, "", "Layout"], [11, 0, 0, "-", "not_found"], [12, 0, 0, "-", "sidebar"]], "deepcave.layouts.Layout": [[10, 2, 1, "", "__call__"]], "deepcave.layouts.not_found": [[11, 1, 1, "", "NotFoundLayout"]], "deepcave.layouts.not_found.NotFoundLayout": [[11, 2, 1, "", "__call__"]], "deepcave.layouts.sidebar": [[12, 1, 1, "", "SidebarLayout"]], "deepcave.layouts.sidebar.SidebarLayout": [[12, 2, 1, "", "__call__"], [12, 2, 1, "", "register_callbacks"]], "deepcave.plugins": [[13, 1, 1, "", "Plugin"], [14, 0, 0, "-", "budget"], [15, 0, 0, "-", "dynamic"], [16, 0, 0, "-", "hyperparameter"], [20, 0, 0, "-", "objective"], [25, 0, 0, "-", "static"], [26, 0, 0, "-", "summary"]], "deepcave.plugins.Plugin": [[13, 2, 1, "", "__call__"], [13, 4, 1, "", "all_runs"], [13, 2, 1, "", "check_run_compatibility"], [13, 2, 1, "", "check_runs_compatibility"], [13, 2, 1, "", "generate_inputs"], [13, 2, 1, "", "generate_outputs"], [13, 2, 1, "", "get_base_url"], [13, 2, 1, "", "get_filter_layout"], [13, 2, 1, "", "get_input_layout"], [13, 2, 1, "", "get_internal_id"], [13, 2, 1, "", "get_internal_input_id"], [13, 2, 1, "", "get_internal_output_id"], [13, 2, 1, "", "get_mpl_output_layout"], [13, 2, 1, "", "get_output_layout"], [13, 2, 1, "", "get_run_input_layout"], [13, 2, 1, "", "get_selected_runs"], [13, 4, 1, "", "groups"], [13, 2, 1, "", "load_dependency_inputs"], [13, 2, 1, "", "load_inputs"], [13, 2, 1, "", "load_mpl_outputs"], [13, 2, 1, "", "load_outputs"], [13, 2, 1, "", "load_run_inputs"], [13, 2, 1, "", "process"], [13, 2, 1, "", "register_callbacks"], [13, 2, 1, "", "register_input"], [13, 2, 1, "", "register_output"], [13, 4, 1, "", "runs"]], "deepcave.plugins.dynamic": [[15, 1, 1, "", "DynamicPlugin"]], "deepcave.plugins.dynamic.DynamicPlugin": [[15, 2, 1, "", "__call__"], [15, 2, 1, "", "register_callbacks"]], "deepcave.plugins.hyperparameter": [[17, 0, 0, "-", "importances"], [18, 0, 0, "-", "pdp"], [19, 0, 0, "-", "symbolic_explanations"]], "deepcave.plugins.hyperparameter.importances": [[17, 1, 1, "", "Importances"]], "deepcave.plugins.hyperparameter.importances.Importances": [[17, 2, 1, "", "get_filter_layout"], [17, 2, 1, "", "get_input_layout"], [17, 2, 1, "", "get_mpl_output_layout"], [17, 2, 1, "", "get_output_layout"], [17, 2, 1, "", "load_dependency_inputs"], [17, 2, 1, "", "load_inputs"], [17, 2, 1, "", "load_mpl_outputs"], [17, 2, 1, "", "load_outputs"], [17, 2, 1, "", "process"]], "deepcave.plugins.hyperparameter.pdp": [[18, 1, 1, "", "PartialDependencies"]], "deepcave.plugins.hyperparameter.pdp.PartialDependencies": [[18, 2, 1, "", "get_filter_layout"], [18, 2, 1, "", "get_input_layout"], [18, 2, 1, "", "get_output_layout"], [18, 2, 1, "", "get_pdp_figure"], [18, 2, 1, "", "load_dependency_inputs"], [18, 2, 1, "", "load_inputs"], [18, 2, 1, "", "load_outputs"], [18, 2, 1, "", "process"]], "deepcave.plugins.hyperparameter.symbolic_explanations": [[19, 1, 1, "", "SymbolicExplanations"]], "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations": [[19, 2, 1, "", "get_input_layout"], [19, 2, 1, "", "get_output_layout"], [19, 2, 1, "", "load_dependency_inputs"], [19, 2, 1, "", "load_inputs"], [19, 2, 1, "", "load_outputs"], [19, 2, 1, "", "process"]], "deepcave.plugins.objective": [[21, 0, 0, "-", "configuration_cube"], [22, 0, 0, "-", "cost_over_time"], [23, 0, 0, "-", "parallel_coordinates"], [24, 0, 0, "-", "pareto_front"]], "deepcave.plugins.objective.configuration_cube": [[21, 1, 1, "", "ConfigurationCube"]], "deepcave.plugins.objective.configuration_cube.ConfigurationCube": [[21, 2, 1, "", "get_filter_layout"], [21, 2, 1, "", "get_input_layout"], [21, 2, 1, "", "get_output_layout"], [21, 2, 1, "", "load_dependency_inputs"], [21, 2, 1, "", "load_inputs"], [21, 2, 1, "", "load_outputs"], [21, 2, 1, "", "process"]], "deepcave.plugins.objective.cost_over_time": [[22, 1, 1, "", "CostOverTime"]], "deepcave.plugins.objective.cost_over_time.CostOverTime": [[22, 2, 1, "", "check_runs_compatibility"], [22, 2, 1, "", "get_filter_layout"], [22, 2, 1, "", "get_input_layout"], [22, 2, 1, "", "get_output_layout"], [22, 2, 1, "", "load_inputs"], [22, 2, 1, "", "load_outputs"], [22, 2, 1, "", "process"]], "deepcave.plugins.objective.parallel_coordinates": [[23, 1, 1, "", "ParallelCoordinates"]], "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates": [[23, 2, 1, "", "get_filter_layout"], [23, 2, 1, "", "get_input_layout"], [23, 2, 1, "", "get_output_layout"], [23, 2, 1, "", "load_dependency_inputs"], [23, 2, 1, "", "load_inputs"], [23, 2, 1, "", "load_outputs"], [23, 2, 1, "", "process"]], "deepcave.plugins.objective.pareto_front": [[24, 1, 1, "", "ParetoFront"]], "deepcave.plugins.objective.pareto_front.ParetoFront": [[24, 2, 1, "", "check_runs_compatibility"], [24, 2, 1, "", "get_filter_layout"], [24, 2, 1, "", "get_input_layout"], [24, 2, 1, "", "get_mpl_output_layout"], [24, 2, 1, "", "get_output_layout"], [24, 2, 1, "", "load_inputs"], [24, 2, 1, "", "load_mpl_outputs"], [24, 2, 1, "", "load_outputs"], [24, 2, 1, "", "process"]], "deepcave.plugins.static": [[25, 1, 1, "", "PluginState"], [25, 1, 1, "", "StaticPlugin"]], "deepcave.plugins.static.StaticPlugin": [[25, 2, 1, "", "__call__"], [25, 2, 1, "", "register_callbacks"]], "deepcave.plugins.summary": [[27, 0, 0, "-", "configurations"], [28, 0, 0, "-", "footprint"], [29, 0, 0, "-", "overview"]], "deepcave.plugins.summary.configurations": [[27, 1, 1, "", "Configurations"]], "deepcave.plugins.summary.configurations.Configurations": [[27, 2, 1, "", "get_input_layout"], [27, 2, 1, "", "get_link"], [27, 2, 1, "", "get_output_layout"], [27, 2, 1, "", "load_dependency_inputs"], [27, 2, 1, "", "load_inputs"], [27, 2, 1, "", "load_outputs"], [27, 2, 1, "", "process"]], "deepcave.plugins.summary.footprint": [[28, 1, 1, "", "FootPrint"]], "deepcave.plugins.summary.footprint.FootPrint": [[28, 2, 1, "", "get_filter_layout"], [28, 2, 1, "", "get_input_layout"], [28, 2, 1, "", "get_mpl_output_layout"], [28, 2, 1, "", "get_output_layout"], [28, 2, 1, "", "load_dependency_inputs"], [28, 2, 1, "", "load_inputs"], [28, 2, 1, "", "load_mpl_outputs"], [28, 2, 1, "", "load_outputs"], [28, 2, 1, "", "process"]], "deepcave.plugins.summary.overview": [[29, 1, 1, "", "Overview"]], "deepcave.plugins.summary.overview.Overview": [[29, 2, 1, "", "get_output_layout"], [29, 2, 1, "", "load_outputs"]], "deepcave.runs": [[30, 1, 1, "", "AbstractRun"], [30, 3, 1, "", "check_equality"], [31, 0, 0, "-", "converters"], [36, 0, 0, "-", "exceptions"], [37, 0, 0, "-", "group"], [38, 0, 0, "-", "handler"], [39, 0, 0, "-", "objective"], [40, 0, 0, "-", "recorder"], [41, 0, 0, "-", "run"], [42, 0, 0, "-", "status"], [43, 0, 0, "-", "trial"]], "deepcave.runs.AbstractRun": [[30, 2, 1, "", "empty"], [30, 2, 1, "", "encode_config"], [30, 2, 1, "", "encode_configs"], [30, 2, 1, "", "get_all_costs"], [30, 2, 1, "", "get_budget"], [30, 2, 1, "", "get_budget_ids"], [30, 2, 1, "", "get_budgets"], [30, 2, 1, "", "get_config"], [30, 2, 1, "", "get_config_id"], [30, 2, 1, "", "get_configs"], [30, 2, 1, "", "get_costs"], [30, 2, 1, "", "get_encoded_data"], [30, 2, 1, "", "get_highest_budget"], [30, 2, 1, "", "get_incumbent"], [30, 2, 1, "", "get_meta"], [30, 2, 1, "", "get_model"], [30, 2, 1, "", "get_num_configs"], [30, 2, 1, "", "get_objective"], [30, 2, 1, "", "get_objective_id"], [30, 2, 1, "", "get_objective_ids"], [30, 2, 1, "", "get_objective_name"], [30, 2, 1, "", "get_objective_names"], [30, 2, 1, "", "get_objectives"], [30, 2, 1, "", "get_origin"], [30, 2, 1, "", "get_status"], [30, 2, 1, "", "get_trajectory"], [30, 2, 1, "", "get_trial"], [30, 2, 1, "", "get_trial_key"], [30, 2, 1, "", "get_trials"], [30, 4, 1, "", "hash"], [30, 4, 1, "", "id"], [30, 4, 1, "", "latest_change"], [30, 2, 1, "", "merge_costs"], [30, 2, 1, "", "reset"]], "deepcave.runs.converters": [[32, 0, 0, "-", "bohb"], [33, 0, 0, "-", "deepcave"], [34, 0, 0, "-", "smac3v1"], [35, 0, 0, "-", "smac3v2"]], "deepcave.runs.converters.bohb": [[32, 1, 1, "", "BOHBRun"]], "deepcave.runs.converters.bohb.BOHBRun": [[32, 2, 1, "", "from_path"], [32, 4, 1, "", "hash"], [32, 4, 1, "", "latest_change"]], "deepcave.runs.converters.deepcave": [[33, 1, 1, "", "DeepCAVERun"]], "deepcave.runs.converters.deepcave.DeepCAVERun": [[33, 2, 1, "", "from_path"], [33, 4, 1, "", "hash"], [33, 4, 1, "", "latest_change"]], "deepcave.runs.converters.smac3v1": [[34, 1, 1, "", "SMAC3v1Run"]], "deepcave.runs.converters.smac3v1.SMAC3v1Run": [[34, 2, 1, "", "from_path"], [34, 4, 1, "", "hash"], [34, 4, 1, "", "latest_change"]], "deepcave.runs.converters.smac3v2": [[35, 1, 1, "", "SMAC3v2Run"]], "deepcave.runs.converters.smac3v2.SMAC3v2Run": [[35, 2, 1, "", "from_path"], [35, 4, 1, "", "hash"], [35, 4, 1, "", "latest_change"]], "deepcave.runs.exceptions": [[36, 5, 1, "", "NotMergeableError"], [36, 5, 1, "", "NotValidRunError"]], "deepcave.runs.group": [[37, 1, 1, "", "Group"]], "deepcave.runs.group.Group": [[37, 2, 1, "", "__iter__"], [37, 2, 1, "", "get_model"], [37, 2, 1, "", "get_new_config_id"], [37, 2, 1, "", "get_original_config_id"], [37, 2, 1, "", "get_original_run"], [37, 2, 1, "", "get_runs"], [37, 2, 1, "", "get_trajectory"], [37, 4, 1, "", "hash"], [37, 4, 1, "", "id"], [37, 4, 1, "", "latest_change"], [37, 4, 1, "", "run_names"], [37, 4, 1, "", "run_paths"]], "deepcave.runs.handler": [[38, 1, 1, "", "RunHandler"]], "deepcave.runs.handler.RunHandler": [[38, 2, 1, "", "add_run"], [38, 2, 1, "", "get_available_run_paths"], [38, 2, 1, "", "get_groups"], [38, 2, 1, "", "get_run"], [38, 2, 1, "", "get_run_name"], [38, 2, 1, "", "get_runs"], [38, 2, 1, "", "get_selected_groups"], [38, 2, 1, "", "get_selected_run_names"], [38, 2, 1, "", "get_selected_run_paths"], [38, 2, 1, "", "get_working_directory"], [38, 2, 1, "", "remove_run"], [38, 2, 1, "", "set_working_directory"], [38, 2, 1, "", "update"], [38, 2, 1, "", "update_groups"], [38, 2, 1, "", "update_run"], [38, 2, 1, "", "update_runs"]], "deepcave.runs.objective": [[39, 1, 1, "", "Objective"]], "deepcave.runs.objective.Objective": [[39, 2, 1, "", "__eq__"], [39, 2, 1, "", "__post_init__"], [39, 2, 1, "", "from_json"], [39, 2, 1, "", "get_worst_value"], [39, 2, 1, "", "merge"], [39, 2, 1, "", "to_json"]], "deepcave.runs.recorder": [[40, 1, 1, "", "Recorder"]], "deepcave.runs.recorder.Recorder": [[40, 2, 1, "", "end"], [40, 2, 1, "", "start"]], "deepcave.runs.run": [[41, 1, 1, "", "Run"]], "deepcave.runs.run.Run": [[41, 2, 1, "", "add"], [41, 2, 1, "", "exists"], [41, 2, 1, "", "from_path"], [41, 4, 1, "", "id"], [41, 2, 1, "", "load"], [41, 4, 1, "", "path"], [41, 2, 1, "", "save"]], "deepcave.runs.status": [[42, 1, 1, "", "Status"]], "deepcave.runs.status.Status": [[42, 2, 1, "", "to_text"]], "deepcave.runs.trial": [[43, 1, 1, "", "Trial"]], "deepcave.runs.trial.Trial": [[43, 2, 1, "", "__post_init__"], [43, 2, 1, "", "get_key"], [43, 2, 1, "", "to_json"]], "deepcave.utils": [[45, 0, 0, "-", "cache"], [46, 0, 0, "-", "cast"], [47, 0, 0, "-", "compression"], [48, 0, 0, "-", "configs"], [49, 0, 0, "-", "configspace"], [50, 0, 0, "-", "dash"], [51, 0, 0, "-", "data_structures"], [52, 0, 0, "-", "docs"], [53, 0, 0, "-", "files"], [54, 0, 0, "-", "hash"], [55, 0, 0, "-", "layout"], [56, 0, 0, "-", "logs"], [57, 0, 0, "-", "notification"], [58, 0, 0, "-", "run_caches"], [59, 0, 0, "-", "styled_plot"], [60, 0, 0, "-", "styled_plotty"], [61, 0, 0, "-", "symbolic_regression"], [62, 0, 0, "-", "url"], [63, 0, 0, "-", "util"]], "deepcave.utils.cache": [[45, 1, 1, "", "Cache"]], "deepcave.utils.cache.Cache": [[45, 2, 1, "", "clear"], [45, 2, 1, "", "get"], [45, 2, 1, "", "has"], [45, 2, 1, "", "read"], [45, 2, 1, "", "set"], [45, 2, 1, "", "set_dict"], [45, 2, 1, "", "write"]], "deepcave.utils.cast": [[46, 3, 1, "", "optional_int"]], "deepcave.utils.compression": [[47, 3, 1, "", "deserialize"], [47, 3, 1, "", "serialize"]], "deepcave.utils.configs": [[48, 3, 1, "", "parse_config"]], "deepcave.utils.configspace": [[49, 3, 1, "", "sample_border_config"], [49, 3, 1, "", "sample_random_config"]], "deepcave.utils.dash": [[50, 3, 1, "", "alert"], [50, 3, 1, "", "flash"]], "deepcave.utils.data_structures": [[51, 3, 1, "", "update_dict"]], "deepcave.utils.docs": [[52, 3, 1, "", "rst_to_md"]], "deepcave.utils.files": [[53, 3, 1, "", "make_dirs"]], "deepcave.utils.hash": [[54, 3, 1, "", "file_to_hash"], [54, 3, 1, "", "string_to_hash"]], "deepcave.utils.layout": [[55, 3, 1, "", "create_table"], [55, 3, 1, "", "get_checklist_options"], [55, 3, 1, "", "get_radio_options"], [55, 3, 1, "", "get_select_options"], [55, 3, 1, "", "get_slider_marks"], [55, 3, 1, "", "help_button"]], "deepcave.utils.logs": [[56, 3, 1, "", "get_logger"]], "deepcave.utils.notification": [[57, 1, 1, "", "Notification"]], "deepcave.utils.notification.Notification": [[57, 2, 1, "", "get_latest"], [57, 2, 1, "", "reset"], [57, 2, 1, "", "update"]], "deepcave.utils.run_caches": [[58, 1, 1, "", "RunCaches"]], "deepcave.utils.run_caches.RunCaches": [[58, 2, 1, "", "clear"], [58, 2, 1, "", "clear_run"], [58, 2, 1, "", "get"], [58, 2, 1, "", "set"], [58, 2, 1, "", "update"]], "deepcave.utils.styled_plot": [[59, 1, 1, "", "StyledPlot"]], "deepcave.utils.styled_plot.StyledPlot": [[59, 2, 1, "", "__getattr__"], [59, 2, 1, "", "boxplot"], [59, 2, 1, "", "figure"], [59, 2, 1, "", "get_color"], [59, 2, 1, "", "legend"], [59, 2, 1, "", "render"], [59, 2, 1, "", "save_figure"], [59, 2, 1, "", "xlim"], [59, 2, 1, "", "ylim"]], "deepcave.utils.styled_plotty": [[60, 3, 1, "", "generate_config_code"], [60, 3, 1, "", "get_color"], [60, 3, 1, "", "get_discrete_heatmap"], [60, 3, 1, "", "get_hovertext_from_config"], [60, 3, 1, "", "get_hyperparameter_ticks"], [60, 3, 1, "", "get_hyperparameter_ticks_from_values"], [60, 3, 1, "", "hex_to_rgb"], [60, 3, 1, "", "prettify_label"], [60, 3, 1, "", "save_image"]], "deepcave.utils.symbolic_regression": [[61, 3, 1, "", "convert_symb"], [61, 3, 1, "", "exp"], [61, 3, 1, "", "get_function_set"]], "deepcave.utils.url": [[62, 3, 1, "", "create_url"], [62, 3, 1, "", "parse_url"]], "deepcave.utils.util": [[63, 3, 1, "", "get_latest_change"], [63, 3, 1, "", "get_random_string"], [63, 3, 1, "", "short_string"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"api": [0, 66, 70], "refer": 0, "deepcav": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "evalu": [1, 2, 3, 4, 5, 6, 7, 8, 9], "modul": [1, 2, 14, 16, 20, 26, 31, 44], "epm": [2, 3, 4, 5, 6], "fanova_forest": 3, "properti": [3, 7, 8, 9, 10, 11, 12, 13, 15, 22, 24, 25, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 58, 59], "random_forest": 4, "random_forest_surrog": 5, "util": [6, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "fanova": 7, "footprint": [8, 28, 84], "lpi": 9, "layout": [10, 11, 12, 55], "not_found": 11, "sidebar": 12, "plugin": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 88], "budget": [14, 82], "dynam": 15, "hyperparamet": [16, 17, 18, 19], "import": [17, 65, 87], "pdp": 18, "symbolic_explan": 19, "object": [20, 21, 22, 23, 24, 39, 85, 89], "configuration_cub": 21, "cost_over_tim": 22, "parallel_coordin": 23, "pareto_front": 24, "static": 25, "summari": [26, 27, 28, 29], "configur": [27, 83, 84, 85, 89], "overview": [29, 85, 89], "run": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 73], "convert": [31, 32, 33, 34, 35, 64], "bohb": 32, "smac3v1": 34, "smac3v2": 35, "except": 36, "group": 37, "handler": 38, "record": [40, 70, 72, 73], "statu": 42, "trial": 43, "cach": 45, "cast": 46, "compress": 47, "config": 48, "configspac": 49, "dash": 50, "data_structur": 51, "doc": 52, "file": 53, "hash": 54, "log": 56, "notif": 57, "run_cach": 58, "styled_plot": 59, "styled_plotti": 60, "symbolic_regress": 61, "url": 62, "custom": [64, 88], "parallel": [67, 90], "coordin": [67, 90], "partial": [68, 92], "depend": [68, 92], "comput": [69, 75, 76, 95], "time": [69, 75, 76, 86, 95], "exampl": 70, "multi": [71, 74], "layer": [71, 74], "perceptron": [71, 74], "via": [71, 74], "sklearn": 71, "minim": 73, "pytorch": 74, "frequent": 77, "ask": 77, "question": 77, "get": 78, "start": 78, "glossari": 79, "home": 80, "featur": 80, "citat": 80, "instal": [81, 94], "redi": [81, 94], "server": [81, 94], "mac": 81, "relat": 81, "correl": 82, "option": [82, 90], "interpret": [82, 86], "cube": 83, "perform": 84, "plot": [84, 90], "coverag": 84, "code": 85, "cost": 86, "over": 86, "input": 86, "filter": 86, "structur": 88, "type": 88, "quick": 89, "inform": 89, "meta": 89, "status": 89, "space": 89, "us": 90, "pareto": 91, "front": 91, "symbol": 93, "explan": 93}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"API References": [[0, "api-references"]], "deepcave.evaluators": [[1, "module-deepcave.evaluators"]], "## Modules": [[1, "modules"], [2, "modules"], [14, "modules"], [16, "modules"], [20, "modules"], [26, "modules"], [31, "modules"], [44, "modules"]], "deepcave.evaluators.epm": [[2, "module-deepcave.evaluators.epm"]], "deepcave.evaluators.epm.fanova_forest": [[3, "module-deepcave.evaluators.epm.fanova_forest"]], "Properties": [[3, "properties"], [7, "properties"], [8, "properties"], [9, "properties"], [10, "properties"], [11, "properties"], [12, "properties"], [13, "properties"], [15, "properties"], [22, "properties"], [24, "properties"], [25, "properties"], [30, "properties"], [32, "properties"], [33, "properties"], [34, "properties"], [35, "properties"], [37, "properties"], [38, "properties"], [39, "properties"], [40, "properties"], [41, "properties"], [42, "properties"], [43, "properties"], [58, "properties"], [59, "properties"]], "deepcave.evaluators.epm.random_forest": [[4, "module-deepcave.evaluators.epm.random_forest"]], "deepcave.evaluators.epm.random_forest_surrogate": [[5, "module-deepcave.evaluators.epm.random_forest_surrogate"]], "deepcave.evaluators.epm.utils": [[6, "module-deepcave.evaluators.epm.utils"]], "deepcave.evaluators.fanova": [[7, "module-deepcave.evaluators.fanova"]], "deepcave.evaluators.footprint": [[8, "module-deepcave.evaluators.footprint"]], "deepcave.evaluators.lpi": [[9, "module-deepcave.evaluators.lpi"]], "deepcave.layouts": [[10, "module-deepcave.layouts"]], "deepcave.layouts.not_found": [[11, "module-deepcave.layouts.not_found"]], "deepcave.layouts.sidebar": [[12, "module-deepcave.layouts.sidebar"]], "deepcave.plugins": [[13, "module-deepcave.plugins"]], "deepcave.plugins.budget": [[14, "module-deepcave.plugins.budget"]], "deepcave.plugins.dynamic": [[15, "module-deepcave.plugins.dynamic"]], "deepcave.plugins.hyperparameter": [[16, "module-deepcave.plugins.hyperparameter"]], "deepcave.plugins.hyperparameter.importances": [[17, "module-deepcave.plugins.hyperparameter.importances"]], "deepcave.plugins.hyperparameter.pdp": [[18, "module-deepcave.plugins.hyperparameter.pdp"]], "deepcave.plugins.hyperparameter.symbolic_explanations": [[19, "module-deepcave.plugins.hyperparameter.symbolic_explanations"]], "deepcave.plugins.objective": [[20, "module-deepcave.plugins.objective"]], "deepcave.plugins.objective.configuration_cube": [[21, "module-deepcave.plugins.objective.configuration_cube"]], "deepcave.plugins.objective.cost_over_time": [[22, "module-deepcave.plugins.objective.cost_over_time"]], "deepcave.plugins.objective.parallel_coordinates": [[23, "module-deepcave.plugins.objective.parallel_coordinates"]], "deepcave.plugins.objective.pareto_front": [[24, "module-deepcave.plugins.objective.pareto_front"]], "deepcave.plugins.static": [[25, "module-deepcave.plugins.static"]], "deepcave.plugins.summary": [[26, "module-deepcave.plugins.summary"]], "deepcave.plugins.summary.configurations": [[27, "module-deepcave.plugins.summary.configurations"]], "deepcave.plugins.summary.footprint": [[28, "module-deepcave.plugins.summary.footprint"]], "deepcave.plugins.summary.overview": [[29, "module-deepcave.plugins.summary.overview"]], "deepcave.runs": [[30, "module-deepcave.runs"]], "deepcave.runs.converters": [[31, "module-deepcave.runs.converters"]], "deepcave.runs.converters.bohb": [[32, "module-deepcave.runs.converters.bohb"]], "deepcave.runs.converters.deepcave": [[33, "module-deepcave.runs.converters.deepcave"]], "deepcave.runs.converters.smac3v1": [[34, "module-deepcave.runs.converters.smac3v1"]], "deepcave.runs.converters.smac3v2": [[35, "module-deepcave.runs.converters.smac3v2"]], "deepcave.runs.exceptions": [[36, "module-deepcave.runs.exceptions"]], "deepcave.runs.group": [[37, "module-deepcave.runs.group"]], "deepcave.runs.handler": [[38, "module-deepcave.runs.handler"]], "deepcave.runs.objective": [[39, "module-deepcave.runs.objective"]], "deepcave.runs.recorder": [[40, "module-deepcave.runs.recorder"]], "deepcave.runs.run": [[41, "module-deepcave.runs.run"]], "deepcave.runs.status": [[42, "module-deepcave.runs.status"]], "deepcave.runs.trial": [[43, "module-deepcave.runs.trial"]], "deepcave.utils": [[44, "module-deepcave.utils"]], "deepcave.utils.cache": [[45, "module-deepcave.utils.cache"]], "deepcave.utils.cast": [[46, "module-deepcave.utils.cast"]], "deepcave.utils.compression": [[47, "module-deepcave.utils.compression"]], "deepcave.utils.configs": [[48, "module-deepcave.utils.configs"]], "deepcave.utils.configspace": [[49, "module-deepcave.utils.configspace"]], "deepcave.utils.dash": [[50, "module-deepcave.utils.dash"]], "deepcave.utils.data_structures": [[51, "module-deepcave.utils.data_structures"]], "deepcave.utils.docs": [[52, "module-deepcave.utils.docs"]], "deepcave.utils.files": [[53, "module-deepcave.utils.files"]], "deepcave.utils.hash": [[54, "module-deepcave.utils.hash"]], "deepcave.utils.layout": [[55, "module-deepcave.utils.layout"]], "deepcave.utils.logs": [[56, "module-deepcave.utils.logs"]], "deepcave.utils.notification": [[57, "module-deepcave.utils.notification"]], "deepcave.utils.run_caches": [[58, "module-deepcave.utils.run_caches"]], "deepcave.utils.styled_plot": [[59, "module-deepcave.utils.styled_plot"]], "deepcave.utils.styled_plotty": [[60, "module-deepcave.utils.styled_plotty"]], "deepcave.utils.symbolic_regression": [[61, "module-deepcave.utils.symbolic_regression"]], "deepcave.utils.url": [[62, "module-deepcave.utils.url"]], "deepcave.utils.util": [[63, "module-deepcave.utils.util"]], "Converters": [[64, "converters"]], "Custom Converter": [[64, "custom-converter"]], "Importances": [[65, "importances"], [87, "importances"]], "API": [[66, "api"], [70, "api"]], "Parallel Coordinates": [[67, "parallel-coordinates"], [90, "parallel-coordinates"]], "Partial Dependencies": [[68, "partial-dependencies"], [92, "partial-dependencies"]], "Computation times": [[69, "computation-times"], [75, "computation-times"], [76, "computation-times"], [95, "computation-times"]], "Examples": [[70, "examples"]], "Record": [[70, "record"], [72, "record"]], "Multi-Layer Perceptron via Sklearn": [[71, "multi-layer-perceptron-via-sklearn"]], "Record Minimal Run": [[73, "record-minimal-run"]], "Multi-Layer Perceptron via PyTorch": [[74, "multi-layer-perceptron-via-pytorch"]], "Frequently Asked Questions": [[77, "frequently-asked-questions"]], "Getting Started": [[78, "getting-started"]], "Glossary": [[79, "glossary"]], "Home": [[80, "home"]], "Features": [[80, "features"]], "Citation": [[80, "citation"]], "Installation": [[81, "installation"]], "Redis Server": [[81, "id1"]], "Mac Related": [[81, "mac-related"]], "Budget Correlation": [[82, "budget-correlation"]], "Options": [[82, "options"], [90, "options"]], "Correlation Interpretation": [[82, "correlation-interpretation"]], "Configuration Cube": [[83, "configuration-cube"]], "Configuration Footprint": [[84, "configuration-footprint"]], "Performance plot": [[84, "performance-plot"]], "Coverage plot": [[84, "coverage-plot"]], "Configurations": [[85, "configurations"]], "Overview": [[85, "overview"], [89, "overview"]], "Objectives": [[85, "objectives"], [89, "objectives"]], "Configuration": [[85, "configuration"]], "Code": [[85, "code"]], "Cost Over Time": [[86, "cost-over-time"]], "Inputs and Filters": [[86, "inputs-and-filters"]], "Interpretation": [[86, "interpretation"]], "Plugins": [[88, "plugins"]], "Plugin Structure": [[88, "plugin-structure"]], "Plugin Types": [[88, "plugin-types"]], "Custom Plugin": [[88, "custom-plugin"]], "Quick Information": [[89, "quick-information"]], "Meta": [[89, "meta"]], "Statuses": [[89, "statuses"]], "Configuration Space": [[89, "configuration-space"]], "Using the plot": [[90, "using-the-plot"]], "Pareto Front": [[91, "pareto-front"]], "Symbolic Explanations": [[93, "symbolic-explanations"]], "Install Redis Server": [[94, "install-redis-server"]]}, "indexentries": {"deepcave.evaluators": [[1, "module-deepcave.evaluators"]], "module": [[1, "module-deepcave.evaluators"], [2, "module-deepcave.evaluators.epm"], [3, "module-deepcave.evaluators.epm.fanova_forest"], [4, "module-deepcave.evaluators.epm.random_forest"], [5, "module-deepcave.evaluators.epm.random_forest_surrogate"], [6, "module-deepcave.evaluators.epm.utils"], [7, "module-deepcave.evaluators.fanova"], [8, "module-deepcave.evaluators.footprint"], [9, "module-deepcave.evaluators.lpi"], [10, "module-deepcave.layouts"], [11, "module-deepcave.layouts.not_found"], [12, "module-deepcave.layouts.sidebar"], [13, "module-deepcave.plugins"], [14, "module-deepcave.plugins.budget"], [15, "module-deepcave.plugins.dynamic"], [16, "module-deepcave.plugins.hyperparameter"], [17, "module-deepcave.plugins.hyperparameter.importances"], [18, "module-deepcave.plugins.hyperparameter.pdp"], [19, "module-deepcave.plugins.hyperparameter.symbolic_explanations"], [20, "module-deepcave.plugins.objective"], [21, "module-deepcave.plugins.objective.configuration_cube"], [22, "module-deepcave.plugins.objective.cost_over_time"], [23, "module-deepcave.plugins.objective.parallel_coordinates"], [24, "module-deepcave.plugins.objective.pareto_front"], [25, "module-deepcave.plugins.static"], [26, "module-deepcave.plugins.summary"], [27, "module-deepcave.plugins.summary.configurations"], [28, "module-deepcave.plugins.summary.footprint"], [29, "module-deepcave.plugins.summary.overview"], [30, "module-deepcave.runs"], [31, "module-deepcave.runs.converters"], [32, "module-deepcave.runs.converters.bohb"], [33, "module-deepcave.runs.converters.deepcave"], [34, "module-deepcave.runs.converters.smac3v1"], [35, "module-deepcave.runs.converters.smac3v2"], [36, "module-deepcave.runs.exceptions"], [37, "module-deepcave.runs.group"], [38, "module-deepcave.runs.handler"], [39, "module-deepcave.runs.objective"], [40, "module-deepcave.runs.recorder"], [41, "module-deepcave.runs.run"], [42, "module-deepcave.runs.status"], [43, "module-deepcave.runs.trial"], [44, "module-deepcave.utils"], [45, "module-deepcave.utils.cache"], [46, "module-deepcave.utils.cast"], [47, "module-deepcave.utils.compression"], [48, "module-deepcave.utils.configs"], [49, "module-deepcave.utils.configspace"], [50, "module-deepcave.utils.dash"], [51, "module-deepcave.utils.data_structures"], [52, "module-deepcave.utils.docs"], [53, "module-deepcave.utils.files"], [54, "module-deepcave.utils.hash"], [55, "module-deepcave.utils.layout"], [56, "module-deepcave.utils.logs"], [57, "module-deepcave.utils.notification"], [58, "module-deepcave.utils.run_caches"], [59, "module-deepcave.utils.styled_plot"], [60, "module-deepcave.utils.styled_plotty"], [61, "module-deepcave.utils.symbolic_regression"], [62, "module-deepcave.utils.url"], [63, "module-deepcave.utils.util"]], "deepcave.evaluators.epm": [[2, "module-deepcave.evaluators.epm"]], "fanovaforest (class in deepcave.evaluators.epm.fanova_forest)": [[3, "deepcave.evaluators.epm.fanova_forest.FanovaForest"]], "compute_marginals() (deepcave.evaluators.epm.fanova_forest.fanovaforest method)": [[3, "deepcave.evaluators.epm.fanova_forest.FanovaForest.compute_marginals"]], "deepcave.evaluators.epm.fanova_forest": [[3, "module-deepcave.evaluators.epm.fanova_forest"]], "randomforest (class in deepcave.evaluators.epm.random_forest)": [[4, "deepcave.evaluators.epm.random_forest.RandomForest"]], "deepcave.evaluators.epm.random_forest": [[4, "module-deepcave.evaluators.epm.random_forest"]], "get_leaf_values() (deepcave.evaluators.epm.random_forest.randomforest method)": [[4, "deepcave.evaluators.epm.random_forest.RandomForest.get_leaf_values"]], "predict() (deepcave.evaluators.epm.random_forest.randomforest method)": [[4, "deepcave.evaluators.epm.random_forest.RandomForest.predict"]], "predict_marginalized() (deepcave.evaluators.epm.random_forest.randomforest method)": [[4, "deepcave.evaluators.epm.random_forest.RandomForest.predict_marginalized"]], "train() (deepcave.evaluators.epm.random_forest.randomforest method)": [[4, "deepcave.evaluators.epm.random_forest.RandomForest.train"]], "randomforestsurrogate (class in deepcave.evaluators.epm.random_forest_surrogate)": [[5, "deepcave.evaluators.epm.random_forest_surrogate.RandomForestSurrogate"]], "deepcave.evaluators.epm.random_forest_surrogate": [[5, "module-deepcave.evaluators.epm.random_forest_surrogate"]], "predict() (deepcave.evaluators.epm.random_forest_surrogate.randomforestsurrogate method)": [[5, "deepcave.evaluators.epm.random_forest_surrogate.RandomForestSurrogate.predict"]], "deepcave.evaluators.epm.utils": [[6, "module-deepcave.evaluators.epm.utils"]], "get_types() (in module deepcave.evaluators.epm.utils)": [[6, "deepcave.evaluators.epm.utils.get_types"]], "calculate() (deepcave.evaluators.fanova.fanova method)": [[7, "deepcave.evaluators.fanova.fANOVA.calculate"]], "deepcave.evaluators.fanova": [[7, "module-deepcave.evaluators.fanova"]], "fanova (class in deepcave.evaluators.fanova)": [[7, "deepcave.evaluators.fanova.fANOVA"]], "get_importances() (deepcave.evaluators.fanova.fanova method)": [[7, "deepcave.evaluators.fanova.fANOVA.get_importances"]], "footprint (class in deepcave.evaluators.footprint)": [[8, "deepcave.evaluators.footprint.Footprint"]], "calculate() (deepcave.evaluators.footprint.footprint method)": [[8, "deepcave.evaluators.footprint.Footprint.calculate"]], "deepcave.evaluators.footprint": [[8, "module-deepcave.evaluators.footprint"]], "get_points() (deepcave.evaluators.footprint.footprint method)": [[8, "deepcave.evaluators.footprint.Footprint.get_points"]], "get_surface() (deepcave.evaluators.footprint.footprint method)": [[8, "deepcave.evaluators.footprint.Footprint.get_surface"]], "lpi (class in deepcave.evaluators.lpi)": [[9, "deepcave.evaluators.lpi.LPI"]], "calculate() (deepcave.evaluators.lpi.lpi method)": [[9, "deepcave.evaluators.lpi.LPI.calculate"]], "deepcave.evaluators.lpi": [[9, "module-deepcave.evaluators.lpi"]], "get_importances() (deepcave.evaluators.lpi.lpi method)": [[9, "deepcave.evaluators.lpi.LPI.get_importances"]], "layout (class in deepcave.layouts)": [[10, "deepcave.layouts.Layout"]], "__call__() (deepcave.layouts.layout method)": [[10, "deepcave.layouts.Layout.__call__"]], "deepcave.layouts": [[10, "module-deepcave.layouts"]], "notfoundlayout (class in deepcave.layouts.not_found)": [[11, "deepcave.layouts.not_found.NotFoundLayout"]], "__call__() (deepcave.layouts.not_found.notfoundlayout method)": [[11, "deepcave.layouts.not_found.NotFoundLayout.__call__"]], "deepcave.layouts.not_found": [[11, "module-deepcave.layouts.not_found"]], "sidebarlayout (class in deepcave.layouts.sidebar)": [[12, "deepcave.layouts.sidebar.SidebarLayout"]], "__call__() (deepcave.layouts.sidebar.sidebarlayout method)": [[12, "deepcave.layouts.sidebar.SidebarLayout.__call__"]], "deepcave.layouts.sidebar": [[12, "module-deepcave.layouts.sidebar"]], "register_callbacks() (deepcave.layouts.sidebar.sidebarlayout method)": [[12, "deepcave.layouts.sidebar.SidebarLayout.register_callbacks"]], "plugin (class in deepcave.plugins)": [[13, "deepcave.plugins.Plugin"]], "__call__() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.__call__"]], "all_runs (deepcave.plugins.plugin property)": [[13, "deepcave.plugins.Plugin.all_runs"]], "check_run_compatibility() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.check_run_compatibility"]], "check_runs_compatibility() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.check_runs_compatibility"]], "deepcave.plugins": [[13, "module-deepcave.plugins"]], "generate_inputs() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.generate_inputs"]], "generate_outputs() (deepcave.plugins.plugin class method)": [[13, "deepcave.plugins.Plugin.generate_outputs"]], "get_base_url() (deepcave.plugins.plugin class method)": [[13, "deepcave.plugins.Plugin.get_base_url"]], "get_filter_layout() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.get_filter_layout"]], "get_input_layout() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.get_input_layout"]], "get_internal_id() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.get_internal_id"]], "get_internal_input_id() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.get_internal_input_id"]], "get_internal_output_id() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.get_internal_output_id"]], "get_mpl_output_layout() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.get_mpl_output_layout"]], "get_output_layout() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.get_output_layout"]], "get_run_input_layout() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.get_run_input_layout"]], "get_selected_runs() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.get_selected_runs"]], "groups (deepcave.plugins.plugin property)": [[13, "deepcave.plugins.Plugin.groups"]], "load_dependency_inputs() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.load_inputs"]], "load_mpl_outputs() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.load_mpl_outputs"]], "load_outputs() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.load_outputs"]], "load_run_inputs() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.load_run_inputs"]], "process() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.process"]], "register_callbacks() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.register_callbacks"]], "register_input() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.register_input"]], "register_output() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.register_output"]], "runs (deepcave.plugins.plugin property)": [[13, "deepcave.plugins.Plugin.runs"]], "deepcave.plugins.budget": [[14, "module-deepcave.plugins.budget"]], "dynamicplugin (class in deepcave.plugins.dynamic)": [[15, "deepcave.plugins.dynamic.DynamicPlugin"]], "__call__() (deepcave.plugins.dynamic.dynamicplugin method)": [[15, "deepcave.plugins.dynamic.DynamicPlugin.__call__"]], "deepcave.plugins.dynamic": [[15, "module-deepcave.plugins.dynamic"]], "register_callbacks() (deepcave.plugins.dynamic.dynamicplugin method)": [[15, "deepcave.plugins.dynamic.DynamicPlugin.register_callbacks"]], "deepcave.plugins.hyperparameter": [[16, "module-deepcave.plugins.hyperparameter"]], "importances (class in deepcave.plugins.hyperparameter.importances)": [[17, "deepcave.plugins.hyperparameter.importances.Importances"]], "deepcave.plugins.hyperparameter.importances": [[17, "module-deepcave.plugins.hyperparameter.importances"]], "get_filter_layout() (deepcave.plugins.hyperparameter.importances.importances static method)": [[17, "deepcave.plugins.hyperparameter.importances.Importances.get_filter_layout"]], "get_input_layout() (deepcave.plugins.hyperparameter.importances.importances static method)": [[17, "deepcave.plugins.hyperparameter.importances.Importances.get_input_layout"]], "get_mpl_output_layout() (deepcave.plugins.hyperparameter.importances.importances static method)": [[17, "deepcave.plugins.hyperparameter.importances.Importances.get_mpl_output_layout"]], "get_output_layout() (deepcave.plugins.hyperparameter.importances.importances static method)": [[17, "deepcave.plugins.hyperparameter.importances.Importances.get_output_layout"]], "load_dependency_inputs() (deepcave.plugins.hyperparameter.importances.importances method)": [[17, "deepcave.plugins.hyperparameter.importances.Importances.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.hyperparameter.importances.importances method)": [[17, "deepcave.plugins.hyperparameter.importances.Importances.load_inputs"]], "load_mpl_outputs() (deepcave.plugins.hyperparameter.importances.importances static method)": [[17, "deepcave.plugins.hyperparameter.importances.Importances.load_mpl_outputs"]], "load_outputs() (deepcave.plugins.hyperparameter.importances.importances static method)": [[17, "deepcave.plugins.hyperparameter.importances.Importances.load_outputs"]], "process() (deepcave.plugins.hyperparameter.importances.importances static method)": [[17, "deepcave.plugins.hyperparameter.importances.Importances.process"]], "partialdependencies (class in deepcave.plugins.hyperparameter.pdp)": [[18, "deepcave.plugins.hyperparameter.pdp.PartialDependencies"]], "deepcave.plugins.hyperparameter.pdp": [[18, "module-deepcave.plugins.hyperparameter.pdp"]], "get_filter_layout() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[18, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.get_filter_layout"]], "get_input_layout() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[18, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.get_input_layout"]], "get_output_layout() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[18, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.get_output_layout"]], "get_pdp_figure() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[18, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.get_pdp_figure"]], "load_dependency_inputs() (deepcave.plugins.hyperparameter.pdp.partialdependencies method)": [[18, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.hyperparameter.pdp.partialdependencies method)": [[18, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.load_inputs"]], "load_outputs() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[18, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.load_outputs"]], "process() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[18, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.process"]], "symbolicexplanations (class in deepcave.plugins.hyperparameter.symbolic_explanations)": [[19, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations"]], "deepcave.plugins.hyperparameter.symbolic_explanations": [[19, "module-deepcave.plugins.hyperparameter.symbolic_explanations"]], "get_input_layout() (deepcave.plugins.hyperparameter.symbolic_explanations.symbolicexplanations static method)": [[19, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations.get_input_layout"]], "get_output_layout() (deepcave.plugins.hyperparameter.symbolic_explanations.symbolicexplanations static method)": [[19, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations.get_output_layout"]], "load_dependency_inputs() (deepcave.plugins.hyperparameter.symbolic_explanations.symbolicexplanations method)": [[19, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.hyperparameter.symbolic_explanations.symbolicexplanations method)": [[19, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations.load_inputs"]], "load_outputs() (deepcave.plugins.hyperparameter.symbolic_explanations.symbolicexplanations static method)": [[19, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations.load_outputs"]], "process() (deepcave.plugins.hyperparameter.symbolic_explanations.symbolicexplanations static method)": [[19, "deepcave.plugins.hyperparameter.symbolic_explanations.SymbolicExplanations.process"]], "deepcave.plugins.objective": [[20, "module-deepcave.plugins.objective"]], "configurationcube (class in deepcave.plugins.objective.configuration_cube)": [[21, "deepcave.plugins.objective.configuration_cube.ConfigurationCube"]], "deepcave.plugins.objective.configuration_cube": [[21, "module-deepcave.plugins.objective.configuration_cube"]], "get_filter_layout() (deepcave.plugins.objective.configuration_cube.configurationcube static method)": [[21, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.get_filter_layout"]], "get_input_layout() (deepcave.plugins.objective.configuration_cube.configurationcube static method)": [[21, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.get_input_layout"]], "get_output_layout() (deepcave.plugins.objective.configuration_cube.configurationcube static method)": [[21, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.get_output_layout"]], "load_dependency_inputs() (deepcave.plugins.objective.configuration_cube.configurationcube method)": [[21, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.objective.configuration_cube.configurationcube method)": [[21, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.load_inputs"]], "load_outputs() (deepcave.plugins.objective.configuration_cube.configurationcube static method)": [[21, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.load_outputs"]], "process() (deepcave.plugins.objective.configuration_cube.configurationcube static method)": [[21, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.process"]], "costovertime (class in deepcave.plugins.objective.cost_over_time)": [[22, "deepcave.plugins.objective.cost_over_time.CostOverTime"]], "check_runs_compatibility() (deepcave.plugins.objective.cost_over_time.costovertime method)": [[22, "deepcave.plugins.objective.cost_over_time.CostOverTime.check_runs_compatibility"]], "deepcave.plugins.objective.cost_over_time": [[22, "module-deepcave.plugins.objective.cost_over_time"]], "get_filter_layout() (deepcave.plugins.objective.cost_over_time.costovertime static method)": [[22, "deepcave.plugins.objective.cost_over_time.CostOverTime.get_filter_layout"]], "get_input_layout() (deepcave.plugins.objective.cost_over_time.costovertime static method)": [[22, "deepcave.plugins.objective.cost_over_time.CostOverTime.get_input_layout"]], "get_output_layout() (deepcave.plugins.objective.cost_over_time.costovertime static method)": [[22, "deepcave.plugins.objective.cost_over_time.CostOverTime.get_output_layout"]], "load_inputs() (deepcave.plugins.objective.cost_over_time.costovertime method)": [[22, "deepcave.plugins.objective.cost_over_time.CostOverTime.load_inputs"]], "load_outputs() (deepcave.plugins.objective.cost_over_time.costovertime static method)": [[22, "deepcave.plugins.objective.cost_over_time.CostOverTime.load_outputs"]], "process() (deepcave.plugins.objective.cost_over_time.costovertime static method)": [[22, "deepcave.plugins.objective.cost_over_time.CostOverTime.process"]], "parallelcoordinates (class in deepcave.plugins.objective.parallel_coordinates)": [[23, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates"]], "deepcave.plugins.objective.parallel_coordinates": [[23, "module-deepcave.plugins.objective.parallel_coordinates"]], "get_filter_layout() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates static method)": [[23, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.get_filter_layout"]], "get_input_layout() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates static method)": [[23, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.get_input_layout"]], "get_output_layout() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates static method)": [[23, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.get_output_layout"]], "load_dependency_inputs() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates method)": [[23, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates method)": [[23, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.load_inputs"]], "load_outputs() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates static method)": [[23, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.load_outputs"]], "process() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates static method)": [[23, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.process"]], "paretofront (class in deepcave.plugins.objective.pareto_front)": [[24, "deepcave.plugins.objective.pareto_front.ParetoFront"]], "check_runs_compatibility() (deepcave.plugins.objective.pareto_front.paretofront method)": [[24, "deepcave.plugins.objective.pareto_front.ParetoFront.check_runs_compatibility"]], "deepcave.plugins.objective.pareto_front": [[24, "module-deepcave.plugins.objective.pareto_front"]], "get_filter_layout() (deepcave.plugins.objective.pareto_front.paretofront static method)": [[24, "deepcave.plugins.objective.pareto_front.ParetoFront.get_filter_layout"]], "get_input_layout() (deepcave.plugins.objective.pareto_front.paretofront static method)": [[24, "deepcave.plugins.objective.pareto_front.ParetoFront.get_input_layout"]], "get_mpl_output_layout() (deepcave.plugins.objective.pareto_front.paretofront static method)": [[24, "deepcave.plugins.objective.pareto_front.ParetoFront.get_mpl_output_layout"]], "get_output_layout() (deepcave.plugins.objective.pareto_front.paretofront static method)": [[24, "deepcave.plugins.objective.pareto_front.ParetoFront.get_output_layout"]], "load_inputs() (deepcave.plugins.objective.pareto_front.paretofront method)": [[24, "deepcave.plugins.objective.pareto_front.ParetoFront.load_inputs"]], "load_mpl_outputs() (deepcave.plugins.objective.pareto_front.paretofront static method)": [[24, "deepcave.plugins.objective.pareto_front.ParetoFront.load_mpl_outputs"]], "load_outputs() (deepcave.plugins.objective.pareto_front.paretofront static method)": [[24, "deepcave.plugins.objective.pareto_front.ParetoFront.load_outputs"]], "process() (deepcave.plugins.objective.pareto_front.paretofront static method)": [[24, "deepcave.plugins.objective.pareto_front.ParetoFront.process"]], "pluginstate (class in deepcave.plugins.static)": [[25, "deepcave.plugins.static.PluginState"]], "staticplugin (class in deepcave.plugins.static)": [[25, "deepcave.plugins.static.StaticPlugin"]], "__call__() (deepcave.plugins.static.staticplugin method)": [[25, "deepcave.plugins.static.StaticPlugin.__call__"]], "deepcave.plugins.static": [[25, "module-deepcave.plugins.static"]], "register_callbacks() (deepcave.plugins.static.staticplugin method)": [[25, "deepcave.plugins.static.StaticPlugin.register_callbacks"]], "deepcave.plugins.summary": [[26, "module-deepcave.plugins.summary"]], "configurations (class in deepcave.plugins.summary.configurations)": [[27, "deepcave.plugins.summary.configurations.Configurations"]], "deepcave.plugins.summary.configurations": [[27, "module-deepcave.plugins.summary.configurations"]], "get_input_layout() (deepcave.plugins.summary.configurations.configurations static method)": [[27, "deepcave.plugins.summary.configurations.Configurations.get_input_layout"]], "get_link() (deepcave.plugins.summary.configurations.configurations static method)": [[27, "deepcave.plugins.summary.configurations.Configurations.get_link"]], "get_output_layout() (deepcave.plugins.summary.configurations.configurations static method)": [[27, "deepcave.plugins.summary.configurations.Configurations.get_output_layout"]], "load_dependency_inputs() (deepcave.plugins.summary.configurations.configurations method)": [[27, "deepcave.plugins.summary.configurations.Configurations.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.summary.configurations.configurations method)": [[27, "deepcave.plugins.summary.configurations.Configurations.load_inputs"]], "load_outputs() (deepcave.plugins.summary.configurations.configurations static method)": [[27, "deepcave.plugins.summary.configurations.Configurations.load_outputs"]], "process() (deepcave.plugins.summary.configurations.configurations static method)": [[27, "deepcave.plugins.summary.configurations.Configurations.process"]], "footprint (class in deepcave.plugins.summary.footprint)": [[28, "deepcave.plugins.summary.footprint.FootPrint"]], "deepcave.plugins.summary.footprint": [[28, "module-deepcave.plugins.summary.footprint"]], "get_filter_layout() (deepcave.plugins.summary.footprint.footprint static method)": [[28, "deepcave.plugins.summary.footprint.FootPrint.get_filter_layout"]], "get_input_layout() (deepcave.plugins.summary.footprint.footprint static method)": [[28, "deepcave.plugins.summary.footprint.FootPrint.get_input_layout"]], "get_mpl_output_layout() (deepcave.plugins.summary.footprint.footprint static method)": [[28, "deepcave.plugins.summary.footprint.FootPrint.get_mpl_output_layout"]], "get_output_layout() (deepcave.plugins.summary.footprint.footprint static method)": [[28, "deepcave.plugins.summary.footprint.FootPrint.get_output_layout"]], "load_dependency_inputs() (deepcave.plugins.summary.footprint.footprint method)": [[28, "deepcave.plugins.summary.footprint.FootPrint.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.summary.footprint.footprint method)": [[28, "deepcave.plugins.summary.footprint.FootPrint.load_inputs"]], "load_mpl_outputs() (deepcave.plugins.summary.footprint.footprint static method)": [[28, "deepcave.plugins.summary.footprint.FootPrint.load_mpl_outputs"]], "load_outputs() (deepcave.plugins.summary.footprint.footprint static method)": [[28, "deepcave.plugins.summary.footprint.FootPrint.load_outputs"]], "process() (deepcave.plugins.summary.footprint.footprint static method)": [[28, "deepcave.plugins.summary.footprint.FootPrint.process"]], "overview (class in deepcave.plugins.summary.overview)": [[29, "deepcave.plugins.summary.overview.Overview"]], "deepcave.plugins.summary.overview": [[29, "module-deepcave.plugins.summary.overview"]], "get_output_layout() (deepcave.plugins.summary.overview.overview static method)": [[29, "deepcave.plugins.summary.overview.Overview.get_output_layout"]], "load_outputs() (deepcave.plugins.summary.overview.overview static method)": [[29, "deepcave.plugins.summary.overview.Overview.load_outputs"]], "abstractrun (class in deepcave.runs)": [[30, "deepcave.runs.AbstractRun"]], "check_equality() (in module deepcave.runs)": [[30, "deepcave.runs.check_equality"]], "deepcave.runs": [[30, "module-deepcave.runs"]], "empty() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.empty"]], "encode_config() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.encode_config"]], "encode_configs() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.encode_configs"]], "get_all_costs() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_all_costs"]], "get_budget() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_budget"]], "get_budget_ids() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_budget_ids"]], "get_budgets() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_budgets"]], "get_config() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_config"]], "get_config_id() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_config_id"]], "get_configs() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_configs"]], "get_costs() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_costs"]], "get_encoded_data() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_encoded_data"]], "get_highest_budget() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_highest_budget"]], "get_incumbent() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_incumbent"]], "get_meta() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_meta"]], "get_model() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_model"]], "get_num_configs() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_num_configs"]], "get_objective() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_objective"]], "get_objective_id() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_objective_id"]], "get_objective_ids() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_objective_ids"]], "get_objective_name() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_objective_name"]], "get_objective_names() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_objective_names"]], "get_objectives() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_objectives"]], "get_origin() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_origin"]], "get_status() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_status"]], "get_trajectory() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_trajectory"]], "get_trial() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_trial"]], "get_trial_key() (deepcave.runs.abstractrun static method)": [[30, "deepcave.runs.AbstractRun.get_trial_key"]], "get_trials() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.get_trials"]], "hash (deepcave.runs.abstractrun property)": [[30, "deepcave.runs.AbstractRun.hash"]], "id (deepcave.runs.abstractrun property)": [[30, "deepcave.runs.AbstractRun.id"]], "latest_change (deepcave.runs.abstractrun property)": [[30, "deepcave.runs.AbstractRun.latest_change"]], "merge_costs() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.merge_costs"]], "reset() (deepcave.runs.abstractrun method)": [[30, "deepcave.runs.AbstractRun.reset"]], "deepcave.runs.converters": [[31, "module-deepcave.runs.converters"]], "bohbrun (class in deepcave.runs.converters.bohb)": [[32, "deepcave.runs.converters.bohb.BOHBRun"]], "deepcave.runs.converters.bohb": [[32, "module-deepcave.runs.converters.bohb"]], "from_path() (deepcave.runs.converters.bohb.bohbrun class method)": [[32, "deepcave.runs.converters.bohb.BOHBRun.from_path"]], "hash (deepcave.runs.converters.bohb.bohbrun property)": [[32, "deepcave.runs.converters.bohb.BOHBRun.hash"]], "latest_change (deepcave.runs.converters.bohb.bohbrun property)": [[32, "deepcave.runs.converters.bohb.BOHBRun.latest_change"]], "deepcaverun (class in deepcave.runs.converters.deepcave)": [[33, "deepcave.runs.converters.deepcave.DeepCAVERun"]], "deepcave.runs.converters.deepcave": [[33, "module-deepcave.runs.converters.deepcave"]], "from_path() (deepcave.runs.converters.deepcave.deepcaverun class method)": [[33, "deepcave.runs.converters.deepcave.DeepCAVERun.from_path"]], "hash (deepcave.runs.converters.deepcave.deepcaverun property)": [[33, "deepcave.runs.converters.deepcave.DeepCAVERun.hash"]], "latest_change (deepcave.runs.converters.deepcave.deepcaverun property)": [[33, "deepcave.runs.converters.deepcave.DeepCAVERun.latest_change"]], "smac3v1run (class in deepcave.runs.converters.smac3v1)": [[34, "deepcave.runs.converters.smac3v1.SMAC3v1Run"]], "deepcave.runs.converters.smac3v1": [[34, "module-deepcave.runs.converters.smac3v1"]], "from_path() (deepcave.runs.converters.smac3v1.smac3v1run class method)": [[34, "deepcave.runs.converters.smac3v1.SMAC3v1Run.from_path"]], "hash (deepcave.runs.converters.smac3v1.smac3v1run property)": [[34, "deepcave.runs.converters.smac3v1.SMAC3v1Run.hash"]], "latest_change (deepcave.runs.converters.smac3v1.smac3v1run property)": [[34, "deepcave.runs.converters.smac3v1.SMAC3v1Run.latest_change"]], "smac3v2run (class in deepcave.runs.converters.smac3v2)": [[35, "deepcave.runs.converters.smac3v2.SMAC3v2Run"]], "deepcave.runs.converters.smac3v2": [[35, "module-deepcave.runs.converters.smac3v2"]], "from_path() (deepcave.runs.converters.smac3v2.smac3v2run class method)": [[35, "deepcave.runs.converters.smac3v2.SMAC3v2Run.from_path"]], "hash (deepcave.runs.converters.smac3v2.smac3v2run property)": [[35, "deepcave.runs.converters.smac3v2.SMAC3v2Run.hash"]], "latest_change (deepcave.runs.converters.smac3v2.smac3v2run property)": [[35, "deepcave.runs.converters.smac3v2.SMAC3v2Run.latest_change"]], "notmergeableerror": [[36, "deepcave.runs.exceptions.NotMergeableError"]], "notvalidrunerror": [[36, "deepcave.runs.exceptions.NotValidRunError"]], "deepcave.runs.exceptions": [[36, "module-deepcave.runs.exceptions"]], "group (class in deepcave.runs.group)": [[37, "deepcave.runs.group.Group"]], "__iter__() (deepcave.runs.group.group method)": [[37, "deepcave.runs.group.Group.__iter__"]], "deepcave.runs.group": [[37, "module-deepcave.runs.group"]], "get_model() (deepcave.runs.group.group method)": [[37, "deepcave.runs.group.Group.get_model"]], "get_new_config_id() (deepcave.runs.group.group method)": [[37, "deepcave.runs.group.Group.get_new_config_id"]], "get_original_config_id() (deepcave.runs.group.group method)": [[37, "deepcave.runs.group.Group.get_original_config_id"]], "get_original_run() (deepcave.runs.group.group method)": [[37, "deepcave.runs.group.Group.get_original_run"]], "get_runs() (deepcave.runs.group.group method)": [[37, "deepcave.runs.group.Group.get_runs"]], "get_trajectory() (deepcave.runs.group.group method)": [[37, "deepcave.runs.group.Group.get_trajectory"]], "hash (deepcave.runs.group.group property)": [[37, "deepcave.runs.group.Group.hash"]], "id (deepcave.runs.group.group property)": [[37, "deepcave.runs.group.Group.id"]], "latest_change (deepcave.runs.group.group property)": [[37, "deepcave.runs.group.Group.latest_change"]], "run_names (deepcave.runs.group.group property)": [[37, "deepcave.runs.group.Group.run_names"]], "run_paths (deepcave.runs.group.group property)": [[37, "deepcave.runs.group.Group.run_paths"]], "runhandler (class in deepcave.runs.handler)": [[38, "deepcave.runs.handler.RunHandler"]], "add_run() (deepcave.runs.handler.runhandler method)": [[38, "deepcave.runs.handler.RunHandler.add_run"]], "deepcave.runs.handler": [[38, "module-deepcave.runs.handler"]], "get_available_run_paths() (deepcave.runs.handler.runhandler method)": [[38, "deepcave.runs.handler.RunHandler.get_available_run_paths"]], "get_groups() (deepcave.runs.handler.runhandler method)": [[38, "deepcave.runs.handler.RunHandler.get_groups"]], "get_run() (deepcave.runs.handler.runhandler method)": [[38, "deepcave.runs.handler.RunHandler.get_run"]], "get_run_name() (deepcave.runs.handler.runhandler method)": [[38, "deepcave.runs.handler.RunHandler.get_run_name"]], "get_runs() (deepcave.runs.handler.runhandler method)": [[38, "deepcave.runs.handler.RunHandler.get_runs"]], "get_selected_groups() (deepcave.runs.handler.runhandler method)": [[38, "deepcave.runs.handler.RunHandler.get_selected_groups"]], "get_selected_run_names() (deepcave.runs.handler.runhandler method)": [[38, "deepcave.runs.handler.RunHandler.get_selected_run_names"]], "get_selected_run_paths() (deepcave.runs.handler.runhandler method)": [[38, "deepcave.runs.handler.RunHandler.get_selected_run_paths"]], "get_working_directory() (deepcave.runs.handler.runhandler method)": [[38, "deepcave.runs.handler.RunHandler.get_working_directory"]], "remove_run() (deepcave.runs.handler.runhandler method)": [[38, "deepcave.runs.handler.RunHandler.remove_run"]], "set_working_directory() (deepcave.runs.handler.runhandler method)": [[38, "deepcave.runs.handler.RunHandler.set_working_directory"]], "update() (deepcave.runs.handler.runhandler method)": [[38, "deepcave.runs.handler.RunHandler.update"]], "update_groups() (deepcave.runs.handler.runhandler method)": [[38, "deepcave.runs.handler.RunHandler.update_groups"]], "update_run() (deepcave.runs.handler.runhandler method)": [[38, "deepcave.runs.handler.RunHandler.update_run"]], "update_runs() (deepcave.runs.handler.runhandler method)": [[38, "deepcave.runs.handler.RunHandler.update_runs"]], "objective (class in deepcave.runs.objective)": [[39, "deepcave.runs.objective.Objective"]], "__eq__() (deepcave.runs.objective.objective method)": [[39, "deepcave.runs.objective.Objective.__eq__"]], "__post_init__() (deepcave.runs.objective.objective method)": [[39, "deepcave.runs.objective.Objective.__post_init__"]], "deepcave.runs.objective": [[39, "module-deepcave.runs.objective"]], "from_json() (deepcave.runs.objective.objective static method)": [[39, "deepcave.runs.objective.Objective.from_json"]], "get_worst_value() (deepcave.runs.objective.objective method)": [[39, "deepcave.runs.objective.Objective.get_worst_value"]], "merge() (deepcave.runs.objective.objective method)": [[39, "deepcave.runs.objective.Objective.merge"]], "to_json() (deepcave.runs.objective.objective method)": [[39, "deepcave.runs.objective.Objective.to_json"]], "recorder (class in deepcave.runs.recorder)": [[40, "deepcave.runs.recorder.Recorder"]], "deepcave.runs.recorder": [[40, "module-deepcave.runs.recorder"]], "end() (deepcave.runs.recorder.recorder method)": [[40, "deepcave.runs.recorder.Recorder.end"]], "start() (deepcave.runs.recorder.recorder method)": [[40, "deepcave.runs.recorder.Recorder.start"]], "run (class in deepcave.runs.run)": [[41, "deepcave.runs.run.Run"]], "add() (deepcave.runs.run.run method)": [[41, "deepcave.runs.run.Run.add"]], "deepcave.runs.run": [[41, "module-deepcave.runs.run"]], "exists() (deepcave.runs.run.run method)": [[41, "deepcave.runs.run.Run.exists"]], "from_path() (deepcave.runs.run.run class method)": [[41, "deepcave.runs.run.Run.from_path"]], "id (deepcave.runs.run.run property)": [[41, "deepcave.runs.run.Run.id"]], "load() (deepcave.runs.run.run method)": [[41, "deepcave.runs.run.Run.load"]], "path (deepcave.runs.run.run property)": [[41, "deepcave.runs.run.Run.path"]], "save() (deepcave.runs.run.run method)": [[41, "deepcave.runs.run.Run.save"]], "status (class in deepcave.runs.status)": [[42, "deepcave.runs.status.Status"]], "deepcave.runs.status": [[42, "module-deepcave.runs.status"]], "to_text() (deepcave.runs.status.status method)": [[42, "deepcave.runs.status.Status.to_text"]], "trial (class in deepcave.runs.trial)": [[43, "deepcave.runs.trial.Trial"]], "__post_init__() (deepcave.runs.trial.trial method)": [[43, "deepcave.runs.trial.Trial.__post_init__"]], "deepcave.runs.trial": [[43, "module-deepcave.runs.trial"]], "get_key() (deepcave.runs.trial.trial method)": [[43, "deepcave.runs.trial.Trial.get_key"]], "to_json() (deepcave.runs.trial.trial method)": [[43, "deepcave.runs.trial.Trial.to_json"]], "deepcave.utils": [[44, "module-deepcave.utils"]], "cache (class in deepcave.utils.cache)": [[45, "deepcave.utils.cache.Cache"]], "clear() (deepcave.utils.cache.cache method)": [[45, "deepcave.utils.cache.Cache.clear"]], "deepcave.utils.cache": [[45, "module-deepcave.utils.cache"]], "get() (deepcave.utils.cache.cache method)": [[45, "deepcave.utils.cache.Cache.get"]], "has() (deepcave.utils.cache.cache method)": [[45, "deepcave.utils.cache.Cache.has"]], "read() (deepcave.utils.cache.cache method)": [[45, "deepcave.utils.cache.Cache.read"]], "set() (deepcave.utils.cache.cache method)": [[45, "deepcave.utils.cache.Cache.set"]], "set_dict() (deepcave.utils.cache.cache method)": [[45, "deepcave.utils.cache.Cache.set_dict"]], "write() (deepcave.utils.cache.cache method)": [[45, "deepcave.utils.cache.Cache.write"]], "deepcave.utils.cast": [[46, "module-deepcave.utils.cast"]], "optional_int() (in module deepcave.utils.cast)": [[46, "deepcave.utils.cast.optional_int"]], "deepcave.utils.compression": [[47, "module-deepcave.utils.compression"]], "deserialize() (in module deepcave.utils.compression)": [[47, "deepcave.utils.compression.deserialize"]], "serialize() (in module deepcave.utils.compression)": [[47, "deepcave.utils.compression.serialize"]], "deepcave.utils.configs": [[48, "module-deepcave.utils.configs"]], "parse_config() (in module deepcave.utils.configs)": [[48, "deepcave.utils.configs.parse_config"]], "deepcave.utils.configspace": [[49, "module-deepcave.utils.configspace"]], "sample_border_config() (in module deepcave.utils.configspace)": [[49, "deepcave.utils.configspace.sample_border_config"]], "sample_random_config() (in module deepcave.utils.configspace)": [[49, "deepcave.utils.configspace.sample_random_config"]], "alert() (in module deepcave.utils.dash)": [[50, "deepcave.utils.dash.alert"]], "deepcave.utils.dash": [[50, "module-deepcave.utils.dash"]], "flash() (in module deepcave.utils.dash)": [[50, "deepcave.utils.dash.flash"]], "deepcave.utils.data_structures": [[51, "module-deepcave.utils.data_structures"]], "update_dict() (in module deepcave.utils.data_structures)": [[51, "deepcave.utils.data_structures.update_dict"]], "deepcave.utils.docs": [[52, "module-deepcave.utils.docs"]], "rst_to_md() (in module deepcave.utils.docs)": [[52, "deepcave.utils.docs.rst_to_md"]], "deepcave.utils.files": [[53, "module-deepcave.utils.files"]], "make_dirs() (in module deepcave.utils.files)": [[53, "deepcave.utils.files.make_dirs"]], "deepcave.utils.hash": [[54, "module-deepcave.utils.hash"]], "file_to_hash() (in module deepcave.utils.hash)": [[54, "deepcave.utils.hash.file_to_hash"]], "string_to_hash() (in module deepcave.utils.hash)": [[54, "deepcave.utils.hash.string_to_hash"]], "create_table() (in module deepcave.utils.layout)": [[55, "deepcave.utils.layout.create_table"]], "deepcave.utils.layout": [[55, "module-deepcave.utils.layout"]], "get_checklist_options() (in module deepcave.utils.layout)": [[55, "deepcave.utils.layout.get_checklist_options"]], "get_radio_options() (in module deepcave.utils.layout)": [[55, "deepcave.utils.layout.get_radio_options"]], "get_select_options() (in module deepcave.utils.layout)": [[55, "deepcave.utils.layout.get_select_options"]], "get_slider_marks() (in module deepcave.utils.layout)": [[55, "deepcave.utils.layout.get_slider_marks"]], "help_button() (in module deepcave.utils.layout)": [[55, "deepcave.utils.layout.help_button"]], "deepcave.utils.logs": [[56, "module-deepcave.utils.logs"]], "get_logger() (in module deepcave.utils.logs)": [[56, "deepcave.utils.logs.get_logger"]], "notification (class in deepcave.utils.notification)": [[57, "deepcave.utils.notification.Notification"]], "deepcave.utils.notification": [[57, "module-deepcave.utils.notification"]], "get_latest() (deepcave.utils.notification.notification method)": [[57, "deepcave.utils.notification.Notification.get_latest"]], "reset() (deepcave.utils.notification.notification method)": [[57, "deepcave.utils.notification.Notification.reset"]], "update() (deepcave.utils.notification.notification method)": [[57, "deepcave.utils.notification.Notification.update"]], "runcaches (class in deepcave.utils.run_caches)": [[58, "deepcave.utils.run_caches.RunCaches"]], "clear() (deepcave.utils.run_caches.runcaches method)": [[58, "deepcave.utils.run_caches.RunCaches.clear"]], "clear_run() (deepcave.utils.run_caches.runcaches method)": [[58, "deepcave.utils.run_caches.RunCaches.clear_run"]], "deepcave.utils.run_caches": [[58, "module-deepcave.utils.run_caches"]], "get() (deepcave.utils.run_caches.runcaches method)": [[58, "deepcave.utils.run_caches.RunCaches.get"]], "set() (deepcave.utils.run_caches.runcaches method)": [[58, "deepcave.utils.run_caches.RunCaches.set"]], "update() (deepcave.utils.run_caches.runcaches method)": [[58, "deepcave.utils.run_caches.RunCaches.update"]], "styledplot (class in deepcave.utils.styled_plot)": [[59, "deepcave.utils.styled_plot.StyledPlot"]], "__getattr__() (deepcave.utils.styled_plot.styledplot method)": [[59, "deepcave.utils.styled_plot.StyledPlot.__getattr__"]], "boxplot() (deepcave.utils.styled_plot.styledplot method)": [[59, "deepcave.utils.styled_plot.StyledPlot.boxplot"]], "deepcave.utils.styled_plot": [[59, "module-deepcave.utils.styled_plot"]], "figure() (deepcave.utils.styled_plot.styledplot method)": [[59, "deepcave.utils.styled_plot.StyledPlot.figure"]], "get_color() (deepcave.utils.styled_plot.styledplot method)": [[59, "deepcave.utils.styled_plot.StyledPlot.get_color"]], "legend() (deepcave.utils.styled_plot.styledplot method)": [[59, "deepcave.utils.styled_plot.StyledPlot.legend"]], "render() (deepcave.utils.styled_plot.styledplot method)": [[59, "deepcave.utils.styled_plot.StyledPlot.render"]], "save_figure() (deepcave.utils.styled_plot.styledplot method)": [[59, "deepcave.utils.styled_plot.StyledPlot.save_figure"]], "xlim() (deepcave.utils.styled_plot.styledplot method)": [[59, "deepcave.utils.styled_plot.StyledPlot.xlim"]], "ylim() (deepcave.utils.styled_plot.styledplot method)": [[59, "deepcave.utils.styled_plot.StyledPlot.ylim"]], "deepcave.utils.styled_plotty": [[60, "module-deepcave.utils.styled_plotty"]], "generate_config_code() (in module deepcave.utils.styled_plotty)": [[60, "deepcave.utils.styled_plotty.generate_config_code"]], "get_color() (in module deepcave.utils.styled_plotty)": [[60, "deepcave.utils.styled_plotty.get_color"]], "get_discrete_heatmap() (in module deepcave.utils.styled_plotty)": [[60, "deepcave.utils.styled_plotty.get_discrete_heatmap"]], "get_hovertext_from_config() (in module deepcave.utils.styled_plotty)": [[60, "deepcave.utils.styled_plotty.get_hovertext_from_config"]], "get_hyperparameter_ticks() (in module deepcave.utils.styled_plotty)": [[60, "deepcave.utils.styled_plotty.get_hyperparameter_ticks"]], "get_hyperparameter_ticks_from_values() (in module deepcave.utils.styled_plotty)": [[60, "deepcave.utils.styled_plotty.get_hyperparameter_ticks_from_values"]], "hex_to_rgb() (in module deepcave.utils.styled_plotty)": [[60, "deepcave.utils.styled_plotty.hex_to_rgb"]], "prettify_label() (in module deepcave.utils.styled_plotty)": [[60, "deepcave.utils.styled_plotty.prettify_label"]], "save_image() (in module deepcave.utils.styled_plotty)": [[60, "deepcave.utils.styled_plotty.save_image"]], "convert_symb() (in module deepcave.utils.symbolic_regression)": [[61, "deepcave.utils.symbolic_regression.convert_symb"]], "deepcave.utils.symbolic_regression": [[61, "module-deepcave.utils.symbolic_regression"]], "exp() (in module deepcave.utils.symbolic_regression)": [[61, "deepcave.utils.symbolic_regression.exp"]], "get_function_set() (in module deepcave.utils.symbolic_regression)": [[61, "deepcave.utils.symbolic_regression.get_function_set"]], "create_url() (in module deepcave.utils.url)": [[62, "deepcave.utils.url.create_url"]], "deepcave.utils.url": [[62, "module-deepcave.utils.url"]], "parse_url() (in module deepcave.utils.url)": [[62, "deepcave.utils.url.parse_url"]], "deepcave.utils.util": [[63, "module-deepcave.utils.util"]], "get_latest_change() (in module deepcave.utils.util)": [[63, "deepcave.utils.util.get_latest_change"]], "get_random_string() (in module deepcave.utils.util)": [[63, "deepcave.utils.util.get_random_string"]], "short_string() (in module deepcave.utils.util)": [[63, "deepcave.utils.util.short_string"]], "bo": [[79, "term-BO"]], "budget": [[79, "term-Budget"]], "objective": [[79, "term-Objective"]], "smac": [[79, "term-SMAC"]]}})