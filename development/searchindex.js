Search.setIndex({"docnames": ["api", "api/deepcave.evaluators", "api/deepcave.evaluators.epm", "api/deepcave.evaluators.epm.fanova_forest", "api/deepcave.evaluators.epm.random_forest", "api/deepcave.evaluators.epm.random_forest_surrogate", "api/deepcave.evaluators.epm.utils", "api/deepcave.evaluators.fanova", "api/deepcave.evaluators.footprint", "api/deepcave.evaluators.lpi", "api/deepcave.layouts", "api/deepcave.layouts.not_found", "api/deepcave.layouts.sidebar", "api/deepcave.plugins", "api/deepcave.plugins.budget", "api/deepcave.plugins.dynamic", "api/deepcave.plugins.hyperparameter", "api/deepcave.plugins.hyperparameter.importances", "api/deepcave.plugins.hyperparameter.pdp", "api/deepcave.plugins.objective", "api/deepcave.plugins.objective.configuration_cube", "api/deepcave.plugins.objective.cost_over_time", "api/deepcave.plugins.objective.parallel_coordinates", "api/deepcave.plugins.objective.pareto_front", "api/deepcave.plugins.static", "api/deepcave.plugins.summary", "api/deepcave.plugins.summary.configurations", "api/deepcave.plugins.summary.footprint", "api/deepcave.plugins.summary.overview", "api/deepcave.runs", "api/deepcave.runs.converters", "api/deepcave.runs.converters.bohb", "api/deepcave.runs.converters.deepcave", "api/deepcave.runs.converters.smac3v1", "api/deepcave.runs.converters.smac3v2", "api/deepcave.runs.exceptions", "api/deepcave.runs.group", "api/deepcave.runs.handler", "api/deepcave.runs.objective", "api/deepcave.runs.recorder", "api/deepcave.runs.run", "api/deepcave.runs.status", "api/deepcave.runs.trial", "api/deepcave.utils", "api/deepcave.utils.cache", "api/deepcave.utils.cast", "api/deepcave.utils.compression", "api/deepcave.utils.configs", "api/deepcave.utils.configspace", "api/deepcave.utils.dash", "api/deepcave.utils.data_structures", "api/deepcave.utils.docs", "api/deepcave.utils.files", "api/deepcave.utils.hash", "api/deepcave.utils.layout", "api/deepcave.utils.logs", "api/deepcave.utils.notification", "api/deepcave.utils.run_caches", "api/deepcave.utils.styled_plot", "api/deepcave.utils.styled_plotty", "api/deepcave.utils.url", "api/deepcave.utils.util", "converters", "examples/api/index", "examples/api/parallel_coordinates", "examples/index", "examples/record/digits_sklearn", "examples/record/index", "examples/record/minimal", "examples/record/mnist_pytorch", "faq", "getting_started", "glossary", "index", "installation", "plugins/budget_correlation", "plugins/configuration_cube", "plugins/configuration_footprint", "plugins/configurations", "plugins/cost_over_time", "plugins/importances", "plugins/index", "plugins/overview", "plugins/parallel_coordinates", "plugins/pareto_front", "plugins/partial_dependencies", "redis"], "filenames": ["api.rst", "api/deepcave.evaluators.rst", "api/deepcave.evaluators.epm.rst", "api/deepcave.evaluators.epm.fanova_forest.rst", "api/deepcave.evaluators.epm.random_forest.rst", "api/deepcave.evaluators.epm.random_forest_surrogate.rst", "api/deepcave.evaluators.epm.utils.rst", "api/deepcave.evaluators.fanova.rst", "api/deepcave.evaluators.footprint.rst", "api/deepcave.evaluators.lpi.rst", "api/deepcave.layouts.rst", "api/deepcave.layouts.not_found.rst", "api/deepcave.layouts.sidebar.rst", "api/deepcave.plugins.rst", "api/deepcave.plugins.budget.rst", "api/deepcave.plugins.dynamic.rst", "api/deepcave.plugins.hyperparameter.rst", "api/deepcave.plugins.hyperparameter.importances.rst", "api/deepcave.plugins.hyperparameter.pdp.rst", "api/deepcave.plugins.objective.rst", "api/deepcave.plugins.objective.configuration_cube.rst", "api/deepcave.plugins.objective.cost_over_time.rst", "api/deepcave.plugins.objective.parallel_coordinates.rst", "api/deepcave.plugins.objective.pareto_front.rst", "api/deepcave.plugins.static.rst", "api/deepcave.plugins.summary.rst", "api/deepcave.plugins.summary.configurations.rst", "api/deepcave.plugins.summary.footprint.rst", "api/deepcave.plugins.summary.overview.rst", "api/deepcave.runs.rst", "api/deepcave.runs.converters.rst", "api/deepcave.runs.converters.bohb.rst", "api/deepcave.runs.converters.deepcave.rst", "api/deepcave.runs.converters.smac3v1.rst", "api/deepcave.runs.converters.smac3v2.rst", "api/deepcave.runs.exceptions.rst", "api/deepcave.runs.group.rst", "api/deepcave.runs.handler.rst", "api/deepcave.runs.objective.rst", "api/deepcave.runs.recorder.rst", "api/deepcave.runs.run.rst", "api/deepcave.runs.status.rst", "api/deepcave.runs.trial.rst", "api/deepcave.utils.rst", "api/deepcave.utils.cache.rst", "api/deepcave.utils.cast.rst", "api/deepcave.utils.compression.rst", "api/deepcave.utils.configs.rst", "api/deepcave.utils.configspace.rst", "api/deepcave.utils.dash.rst", "api/deepcave.utils.data_structures.rst", "api/deepcave.utils.docs.rst", "api/deepcave.utils.files.rst", "api/deepcave.utils.hash.rst", "api/deepcave.utils.layout.rst", "api/deepcave.utils.logs.rst", "api/deepcave.utils.notification.rst", "api/deepcave.utils.run_caches.rst", "api/deepcave.utils.styled_plot.rst", "api/deepcave.utils.styled_plotty.rst", "api/deepcave.utils.url.rst", "api/deepcave.utils.util.rst", "converters.rst", "examples/api/index.rst", "examples/api/parallel_coordinates.rst", "examples/index.rst", "examples/record/digits_sklearn.rst", "examples/record/index.rst", "examples/record/minimal.rst", "examples/record/mnist_pytorch.rst", "faq.rst", "getting_started.rst", "glossary.rst", "index.rst", "installation.rst", "plugins/budget_correlation.rst", "plugins/configuration_cube.rst", "plugins/configuration_footprint.rst", "plugins/configurations.rst", "plugins/cost_over_time.rst", "plugins/importances.rst", "plugins/index.rst", "plugins/overview.rst", "plugins/parallel_coordinates.rst", "plugins/pareto_front.rst", "plugins/partial_dependencies.rst", "redis.rst"], "titles": ["API References", "deepcave.evaluators", "deepcave.evaluators.epm", "deepcave.evaluators.epm.fanova_forest", "deepcave.evaluators.epm.random_forest", "deepcave.evaluators.epm.random_forest_surrogate", "deepcave.evaluators.epm.utils", "deepcave.evaluators.fanova", "deepcave.evaluators.footprint", "deepcave.evaluators.lpi", "deepcave.layouts", "deepcave.layouts.not_found", "deepcave.layouts.sidebar", "deepcave.plugins", "deepcave.plugins.budget", "deepcave.plugins.dynamic", "deepcave.plugins.hyperparameter", "deepcave.plugins.hyperparameter.importances", "deepcave.plugins.hyperparameter.pdp", "deepcave.plugins.objective", "deepcave.plugins.objective.configuration_cube", "deepcave.plugins.objective.cost_over_time", "deepcave.plugins.objective.parallel_coordinates", "deepcave.plugins.objective.pareto_front", "deepcave.plugins.static", "deepcave.plugins.summary", "deepcave.plugins.summary.configurations", "deepcave.plugins.summary.footprint", "deepcave.plugins.summary.overview", "deepcave.runs", "deepcave.runs.converters", "deepcave.runs.converters.bohb", "deepcave.runs.converters.deepcave", "deepcave.runs.converters.smac3v1", "deepcave.runs.converters.smac3v2", "deepcave.runs.exceptions", "deepcave.runs.group", "deepcave.runs.handler", "deepcave.runs.objective", "deepcave.runs.recorder", "deepcave.runs.run", "deepcave.runs.status", "deepcave.runs.trial", "deepcave.utils", "deepcave.utils.cache", "deepcave.utils.cast", "deepcave.utils.compression", "deepcave.utils.configs", "deepcave.utils.configspace", "deepcave.utils.dash", "deepcave.utils.data_structures", "deepcave.utils.docs", "deepcave.utils.files", "deepcave.utils.hash", "deepcave.utils.layout", "deepcave.utils.logs", "deepcave.utils.notification", "deepcave.utils.run_caches", "deepcave.utils.styled_plot", "deepcave.utils.styled_plotty", "deepcave.utils.url", "deepcave.utils.util", "Converters", "API", "Parallel Coordinates", "Examples", "Multi-Layer Perceptron via Sklearn", "Record", "Record Minimal Run", "Multi-Layer Perceptron via PyTorch", "Frequently Asked Questions", "Getting Started", "Glossary", "Home", "Installation", "Budget Correlation", "Configuration Cube", "Configuration Footprint", "Configurations", "Cost Over Time", "Importances", "Plugins", "Overview", "Parallel Coordinates", "Pareto Front", "Partial Dependencies", "Install Redis Server"], "terms": {"modul": [1, 2, 10, 13, 14, 16, 19, 25, 29, 30, 40, 43], "class": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 56, 57, 58, 62, 65, 67, 69, 71], "fanovaforest": 3, "configspac": [3, 4, 5, 7, 29, 31, 32, 33, 34, 40, 62, 64, 66, 68, 69], "n_tree": [3, 4, 7], "10": [3, 59, 66, 69, 73, 83], "ratio_featur": [3, 4], "1": [3, 4, 7, 9, 59, 64, 66, 68, 69, 71, 75], "0": [3, 4, 9, 40, 62, 64, 66, 68, 69, 75], "min_samples_split": [3, 4], "min_samples_leaf": [3, 4], "max_depth": [3, 4], "64": [3, 69], "max_nod": [3, 4], "1048576": [3, 4], "eps_pur": [3, 4], "1e": [3, 4, 69], "08": [3, 4], "bootstrap": [3, 4], "true": [3, 4, 7, 13, 29, 37, 44, 57, 59, 66, 69, 74, 75, 77], "instance_featur": [3, 4, 6], "none": [3, 4, 5, 6, 7, 13, 15, 17, 18, 20, 21, 22, 24, 26, 27, 29, 31, 32, 33, 34, 36, 37, 38, 40, 44, 47, 48, 50, 54, 57, 59, 66, 68, 69], "pca_compon": [3, 4], "2": [3, 4, 69, 74, 75, 76, 86], "cutoff": 3, "inf": [3, 40], "seed": [3, 4, 5, 7, 66, 68, 69], "sourc": [3, 5, 6, 7, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 46, 47, 48, 49, 50, 54, 57, 58, 59, 64, 65, 66, 68, 69, 81], "base": [3, 4, 5, 7, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 57, 58, 79, 82], "randomforest": [3, 4], "A": [3, 4, 29, 71, 72, 73, 79, 84], "fanova": [3, 29, 83], "forest": [3, 4, 5, 7], "wrapper": [3, 4, 29], "pyrfr": [3, 4, 29], "compute_margin": 3, "hp_id": 3, "depth": [3, 7], "return": [3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 40, 44, 46, 47, 48, 50, 54, 57, 59, 62, 66, 69], "margin": [3, 4, 7], "select": [3, 7, 13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 36, 37, 57, 62, 71, 73, 75, 76, 78, 79, 82, 83, 84], "paramet": [3, 4, 5, 7, 13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 36, 37, 40, 47, 48, 50, 57, 59, 69, 72], "list": [3, 6, 7, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 36, 37, 40, 54, 59, 75, 78], "int": [3, 6, 7, 13, 26, 29, 36, 48, 59, 69], "contain": [3, 29, 47], "indic": [3, 77, 82, 83], "start": [3, 13, 40, 66, 68, 69, 70, 74, 81], "16": [4, 7, 69], "8333333333333334": 4, "3": [4, 59, 69, 74, 76], "log_i": 4, "fals": [4, 13, 29, 37, 44, 54, 69], "object": [4, 7, 13, 29, 31, 32, 33, 34, 36, 37, 40, 42, 44, 57, 58, 62, 64, 66, 68, 69, 72, 75, 76, 77, 79, 81, 83, 84, 85], "random": [4, 5, 7, 9, 48, 68, 69], "thi": [4, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 31, 32, 33, 34, 36, 40, 48, 57, 59, 62, 63, 64, 65, 66, 68, 69, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "i": [4, 7, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 35, 36, 37, 38, 40, 44, 47, 48, 57, 58, 59, 62, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "handi": [4, 82], "becaus": [4, 13, 57, 78], "we": [4, 58, 69, 74, 75, 77, 81, 82, 83], "onli": [4, 7, 13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 37, 48, 57, 59, 74, 76, 78, 83], "need": [4, 7, 13, 21, 23, 44, 57, 62, 74, 75, 77, 79, 81], "pass": [4, 7, 13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 37, 83], "have": [4, 13, 17, 18, 20, 22, 26, 27, 59, 62, 63, 65, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 86], "work": [4, 37, 62, 73, 74, 81, 86], "version": [4, 59], "without": 4, "specifi": [4, 7, 13, 29, 40, 76, 79, 83], "e": [4, 13, 21, 23, 44, 59, 62, 70, 73, 78], "g": [4, 13, 21, 23, 44, 59, 62, 70, 73, 78], "type": [4, 5, 6, 7, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 40, 44, 46, 47, 48, 50, 54, 57, 59, 69, 77], "bound": [4, 6, 38, 77, 82], "also": [4, 13, 21, 23, 37, 71, 73, 78, 79, 81, 82], "support": [4, 29, 62, 73, 79], "instanc": [4, 6, 37], "predict": [4, 5, 29], "x": [4, 5, 9, 59, 66, 69, 77, 79, 82, 83], "mean": [4, 5, 7, 75, 79], "varianc": [4, 7], "given": [4, 29, 36, 40, 47, 57, 76, 77, 84], "np": [4, 68, 69], "ndarrai": [4, 5], "n_sampl": 4, "n_featur": 4, "config": [4, 13, 15, 24, 29, 36, 37, 40, 57, 62, 66, 68, 69, 70, 71, 81, 82], "featur": [4, 6, 13, 79, 83], "train": [4, 7, 69, 75, 81], "sampl": [4, 5, 77], "tupl": [4, 5, 6, 7, 29, 59], "option": [4, 7, 13, 17, 18, 20, 22, 26, 27, 29, 36, 37, 40, 44, 47, 48, 59, 71, 77, 79], "n_object": 4, "var": [4, 7], "standard": [4, 29, 36, 79], "deviat": [4, 29, 36, 79], "predict_margin": 4, "over": [4, 76, 77, 78, 81, 82, 84], "all": [4, 7, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 37, 44, 57, 59, 65, 75, 76, 77, 79, 83], "marginalis": 4, "set": [4, 13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 37, 44, 57, 58, 70], "configur": [4, 29, 40, 47, 48, 71, 72, 75, 79, 83, 84], "shape": [4, 5], "y": [4, 29, 59, 66, 69, 79, 82], "transform": [4, 37, 69], "pca": 4, "appli": 4, "afterward": 4, "_train": 4, "call": [4, 10, 11, 12, 13, 17, 18, 20, 21, 22, 23, 26, 27], "input": [4, 5, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 57, 62, 64, 81], "data": [4, 5, 7, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 37, 40, 46, 57, 59, 62, 66, 69, 71, 73, 81, 82], "point": [4, 75, 76, 77, 81], "target": [4, 66], "valu": [4, 7, 13, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 37, 41, 44, 48, 54, 57, 59, 68, 70, 75, 76, 77, 78, 79, 82, 83], "must": [4, 13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 47, 57, 59, 71], "match": [4, 40], "number": [4, 29, 40, 59, 71, 75, 76, 79, 82, 83], "name": [4, 7, 13, 29, 31, 32, 33, 34, 36, 37, 38, 40, 47, 58, 59, 66, 68, 69, 71, 82, 84], "constructor": 4, "interv": [4, 9], "randomforestsurrog": 5, "surrogatemodel": 5, "surrog": 5, "pypdp": 5, "packag": [5, 74], "calcul": [5, 7, 13, 24, 29, 36, 57, 70, 81, 83], "sigma": 5, "nxk": 5, "n": [5, 74], "k": 5, "std": 5, "function": [6, 10, 11, 12, 13, 21, 23, 29, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 69], "get_typ": 6, "config_spac": 6, "hyperparamet": [6, 7, 29, 48, 59, 66, 68, 69, 72, 73, 76, 77, 78, 80, 81, 83, 85], "float": [6, 7, 29, 36, 40, 48, 59], "run": [7, 13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 57, 62, 64, 65, 66, 67, 69, 71, 73, 74, 75, 77, 78, 79, 81, 82, 84, 86], "provid": [7, 13, 17, 18, 20, 22, 26, 27, 40, 62, 73, 75, 77, 78, 81, 82, 83], "midpoint": 7, "size": [7, 59, 68], "from": [7, 13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 37, 40, 44, 46, 47, 48, 57, 58, 59, 62, 64, 66, 68, 69, 71, 73, 74, 77, 78, 82, 83], "": [7, 57, 69, 70, 73, 77, 78, 81, 82], "split": [7, 82], "order": [7, 76, 83], "get": [7, 13, 17, 18, 20, 21, 22, 23, 26, 27, 29, 44, 48, 57, 63, 65, 66, 67, 74, 77, 82, 86], "budget": [7, 13, 21, 23, 29, 36, 40, 42, 62, 66, 68, 69, 72, 73, 76, 77, 78, 80, 81, 82, 83], "wrt": [7, 78, 85], "encod": [7, 29, 59], "right": [7, 37, 62, 83, 84], "now": [7, 69, 74, 77, 86], "us": [7, 13, 15, 21, 23, 24, 29, 36, 37, 40, 44, 47, 54, 57, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82], "It": [7, 13, 70, 77, 81], "can": [7, 13, 21, 23, 29, 37, 48, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84], "further": [7, 29, 71, 75, 82, 83], "union": [7, 10, 12, 13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 36, 37, 40, 59], "considerd": [7, 29], "By": [7, 13, 29, 36, 40, 47, 48, 59, 83], "default": [7, 13, 17, 18, 20, 22, 26, 27, 29, 36, 37, 40, 44, 47, 48, 58, 59, 82, 83], "If": [7, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 40, 47, 54, 57, 58, 59, 63, 65, 73, 74, 75, 76, 79, 81, 82, 84, 86], "ar": [7, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 35, 37, 40, 47, 48, 54, 57, 59, 62, 64, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "consid": [7, 29, 64, 74, 75, 82, 83, 84, 86], "highest": [7, 29, 36, 75, 76, 82, 83], "chosen": [7, 29, 36, 37, 76, 84], "how": [7, 63, 64, 65, 66, 67, 68, 69, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86], "mani": [7, 69, 73, 76, 79, 81, 82, 83], "tree": [7, 29, 81, 83], "should": [7, 13, 26, 29, 36, 37, 40, 57, 59, 71, 72, 75, 81, 84], "get_import": 7, "hp_name": 7, "sort": 7, "import": [7, 13, 64, 66, 68, 69, 75, 77, 78, 81, 82, 83, 84], "score": [7, 66, 75, 76, 77, 83], "higher": [7, 70, 75], "than": [7, 79, 84], "might": [7, 59, 70, 75, 78, 81], "take": [7, 59, 79, 81], "much": [7, 75, 77, 79, 80, 81], "longer": [7, 75, 81], "str": [7, 13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 40, 46, 47, 50, 54, 57, 59], "often": [7, 78, 82], "dimens": 7, "combin": [7, 29, 40, 71, 72, 73, 76, 78, 79, 83], "bool": [7, 13, 29, 37, 40, 44, 57, 59], "whether": [7, 13, 29, 44, 59, 75, 79, 82], "dictionari": [7, 13, 17, 18, 20, 21, 22, 23, 26, 27, 29, 44, 50], "corresbond": 7, "The": [7, 13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 36, 37, 40, 47, 48, 57, 59, 62, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83], "form": 7, "individu": [7, 84], "total": [7, 64, 66, 68, 69], "note": [7, 29, 64, 77], "same": [7, 13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 59, 64, 75, 76, 77, 81, 83], "dict": [7, 13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 37, 40, 50, 54, 57, 69], "rais": [7, 13, 15, 21, 23, 24, 29, 35, 37, 38, 40, 47, 69], "runtimeerror": [7, 13, 15, 24, 29, 37, 38, 40, 47, 69], "zero": 7, "abc": [10, 13, 15, 24, 29, 40], "abstract": [10, 29, 40], "__call__": [10, 11, 12, 13, 15, 24], "self": [10, 11, 12, 13, 37, 58, 69, 73], "compon": [10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28], "notfoundlayout": 11, "url": [11, 13, 73], "sidebarlayout": 12, "categorized_plugin": 12, "layout": [13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28], "id": [13, 29, 36, 37, 40, 57, 78, 82], "uniqu": [13, 62], "identifi": [13, 29, 36, 40, 83], "shown": [13, 59, 77], "navig": 13, "titl": [13, 73], "descript": 13, "displai": [13, 15, 24, 59, 76, 78, 79, 81, 82], "below": 13, "icon": 13, "fontawesom": 13, "help": [13, 70, 73, 76, 83], "path": [13, 31, 32, 33, 34, 37, 40, 47, 62, 69, 71, 74, 86], "file": [13, 29, 36, 37, 40, 44, 47, 62, 70, 71, 74, 81, 86], "button_capt": 13, "caption": 13, "button": [13, 73, 77, 81], "staticplugin": [13, 17, 18, 22, 24, 27], "activate_run_select": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28], "show": [13, 59, 64, 66, 68, 69, 76, 79, 81, 82, 83, 84, 85], "dropdown": 13, "one": [13, 17, 18, 20, 22, 26, 27, 29, 37, 70, 73, 76, 77, 82, 85], "could": [13, 37, 47, 70, 75, 82, 83], "view": [13, 76, 77, 78, 79, 82, 83], "time": [13, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 36, 40, 62, 64, 66, 68, 69, 73, 76, 77, 81], "moreov": [13, 29, 73], "prevent": 13, "result": [13, 17, 18, 20, 21, 22, 23, 26, 27, 29, 31, 32, 33, 34, 36, 57, 62, 65, 67, 69, 73, 79, 81], "across": [13, 82], "render_button": 13, "basic": [13, 15, 24, 76, 81], "block": [13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 78, 81], "element": [13, 15, 24], "stack": [13, 15, 24, 82], "up": [13, 15, 24, 29], "here": [13, 15, 24, 64, 68, 75, 76, 77, 78, 82, 83], "static": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 81], "check_run_compat": 13, "check": [13, 29, 40, 44, 74, 75, 81, 82, 86], "compat": [13, 21, 23, 29], "you": [13, 59, 62, 63, 64, 65, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86], "abstractrun": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 36, 37, 40, 57], "One": [13, 75, 79, 83], "group": [13, 29, 37, 71, 73, 78, 79, 82, 83], "check_runs_compat": [13, 21, 23], "someth": [13, 21, 23, 74, 77, 86], "common": [13, 21, 23], "sinc": [13, 21, 23, 44, 57, 74, 78, 79, 81], "befor": [13, 21, 23, 70, 81], "creat": [13, 21, 23, 26, 37, 40, 44, 57, 62, 74, 81], "notmergeableerror": [13, 21, 23, 35, 37], "an": [13, 21, 23, 24, 29, 37, 41, 48, 59, 63, 65, 66, 67, 72, 73, 75, 76, 81, 82], "error": [13, 21, 23, 37, 82], "thrown": [13, 21, 23, 37], "generate_input": [13, 64], "kwarg": [13, 36, 69], "gener": [13, 48, 59, 73, 75, 77, 81, 82], "process": [13, 17, 18, 20, 21, 22, 23, 26, 27, 29, 62, 66, 73, 74, 75, 77, 81], "load_output": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 64], "requir": [13, 59, 81, 86], "api": [13, 64, 73], "mode": [13, 63, 65, 73, 74, 86], "argument": [13, 48, 71], "valid": [13, 35, 69, 71, 77], "against": 13, "schema": 13, "avail": [13, 29, 37, 62, 64, 74, 78, 86], "runtim": 13, "therefor": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 62, 73, 82], "beforehand": 13, "ani": [13, 17, 18, 20, 21, 22, 23, 26, 27, 29, 40, 44, 54, 57, 71, 73, 81], "addit": [13, 40, 42, 59, 81], "keyword": 13, "classmethod": [13, 31, 32, 33, 34, 40], "generate_output": [13, 64], "activ": [13, 66, 69, 74], "accept": [13, 71], "either": [13, 29, 47], "multipl": [13, 29, 69, 73, 75, 76, 79, 83, 84, 85], "onc": [13, 71], "intern": [13, 37, 40], "real": 13, "filter": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 64, 76, 81, 83], "necessari": [13, 17, 18, 20, 21, 22, 23, 26, 27, 57], "output": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 57, 64, 69, 81], "first": [13, 17, 18, 20, 21, 22, 23, 26, 27, 29, 74, 75, 77, 83, 86], "kei": [13, 37, 44, 57], "get_base_url": 13, "cl": 13, "string": [13, 29, 46, 59], "get_filter_layout": [13, 17, 18, 20, 21, 22, 23, 26, 27], "regist": [13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 81], "callabl": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28], "method": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 62], "user": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 81], "variabl": [13, 17, 18, 20, 21, 22, 23, 26, 27, 64], "get_input_layout": [13, 17, 18, 20, 21, 22, 23, 26, 27], "get_mpl_output_layout": [13, 17, 23, 27], "matplotlib": [13, 17, 23, 27, 58, 64, 73], "get_output_layout": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28], "get_run_input_layout": 13, "case": [13, 17, 18, 20, 22, 26, 27, 29, 40, 70, 76], "get_selected_run": 13, "pars": [13, 47], "otherwis": [13, 37, 73, 79], "possibl": [13, 47, 48, 59, 73, 74, 77, 79, 81, 82], "preventupd": 13, "load_dependency_input": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28], "previous_input": [13, 17, 18, 20, 22, 26, 27], "load_input": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28], "after": [13, 17, 18, 20, 22, 26, 27, 29, 62, 71, 78, 81], "chang": [13, 15, 17, 18, 20, 22, 24, 26, 27, 29, 31, 32, 33, 34, 36, 37, 40, 44, 57, 62, 71, 73, 78, 79, 81, 82, 83, 85], "lot": [13, 17, 18, 20, 22, 26, 27, 77], "flexibl": [13, 17, 18, 20, 22, 26, 27, 73], "merg": [13, 17, 18, 20, 22, 26, 27, 29, 37], "selected_run": [13, 17, 18, 20, 22, 26, 27], "In": [13, 17, 18, 20, 22, 26, 27, 29, 36, 40, 71, 78, 79, 81, 82], "previou": [13, 17, 18, 20, 22, 26, 27, 75], "content": [13, 17, 18, 20, 21, 22, 23, 26, 27, 44, 70], "current": [13, 17, 18, 20, 22, 26, 27, 29, 31, 32, 33, 34, 36, 37, 59, 62, 81], "load": [13, 17, 18, 20, 21, 22, 23, 26, 27, 37, 40, 44, 47, 57, 64], "defin": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 66, 69], "pre": [13, 17, 18, 20, 21, 22, 23, 26, 27], "so": [13, 17, 18, 20, 21, 22, 23, 26, 27, 57, 62, 65, 67, 70, 75, 76, 77, 81, 83], "cach": [13, 17, 18, 20, 21, 22, 23, 26, 27, 29, 31, 32, 33, 34, 36, 37, 57, 59, 73, 77, 81], "its": [13, 17, 18, 20, 21, 22, 23, 26, 27, 29, 57, 72, 75, 77, 81], "fill": [13, 17, 18, 20, 21, 22, 23, 26, 27], "load_mpl_output": [13, 17, 23, 27, 64], "read": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 44], "raw": [13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 57, 73, 81], "prepar": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28], "them": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 59, 71, 77, 83], "clean": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 81], "differ": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 57, 74, 76, 77, 80, 83], "compar": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 76, 79], "pleas": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 71, 73], "see": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 65, 67, 71, 74, 75, 76, 77, 78, 79, 82, 83, 84, 86], "_clean_input": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28], "more": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 35, 66, 69, 75, 77, 78, 81, 82], "inform": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 40, 75, 77, 78, 81, 86], "posit": [13, 17, 18, 20, 21, 22, 23, 26, 27, 28], "load_run_input": 13, "both": [13, 47, 54, 59, 62, 71, 81, 84], "singl": [13, 78, 80], "separ": 13, "json": [13, 17, 18, 20, 21, 22, 23, 26, 27, 44], "serializ": [13, 17, 18, 20, 21, 22, 23, 26, 27], "serial": [13, 17, 18, 20, 21, 22, 23, 26, 27, 46], "register_callback": [13, 15, 24], "callback": [13, 15, 24], "follow": [13, 15, 24, 29, 40, 44, 62, 65, 67, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86], "past": [13, 15, 24], "back": [13, 15, 24, 73, 75], "particular": [13, 15, 24, 59, 76], "interest": [13, 15, 24], "depend": [13, 15, 24, 29, 75], "dialog": [13, 15, 24], "redirect": [13, 15, 24, 71, 84], "click": [13, 15, 24, 83, 84], "_description_": [13, 15, 24, 59], "register_input": 13, "attribut": [13, 29], "server": [13, 70, 71], "map": [13, 76, 81], "which": [13, 26, 29, 37, 48, 57, 59, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "dash": [13, 73], "cast": 13, "global": [13, 29, 36], "register_output": 13, "mpl": 13, "registr": 13, "dynamicplugin": [15, 20, 21, 23, 26, 28], "_": [17, 20, 22, 28], "partialdepend": 18, "configurationcub": 20, "costovertim": 21, "parallelcoordin": [22, 64], "paretofront": 23, "pluginst": 24, "enum": 24, "enumer": [24, 41], "queue": [24, 70, 71, 81], "made": 24, "consum": 24, "task": 24, "get_link": 26, "config_id": [26, 29, 36, 42], "link": [26, 78, 82], "specif": [26, 29, 44, 69, 78, 79, 81, 84], "visit": 26, "encode_config": 29, "normal": [29, 69], "look": [29, 37, 63, 65, 71, 76, 81], "ha": [29, 31, 32, 33, 34, 36, 44, 48, 57, 69, 71, 81, 84], "done": [29, 48, 77, 81], "itself": [29, 75], "get_all_cost": 29, "status": 29, "cost": [29, 36, 40, 42, 66, 68, 69, 71, 77, 81, 84], "histori": [29, 62], "statu": [29, 40, 42, 69, 78, 82], "stati": [29, 69], "get_budget": 29, "human": [29, 73], "want": [29, 59, 63, 65, 71, 74, 79, 84], "convert": [29, 37, 59, 64, 71, 73, 77], "integ": [29, 48], "include_combin": 29, "meta": [29, 31, 32, 33, 34, 37, 40, 62], "make": [29, 58, 62, 63, 65, 70, 71, 73, 74, 75, 78, 83, 86], "better": [29, 72, 75, 79, 84], "readabl": 29, "get_config": 29, "were": [29, 76, 78, 82], "evalu": [29, 75, 76, 77, 78, 79, 82, 83], "includ": [29, 37, 59, 71, 72, 79], "get_cost": 29, "multi": [29, 40, 65, 67, 74, 81], "valueerror": 29, "found": [29, 37, 40, 69, 71, 74, 77, 86], "wa": [29, 37, 57, 62, 70, 74, 75, 76, 77, 78, 81, 82, 83, 86], "associ": [29, 71, 75, 76, 78, 82], "get_encoded_data": 29, "include_config_id": 29, "include_combined_cost": 29, "thei": [29, 57, 75, 76, 82, 83], "model": [29, 40, 69, 81], "encode_i": 29, "too": [29, 70, 79], "implement": [29, 81], "epm": 29, "df": 29, "datafram": [29, 46], "column": [29, 82], "hp1": 29, "hp2": 29, "hpn": 29, "obj1": 29, "obj2": 29, "objm": 29, "combined_cost": 29, "pd": 29, "get_highest_budget": 29, "get_incumb": 29, "incumb": [29, 77], "get_object": 29, "get_objective_id": [29, 64], "objective_id": [29, 64], "get_objective_nam": 29, "involv": 29, "get_statu": 29, "get_trajectori": [29, 36], "trajectori": [29, 36], "costs_mean": [29, 36], "costs_std": [29, 36], "particularli": [29, 36], "trial": [29, 33, 34, 36, 40, 62, 71, 75, 76, 78, 82, 83, 85], "properti": [29, 31, 32, 33, 34, 36, 40], "hash": [29, 31, 32, 33, 34, 36, 37, 40, 57, 62], "clear": [29, 31, 32, 33, 34, 36, 44, 57, 75], "ensur": [29, 31, 32, 33, 34, 36, 57], "alwai": [29, 31, 32, 33, 34, 36], "hold": [29, 31, 32, 33, 34, 36, 57], "latest": [29, 31, 32, 33, 34, 36, 62, 82], "contrast": [29, 36, 40, 79, 81], "throughout": [29, 36, 40, 78], "merge_cost": 29, "weight": [29, 69], "everi": [29, 73], "lower": [29, 38, 66, 68, 69, 75, 77], "length": 29, "origin": [29, 40, 78], "check_equ": 29, "equal": [29, 79], "request": [29, 81], "exclud": 29, "bohbrun": 31, "from_path": [31, 32, 33, 34, 40, 62, 64], "new": [31, 32, 33, 34, 37, 40, 62, 81], "deepcaverun": [32, 64], "smac3v1run": 33, "working_dir": [33, 34], "run_nam": [33, 34], "smac3v2run": 34, "two": [35, 72, 77, 81, 84, 85], "mergeabl": 35, "notvalidrunerror": [35, 37], "directori": [35, 37, 71, 73, 81], "arg": 36, "runhandl": 37, "run_cach": 37, "handl": [37, 44], "automat": [37, 59, 62, 71, 73], "switch": 37, "plugin": [37, 57, 64, 70, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85], "add_run": 37, "run_path": 37, "add": [37, 40, 62, 69, 71, 74, 81, 83], "alreadi": [37, 40, 75, 77, 81], "do": [37, 65, 67, 70, 73, 74, 75, 76, 77, 81, 83, 85, 86], "noth": 37, "get_available_run_path": 37, "get_group": 37, "instanti": [37, 64], "groupedrun": 37, "get_run": 37, "run_id": [37, 66, 69], "insid": [37, 62, 74, 86], "refer": [37, 81, 82], "get_run_nam": 37, "stem": 37, "include_group": 37, "readi": [37, 81], "get_selected_run_nam": 37, "get_selected_run_path": 37, "get_working_directori": 37, "remove_run": 37, "remov": [37, 57, 83], "set_working_directori": 37, "working_directori": 37, "directoi": 37, "updat": [37, 44, 50, 57, 70, 81, 82], "update_group": 37, "save": [37, 57, 59, 65, 67, 73, 81], "update_run": 37, "class_hint": 37, "upper": [38, 66, 68, 69], "optim": [38, 62, 66, 68, 69, 72, 73, 75, 76, 77, 79, 82, 83, 84], "__post_init__": 38, "lock": 38, "space": [40, 48, 75, 76, 77, 79], "start_tim": [40, 42, 69], "end_tim": [40, 42, 69], "success": [40, 69, 82], "exist": [40, 57, 77, 79], "overwritten": [40, 58], "Not": 40, "ad": [40, 50, 71, 74, 86], "expect": [40, 82], "correspond": 40, "end": [40, 64, 66, 68, 69, 78, 81, 82], "quot": [40, 71], "torch": [40, 69], "nn": [40, 69], "traceback": 40, "doe": [40, 57, 75, 76, 77, 79, 81, 83, 85], "intenum": 41, "filenam": [44, 47, 74, 86], "debug": 44, "write_fil": 44, "decid": [44, 72, 79], "flask_cach": 44, "code": [44, 64, 65, 66, 68, 69, 73], "easier": 44, "our": [44, 73, 81], "reset": [44, 57], "retriev": 44, "chain": 44, "b": [44, 50, 79, 84], "c": [44, 68, 69, 74], "4": [44, 48, 59, 62, 69, 74, 86], "set_dict": 44, "d": [44, 48], "write": [44, 62], "deseri": 46, "dtype": 46, "panda": 46, "core": [46, 72], "frame": 46, "typevar": 46, "parse_config": 47, "rel": [47, 71], "absolut": [47, 71], "locat": 47, "python": [47, 64, 65, 66, 68, 69, 73, 74, 78], "inherit": [47, 62, 71], "sample_border_config": 48, "border": [48, 77], "configurationspac": [48, 66, 68, 69], "drawn": 48, "yield": 48, "iter": 48, "sample_random_config": 48, "reduc": 48, "rang": [48, 66, 69, 75, 83], "discret": [48, 59], "For": [48, 72, 75, 81, 83, 84, 85], "exampl": [48, 63, 64, 66, 67, 68, 69, 72, 75, 81, 82, 83, 84, 85], "four": [48, 78], "flash": 49, "messag": 49, "categori": 49, "info": 49, "flask": 49, "style": 49, "alert": 49, "update_dict": 50, "inplac": 50, "get_select_opt": 54, "label": [54, 59, 83], "disabl": [54, 84], "binari": 54, "empti": 54, "runcach": 57, "store": 57, "again": [57, 83], "each": [57, 77], "own": [57, 75, 81], "clear_run": 57, "plugin_id": 57, "inputs_kei": 57, "_dict_as_kei": 57, "variant": 57, "styledplot": 58, "overwrit": 58, "pyplot": 58, "__getattr__": 58, "sure": [58, 62, 70, 71, 74, 75], "access": [58, 73, 74, 78, 86], "plt": 58, "directli": [58, 62, 63, 65, 67, 73, 74, 79, 81], "get_color": 59, "id_": 59, "alpha": [59, 68], "plotli": [59, 64], "5": [59, 66, 69, 82, 83], "color": [59, 75, 76], "get_discrete_heatmap": 59, "colorscal": 59, "nest": 59, "numpi": [59, 68, 69], "arrai": 59, "_type_": 59, "get_hyperparameter_tick": 59, "hp": 59, "additional_valu": 59, "tick": 59, "include_nan": 59, "tickval": 59, "ticktext": 59, "background": [59, 77], "don": 59, "t": [59, 69], "With": [59, 83], "6": [59, 74, 86], "behaviour": [59, 83], "ignor": [59, 69], "categor": [59, 83], "forc": 59, "nan": 59, "get_hyperparameter_ticks_from_valu": 59, "boolean": 59, "enforc": 59, "independ": 59, "hex_to_rgb": 59, "hex_str": 59, "rgb": 59, "format": [59, 62, 65, 66, 67], "000000": 59, "ff00ff": 59, "prettify_label": 59, "prettifi": 59, "shorten": 59, "save_imag": 59, "figur": [59, 64, 81], "imag": [59, 71], "fig": 59, "go": [59, 64, 66, 68, 69], "extens": 59, "Will": 59, "deepcav": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 81, 86], "interpret": [62, 71], "folder": [62, 74, 86], "put": 62, "correctli": 62, "nativ": [62, 73], "smac": [62, 72, 73], "v1": 62, "v2": 62, "bohb": [62, 73], "auto": 62, "sklearn": [62, 65, 67], "pytorch": [62, 65, 67], "observ": 62, "system": 62, "allow": [62, 73, 76, 83], "monitor": 62, "finish": [62, 70], "regularli": 62, "disk": 62, "long": [62, 79], "To": [62, 65, 67, 70, 77, 79, 82, 84], "three": [62, 81], "latest_chang": 62, "when": [62, 70, 75, 76, 77, 79, 81, 82], "available_convert": 62, "your": [62, 65, 67, 68, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 86], "branch": [62, 81], "py": [62, 64, 66, 68, 69, 71, 81], "next": [62, 74, 77, 81, 82], "did": [62, 82, 83], "fail": 62, "interact": [63, 65, 71, 73, 74, 86], "overview": [63, 65, 77], "wai": [63, 65, 75, 79, 81, 82, 83], "parallel": [63, 65], "coordin": [63, 65], "download": [64, 65, 66, 68, 69, 74, 86], "full": [64, 66, 68, 69, 73, 82], "other": [64, 66, 69, 71, 77, 78, 79], "interfac": [64, 73, 81], "fashion": 64, "parallel_coordin": 64, "__name__": [64, 66, 69], "__main__": [64, 66, 69], "record": [64, 66, 69, 73], "log": [64, 65, 66, 67, 68, 69, 82], "mlp": [64, 69], "run_2": 64, "budget_id": 64, "get_budget_id": 64, "hyperparameter_nam": 64, "get_hyperparameter_nam": 64, "final": [64, 75, 76, 83], "plai": 64, "role": 64, "altern": 64, "write_imag": 64, "test": [64, 69, 74], "png": 64, "script": [64, 66, 68, 69, 74], "minut": [64, 66, 68, 69], "000": [64, 66, 68, 69], "second": [64, 66, 68, 69], "jupyt": [64, 65, 66, 68, 69], "notebook": [64, 65, 66, 68, 69], "ipynb": [64, 66, 68, 69], "incorpor": [65, 67, 69, 75], "idea": [65, 67], "automl": [65, 67, 73, 74, 79, 81], "minim": [65, 67, 72, 81], "layer": [65, 67], "perceptron": [65, 67], "via": [65, 67, 71], "examples_python": 65, "zip": 65, "examples_jupyt": 65, "advanc": [66, 69], "neural_network": 66, "mlpclassifi": 66, "model_select": 66, "train_test_split": 66, "uniformfloathyperparamet": [66, 68, 69], "categoricalhyperparamet": [66, 69], "uniformintegerhyperparamet": [66, 69], "dataset": [66, 69], "load_digit": 66, "def": [66, 69], "get_dataset": 66, "digit": 66, "x_train": 66, "x_test": 66, "y_train": 66, "y_test": 66, "stratifi": 66, "random_st": 66, "get_configspac": [66, 69], "num_neurons_layer1": [66, 69], "100": [66, 68, 69], "num_neurons_layer2": [66, 69], "choic": [66, 69, 79], "logist": 66, "tanh": [66, 69], "relu": [66, 69], "solver": 66, "sgd": 66, "adam": [66, 69], "batch_siz": [66, 69], "learning_r": [66, 69], "0001": [66, 69], "add_hyperparamet": [66, 68, 69], "accuraci": [66, 68, 69, 72, 85], "20": [66, 68, 75], "30": [66, 75], "40": [66, 68, 75], "50": 66, "60": [66, 68], "70": [66, 75], "80": 66, "90": 66, "num_config": [66, 69], "200": 66, "num_run": [66, 69], "save_path": [66, 68, 69], "digits_sklearn": 66, "r": [66, 68, 69], "sample_configur": [66, 68, 69], "clf": 66, "max_it": 66, "hidden_layer_s": 66, "learning_rate_init": 66, "fit": [66, 69], "beta": 68, "constant": 68, "goe": 68, "uniform": [68, 69], "low": [68, 75, 81, 82, 84], "high": [68, 75, 76, 77, 79, 82, 83], "statuss": 69, "strenght": 69, "inspect": [69, 76], "boundargu": 69, "o": 69, "re": [69, 83], "f": 69, "util": 69, "dataload": 69, "random_split": 69, "torchvis": 69, "torchmetr": 69, "mnist": 69, "pytorch_lightn": 69, "pl": 69, "num_work": 69, "mnistmodel": 69, "lightningmodul": 69, "__init__": 69, "dropout_r": 69, "super": 69, "elif": 69, "sigmoid": 69, "els": 69, "data_dir": 69, "join": 69, "getcwd": 69, "num_class": 69, "dim": 69, "28": 69, "channel": 69, "width": 69, "height": 69, "compos": 69, "totensor": 69, "1307": 69, "3081": 69, "prepare_data": 69, "setup": 69, "stage": 69, "assign": 69, "val": 69, "mnist_ful": 69, "mnist_train": 69, "mnist_val": 69, "20000": 69, "40000": 69, "mnist_test": 69, "train_dataload": 69, "val_dataload": 69, "test_dataload": 69, "training_step": 69, "batch": 69, "batch_idx": 69, "logit": 69, "loss": [69, 72], "nll_loss": 69, "validation_step": 69, "pred": 69, "argmax": 69, "val_loss": 69, "prog_bar": 69, "val_acc": 69, "test_step": 69, "configure_optim": 69, "lr": 69, "num_neuron": 69, "32": 69, "sequenti": 69, "flatten": 69, "linear": [69, 82], "dropout": 69, "forward": 69, "log_softmax": 69, "cnn": 69, "conv1": 69, "conv2d": 69, "in_channel": 69, "out_channel": 69, "kernel_s": 69, "stride": 69, "pad": 69, "maxpool2d": 69, "conv2": 69, "fulli": [69, 75], "connect": 69, "out": [69, 82], "7": [69, 75], "9": [69, 74], "256": 69, "sub": [69, 73], "add_condit": 69, "equalscondit": 69, "max_epoch": 69, "8": 69, "n_epoch": 69, "linspac": 69, "num": 69, "1000": 69, "mnist_pytorch": 69, "seed_everyth": 69, "epoch": [69, 72], "round": 69, "trainer": 69, "acceler": 69, "gpu": 69, "devic": 69, "num_sanity_val_step": 69, "No": [69, 75, 83], "saniti": [69, 75, 81, 82], "auto_scale_batch_s": 69, "power": [69, 73], "determinist": 69, "min_epoch": 69, "accuracy_": 69, "loss_": 69, "just": [69, 83], "some": [69, 70, 77, 81, 82], "potenti": 69, "later": 69, "crash": [69, 78, 82, 83], "05": 69, "chanc": 69, "memoryout": 69, "timeout": 69, "elapsed_tim": 69, "what": [70, 75, 77, 82, 83], "wrong": 70, "instal": [70, 71], "redi": 70, "my": [70, 84], "machin": [70, 72, 73], "fastest": 70, "issu": 70, "slow": 70, "circl": 70, "increas": [70, 77, 78, 85], "refresh": [70, 71], "rate": [70, 71, 85], "refresh_r": 70, "step": [71, 74], "command": [71, 74], "addition": 71, "sever": 71, "open": 71, "n_worker": 71, "local": 71, "gui": 71, "browser": 71, "been": [71, 77, 78, 82], "worker": [71, 74], "custom": [71, 73], "like": [71, 73, 74, 75, 77, 79, 83, 86], "ip": 71, "port": 71, "howev": [71, 75, 79, 82], "enclos": 71, "avoid": 71, "reserv": 71, "hit": [71, 77], "enter": 71, "dashboard": [71, 73], "main": [71, 72], "page": [71, 80, 85, 86], "analyz": [71, 73, 75, 76, 78, 83], "action": 71, "collect": [71, 73], "easili": 71, "bo": 72, "bayesian": 72, "black": 72, "box": [72, 82], "algorithm": [72, 77], "weigh": 72, "explor": [72, 73, 77], "exploit": 72, "find": [72, 75, 77, 78, 82, 83, 84], "minimum": 72, "tool": [72, 73], "arbitrari": [72, 75], "learn": [72, 73, 85], "consist": 72, "aggress": 72, "race": 72, "mechan": 72, "effici": [72, 73, 84], "perform": [72, 73, 75, 79, 81, 83, 84], "metric": [72, 78], "maxim": [72, 73], "wherea": 72, "limit": [72, 83], "anyth": 72, "most": [72, 77, 80, 81, 82, 83], "frequent": 72, "neural": [72, 75], "network": [72, 75], "restrict": 72, "subset": 72, "visual": [73, 76, 78, 79, 81, 83], "analysi": [73, 81, 83], "especi": [73, 78], "problem": [73, 74, 83, 84], "framework": 73, "program": 73, "top": [73, 83], "entir": [73, 82], "divers": 73, "insight": [73, 77, 81, 83], "bring": 73, "loop": 73, "modular": 73, "structur": 73, "extend": 73, "effortlessli": 73, "complet": [73, 81, 83], "written": 73, "while": [73, 78, 81], "detect": 73, "larg": [73, 80], "area": 73, "asynchron": 73, "execut": 73, "expens": 73, "integr": 73, "document": 73, "understand": [73, 77, 81, 82], "plot": [73, 76, 82, 84], "public": 73, "give": [73, 76, 78, 81, 86], "research": 73, "project": 73, "cite": 73, "realml": 73, "icml": 73, "22": 73, "workshop": 73, "paper": 73, "misc": 73, "sass": 73, "realml2022": 73, "autom": 73, "author": 73, "ren\u00e9": 73, "bergman": 73, "eddi": 73, "biedenkapp": 73, "andr\u00e9": 73, "hutter": 73, "frank": 73, "lindauer": 73, "mariu": 73, "doi": 73, "48550": 73, "arxiv": 73, "2206": 73, "03493": 73, "http": [73, 74, 86], "org": 73, "ab": 73, "publish": 73, "year": 73, "2022": 73, "copyright": 73, "perpetu": 73, "non": 73, "exclus": 73, "licens": 73, "brew": [74, 86], "sudo": [74, 86], "apt": [74, 86], "linux": [74, 86], "section": [74, 78, 82], "exten": 74, "instruct": 74, "bash": 74, "servic": 74, "webserv": 74, "window": 74, "recommend": [74, 81], "anaconda": 74, "swig": 74, "environ": 74, "conda": 74, "pip": 74, "contribut": 74, "github": 74, "dev": 74, "git": 74, "clone": 74, "com": 74, "try": [74, 75, 77, 82, 86], "usr": [74, 86], "sbin": [74, 86], "simpli": [74, 78, 86], "expand": [74, 86], "export": [74, 86], "bashrc": [74, 86], "admin": [74, 86], "root": [74, 86], "tar": [74, 86], "gz": [74, 86], "mkdir": [74, 86], "p": [74, 86], "vendor": [74, 86], "cd": [74, 86], "wget": [74, 86], "io": [74, 86], "releas": [74, 86], "xzvf": [74, 86], "rm": [74, 86], "pwd": [74, 86], "m1": 74, "disable_spr": 74, "objc_disable_initialize_fork_safeti": 74, "ye": [74, 83], "bash_profil": 74, "enabl": [74, 83, 84], "representit": 75, "gain": [75, 79], "knowledg": [75, 77], "about": [75, 77, 78, 82], "well": [75, 77, 82, 83], "know": [75, 77, 78, 79, 82, 83], "good": [75, 77, 79, 84], "enough": 75, "infer": [75, 77], "would": [75, 79, 81, 82], "conversli": 75, "realli": [75, 83], "converg": [75, 79], "reach": [75, 79, 83], "still": [75, 77], "continu": 75, "till": 75, "between": [75, 77, 79, 80, 82], "capabl": [75, 77, 78, 79, 80, 82, 84, 85], "answer": [75, 76, 77, 78, 79, 80, 82, 83, 84, 85], "question": [75, 76, 77, 78, 79, 80, 82, 83, 84, 85], "fair": [75, 82], "represent": [75, 77], "cover": [75, 77], "wish": [75, 76, 83], "commun": [75, 76], "through": [75, 76, 77, 83], "heatmap": [75, 76, 82], "thing": 75, "perfectli": 75, "trace": 75, "ll": [75, 77, 82], "mid": 75, "slowli": 75, "drop": 75, "There": [75, 77, 81], "great": 75, "certain": [75, 76, 78, 79, 82, 83], "extra": 75, "resourc": [75, 77], "determin": [75, 78, 79, 83], "less": 75, "faster": [75, 79], "lowest": 75, "achiev": [75, 77, 79, 83], "least": 75, "rather": 75, "context": 75, "dynam": [75, 81, 83], "text": 75, "veri": [75, 76, 81], "strong": 75, "relationship": 75, "69": 75, "39": 75, "moder": 75, "29": 75, "weak": 75, "01": 75, "19": 75, "neglig": 75, "natur": 76, "mai": [76, 83], "dimension": [76, 77, 81], "investig": 76, "2d": [76, 77], "3d": 76, "slice": 76, "under": [76, 77, 80, 82, 83, 85], "slider": 76, "where": [76, 77, 78, 84], "move": 76, "along": [76, 82, 83], "chose": 76, "hyperparamt": [76, 83], "1d": 76, "grid": 76, "evid": 76, "influenc": [76, 77, 79, 80, 81], "anoth": 76, "tend": [76, 83], "prefer": [76, 77, 83, 84], "correl": 76, "respect": 76, "known": 77, "dure": [77, 82], "These": [77, 82, 83], "stop": 77, "invest": 77, "comput": [77, 84], "favor": 77, "let": [77, 78, 82, 83], "briefli": 77, "mention": [77, 79], "variou": [77, 83], "kind": [77, 81], "concern": 77, "best": [77, 79, 82, 84], "red": 77, "triangl": 77, "orang": 77, "unevalu": 77, "purpl": 77, "edg": 77, "min": 77, "max": 77, "scalar": 77, "around": 77, "those": [77, 83], "address": 77, "repres": 77, "reduct": 77, "md": 77, "attempt": 77, "preserv": 77, "distanc": 77, "spaceto": 77, "Of": 77, "cours": 77, "perfect": [77, 79, 82], "begin": 77, "talk": 77, "share": [77, 83], "axi": [77, 79, 82, 83], "co": 77, "ordin": 77, "swap": 77, "benefici": 77, "firm": 77, "grasp": 77, "perhap": 77, "mous": 77, "tell": [77, 78, 80], "possibli": 77, "noisi": 77, "rest": 77, "colour": [77, 82], "represnt": 77, "estim": 77, "region": 77, "resolut": 77, "detail": [77, 81, 82, 83, 84], "gridsiz": 77, "nice": [77, 78, 82], "quit": [77, 83], "ideal": [77, 82], "blob": 77, "small": 77, "cluster": 77, "focus": 77, "scatter": 77, "part": [78, 82], "applic": 78, "come": 78, "hand": [78, 83], "tabl": 78, "why": [78, 82], "graph": [78, 79], "concret": 78, "deploy": 78, "crucial": 78, "somehow": 78, "wise": [78, 81], "goal": [79, 81], "peak": 79, "comparison": [79, 84], "conveni": 79, "logarithm": 79, "adition": 79, "As": 79, "abov": [79, 83], "line": [79, 82, 83], "wors": 79, "spread": 79, "construct": [80, 85], "analys": 81, "aspect": 81, "easi": [81, 83], "serv": [81, 82], "deeper": 81, "suit": 81, "trigger": 81, "act": 81, "immedi": 81, "describ": 81, "quick": 81, "soon": 81, "decis": 81, "viewabl": 81, "side": 81, "bar": [81, 82, 83], "upon": 81, "design": 81, "adapt": 81, "happi": 81, "receiv": 81, "pull": 81, "statist": 82, "unsuccess": [82, 83], "On": 82, "regard": 82, "summari": 82, "notabl": 82, "tri": 82, "last": [82, 83], "alloc": 82, "barplot": 82, "occur": 82, "tab": 82, "reciev": 82, "accord": [82, 83], "exit": 82, "progress": 82, "scenario": 82, "mostli": 82, "span": 82, "not_evalu": 82, "face": 82, "onward": 82, "balanc": 82, "breif": 82, "lastli": [82, 83], "being": 82, "scale": 82, "v": 82, "trend": 83, "left": 83, "ones": 83, "place": 83, "spine": 83, "home": 83, "lead": 83, "incom": 83, "arrang": 83, "instead": 83, "crowd": 83, "manag": 83, "caus": 83, "overwhelm": 83, "draw": 83, "drag": 83, "togeth": 83, "relev": 83, "sens": 83, "sometim": 83, "similar": [83, 85], "situat": 84, "due": 84, "suitabl": 84, "choos": 84, "slightli": 84, "decreas": 85, "behavior": 85, "mac": 86}, "objects": {"deepcave": [[1, 0, 0, "-", "evaluators"], [10, 0, 0, "-", "layouts"], [13, 0, 0, "-", "plugins"], [29, 0, 0, "-", "runs"], [43, 0, 0, "-", "utils"]], "deepcave.evaluators": [[2, 0, 0, "-", "epm"], [7, 0, 0, "-", "fanova"], [8, 0, 0, "-", "footprint"], [9, 0, 0, "-", "lpi"]], "deepcave.evaluators.epm": [[3, 0, 0, "-", "fanova_forest"], [4, 0, 0, "-", "random_forest"], [5, 0, 0, "-", "random_forest_surrogate"], [6, 0, 0, "-", "utils"]], "deepcave.evaluators.epm.fanova_forest": [[3, 1, 1, "", "FanovaForest"]], "deepcave.evaluators.epm.fanova_forest.FanovaForest": [[3, 2, 1, "", "compute_marginals"]], "deepcave.evaluators.epm.random_forest": [[4, 1, 1, "", "RandomForest"], [4, 3, 1, "", "random"]], "deepcave.evaluators.epm.random_forest.RandomForest": [[4, 2, 1, "", "predict"], [4, 2, 1, "", "predict_marginalized"], [4, 2, 1, "", "train"]], "deepcave.evaluators.epm.random_forest_surrogate": [[5, 1, 1, "", "RandomForestSurrogate"]], "deepcave.evaluators.epm.random_forest_surrogate.RandomForestSurrogate": [[5, 2, 1, "", "predict"]], "deepcave.evaluators.epm.utils": [[6, 3, 1, "", "get_types"]], "deepcave.evaluators.fanova": [[7, 1, 1, "", "fANOVA"]], "deepcave.evaluators.fanova.fANOVA": [[7, 2, 1, "", "calculate"], [7, 2, 1, "", "get_importances"]], "deepcave.evaluators.lpi": [[9, 3, 1, "", "random"]], "deepcave.layouts": [[10, 1, 1, "", "Layout"], [11, 0, 0, "-", "not_found"], [12, 0, 0, "-", "sidebar"]], "deepcave.layouts.Layout": [[10, 2, 1, "", "__call__"]], "deepcave.layouts.not_found": [[11, 1, 1, "", "NotFoundLayout"]], "deepcave.layouts.not_found.NotFoundLayout": [[11, 2, 1, "", "__call__"]], "deepcave.layouts.sidebar": [[12, 1, 1, "", "SidebarLayout"]], "deepcave.layouts.sidebar.SidebarLayout": [[12, 2, 1, "", "__call__"]], "deepcave.plugins": [[13, 1, 1, "", "Plugin"], [14, 0, 0, "-", "budget"], [15, 0, 0, "-", "dynamic"], [16, 0, 0, "-", "hyperparameter"], [19, 0, 0, "-", "objective"], [24, 0, 0, "-", "static"], [25, 0, 0, "-", "summary"]], "deepcave.plugins.Plugin": [[13, 2, 1, "", "__call__"], [13, 4, 1, "", "activate_run_selection"], [13, 4, 1, "", "button_caption"], [13, 2, 1, "", "check_run_compatibility"], [13, 2, 1, "", "check_runs_compatibility"], [13, 4, 1, "", "description"], [13, 2, 1, "", "generate_inputs"], [13, 2, 1, "", "generate_outputs"], [13, 2, 1, "", "get_base_url"], [13, 2, 1, "", "get_filter_layout"], [13, 2, 1, "", "get_input_layout"], [13, 2, 1, "", "get_mpl_output_layout"], [13, 2, 1, "", "get_output_layout"], [13, 2, 1, "", "get_run_input_layout"], [13, 2, 1, "", "get_selected_runs"], [13, 4, 1, "", "help"], [13, 4, 1, "", "icon"], [13, 4, 1, "", "id"], [13, 2, 1, "", "load_dependency_inputs"], [13, 2, 1, "", "load_inputs"], [13, 2, 1, "", "load_mpl_outputs"], [13, 2, 1, "", "load_outputs"], [13, 2, 1, "", "load_run_inputs"], [13, 4, 1, "", "name"], [13, 2, 1, "", "process"], [13, 2, 1, "", "register_callbacks"], [13, 2, 1, "", "register_input"], [13, 2, 1, "", "register_output"]], "deepcave.plugins.dynamic": [[15, 1, 1, "", "DynamicPlugin"]], "deepcave.plugins.dynamic.DynamicPlugin": [[15, 2, 1, "", "__call__"], [15, 2, 1, "", "register_callbacks"]], "deepcave.plugins.hyperparameter": [[17, 0, 0, "-", "importances"], [18, 0, 0, "-", "pdp"]], "deepcave.plugins.hyperparameter.importances": [[17, 1, 1, "", "Importances"]], "deepcave.plugins.hyperparameter.importances.Importances": [[17, 2, 1, "", "get_filter_layout"], [17, 2, 1, "", "get_input_layout"], [17, 2, 1, "", "get_mpl_output_layout"], [17, 2, 1, "", "get_output_layout"], [17, 2, 1, "", "load_dependency_inputs"], [17, 2, 1, "", "load_inputs"], [17, 2, 1, "", "load_mpl_outputs"], [17, 2, 1, "", "load_outputs"], [17, 2, 1, "", "process"]], "deepcave.plugins.hyperparameter.pdp": [[18, 1, 1, "", "PartialDependencies"]], "deepcave.plugins.hyperparameter.pdp.PartialDependencies": [[18, 2, 1, "", "get_filter_layout"], [18, 2, 1, "", "get_input_layout"], [18, 2, 1, "", "get_output_layout"], [18, 2, 1, "", "load_dependency_inputs"], [18, 2, 1, "", "load_inputs"], [18, 2, 1, "", "load_outputs"], [18, 2, 1, "", "process"]], "deepcave.plugins.objective": [[20, 0, 0, "-", "configuration_cube"], [21, 0, 0, "-", "cost_over_time"], [22, 0, 0, "-", "parallel_coordinates"], [23, 0, 0, "-", "pareto_front"]], "deepcave.plugins.objective.configuration_cube": [[20, 1, 1, "", "ConfigurationCube"]], "deepcave.plugins.objective.configuration_cube.ConfigurationCube": [[20, 2, 1, "", "get_filter_layout"], [20, 2, 1, "", "get_input_layout"], [20, 2, 1, "", "get_output_layout"], [20, 2, 1, "", "load_dependency_inputs"], [20, 2, 1, "", "load_inputs"], [20, 2, 1, "", "load_outputs"], [20, 2, 1, "", "process"]], "deepcave.plugins.objective.cost_over_time": [[21, 1, 1, "", "CostOverTime"]], "deepcave.plugins.objective.cost_over_time.CostOverTime": [[21, 2, 1, "", "check_runs_compatibility"], [21, 2, 1, "", "get_filter_layout"], [21, 2, 1, "", "get_input_layout"], [21, 2, 1, "", "get_output_layout"], [21, 2, 1, "", "load_inputs"], [21, 2, 1, "", "load_outputs"], [21, 2, 1, "", "process"]], "deepcave.plugins.objective.parallel_coordinates": [[22, 1, 1, "", "ParallelCoordinates"]], "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates": [[22, 2, 1, "", "get_filter_layout"], [22, 2, 1, "", "get_input_layout"], [22, 2, 1, "", "get_output_layout"], [22, 2, 1, "", "load_dependency_inputs"], [22, 2, 1, "", "load_inputs"], [22, 2, 1, "", "load_outputs"], [22, 2, 1, "", "process"]], "deepcave.plugins.objective.pareto_front": [[23, 1, 1, "", "ParetoFront"]], "deepcave.plugins.objective.pareto_front.ParetoFront": [[23, 2, 1, "", "check_runs_compatibility"], [23, 2, 1, "", "get_filter_layout"], [23, 2, 1, "", "get_input_layout"], [23, 2, 1, "", "get_mpl_output_layout"], [23, 2, 1, "", "get_output_layout"], [23, 2, 1, "", "load_inputs"], [23, 2, 1, "", "load_mpl_outputs"], [23, 2, 1, "", "load_outputs"], [23, 2, 1, "", "process"]], "deepcave.plugins.static": [[24, 1, 1, "", "PluginState"], [24, 1, 1, "", "StaticPlugin"]], "deepcave.plugins.static.StaticPlugin": [[24, 2, 1, "", "__call__"], [24, 2, 1, "", "register_callbacks"]], "deepcave.plugins.summary": [[26, 0, 0, "-", "configurations"], [27, 0, 0, "-", "footprint"], [28, 0, 0, "-", "overview"]], "deepcave.plugins.summary.configurations": [[26, 1, 1, "", "Configurations"]], "deepcave.plugins.summary.configurations.Configurations": [[26, 2, 1, "", "get_input_layout"], [26, 2, 1, "", "get_link"], [26, 2, 1, "", "get_output_layout"], [26, 2, 1, "", "load_dependency_inputs"], [26, 2, 1, "", "load_inputs"], [26, 2, 1, "", "load_outputs"], [26, 2, 1, "", "process"]], "deepcave.plugins.summary.footprint": [[27, 1, 1, "", "FootPrint"]], "deepcave.plugins.summary.footprint.FootPrint": [[27, 2, 1, "", "get_filter_layout"], [27, 2, 1, "", "get_input_layout"], [27, 2, 1, "", "get_mpl_output_layout"], [27, 2, 1, "", "get_output_layout"], [27, 2, 1, "", "load_dependency_inputs"], [27, 2, 1, "", "load_inputs"], [27, 2, 1, "", "load_mpl_outputs"], [27, 2, 1, "", "load_outputs"], [27, 2, 1, "", "process"]], "deepcave.plugins.summary.overview": [[28, 1, 1, "", "Overview"]], "deepcave.plugins.summary.overview.Overview": [[28, 2, 1, "", "get_output_layout"], [28, 2, 1, "", "load_outputs"]], "deepcave.runs": [[29, 1, 1, "", "AbstractRun"], [29, 3, 1, "", "check_equality"], [30, 0, 0, "-", "converters"], [35, 0, 0, "-", "exceptions"], [36, 0, 0, "-", "group"], [37, 0, 0, "-", "handler"], [38, 0, 0, "-", "objective"], [39, 0, 0, "-", "recorder"], [40, 0, 0, "-", "run"], [41, 0, 0, "-", "status"], [42, 0, 0, "-", "trial"]], "deepcave.runs.AbstractRun": [[29, 2, 1, "", "encode_config"], [29, 2, 1, "", "get_all_costs"], [29, 2, 1, "", "get_budget"], [29, 2, 1, "", "get_budgets"], [29, 2, 1, "", "get_configs"], [29, 2, 1, "", "get_costs"], [29, 2, 1, "", "get_encoded_data"], [29, 2, 1, "", "get_highest_budget"], [29, 2, 1, "", "get_incumbent"], [29, 2, 1, "", "get_objective"], [29, 2, 1, "", "get_objective_id"], [29, 2, 1, "", "get_objective_name"], [29, 2, 1, "", "get_status"], [29, 2, 1, "", "get_trajectory"], [29, 5, 1, "", "hash"], [29, 5, 1, "", "id"], [29, 2, 1, "", "merge_costs"]], "deepcave.runs.converters": [[31, 0, 0, "-", "bohb"], [32, 0, 0, "-", "deepcave"], [33, 0, 0, "-", "smac3v1"], [34, 0, 0, "-", "smac3v2"]], "deepcave.runs.converters.bohb": [[31, 1, 1, "", "BOHBRun"]], "deepcave.runs.converters.bohb.BOHBRun": [[31, 2, 1, "", "from_path"], [31, 5, 1, "", "hash"]], "deepcave.runs.converters.deepcave": [[32, 1, 1, "", "DeepCAVERun"]], "deepcave.runs.converters.deepcave.DeepCAVERun": [[32, 2, 1, "", "from_path"], [32, 5, 1, "", "hash"]], "deepcave.runs.converters.smac3v1": [[33, 1, 1, "", "SMAC3v1Run"]], "deepcave.runs.converters.smac3v1.SMAC3v1Run": [[33, 2, 1, "", "from_path"], [33, 5, 1, "", "hash"]], "deepcave.runs.converters.smac3v2": [[34, 1, 1, "", "SMAC3v2Run"]], "deepcave.runs.converters.smac3v2.SMAC3v2Run": [[34, 2, 1, "", "from_path"], [34, 5, 1, "", "hash"]], "deepcave.runs.exceptions": [[35, 6, 1, "", "NotMergeableError"], [35, 6, 1, "", "NotValidRunError"]], "deepcave.runs.group": [[36, 1, 1, "", "Group"]], "deepcave.runs.group.Group": [[36, 2, 1, "", "get_trajectory"], [36, 5, 1, "", "hash"], [36, 5, 1, "", "id"]], "deepcave.runs.handler": [[37, 1, 1, "", "RunHandler"]], "deepcave.runs.handler.RunHandler": [[37, 2, 1, "", "add_run"], [37, 2, 1, "", "get_available_run_paths"], [37, 2, 1, "", "get_groups"], [37, 2, 1, "", "get_run"], [37, 2, 1, "", "get_run_name"], [37, 2, 1, "", "get_runs"], [37, 2, 1, "", "get_selected_run_names"], [37, 2, 1, "", "get_selected_run_paths"], [37, 2, 1, "", "get_working_directory"], [37, 2, 1, "", "remove_run"], [37, 2, 1, "", "set_working_directory"], [37, 2, 1, "", "update"], [37, 2, 1, "", "update_groups"], [37, 2, 1, "", "update_run"], [37, 2, 1, "", "update_runs"]], "deepcave.runs.objective": [[38, 1, 1, "", "Objective"]], "deepcave.runs.objective.Objective": [[38, 2, 1, "", "__post_init__"]], "deepcave.runs.run": [[40, 1, 1, "", "Run"]], "deepcave.runs.run.Run": [[40, 2, 1, "", "add"], [40, 2, 1, "", "exists"], [40, 2, 1, "", "from_path"], [40, 5, 1, "", "id"]], "deepcave.runs.status": [[41, 1, 1, "", "Status"]], "deepcave.runs.trial": [[42, 1, 1, "", "Trial"]], "deepcave.utils": [[44, 0, 0, "-", "cache"], [45, 0, 0, "-", "cast"], [46, 0, 0, "-", "compression"], [47, 0, 0, "-", "configs"], [48, 0, 0, "-", "configspace"], [49, 0, 0, "-", "dash"], [50, 0, 0, "-", "data_structures"], [51, 0, 0, "-", "docs"], [52, 0, 0, "-", "files"], [53, 0, 0, "-", "hash"], [54, 0, 0, "-", "layout"], [55, 0, 0, "-", "logs"], [56, 0, 0, "-", "notification"], [57, 0, 0, "-", "run_caches"], [58, 0, 0, "-", "styled_plot"], [59, 0, 0, "-", "styled_plotty"], [60, 0, 0, "-", "url"], [61, 0, 0, "-", "util"]], "deepcave.utils.cache": [[44, 1, 1, "", "Cache"]], "deepcave.utils.cache.Cache": [[44, 2, 1, "", "clear"], [44, 2, 1, "", "get"], [44, 2, 1, "", "has"], [44, 2, 1, "", "read"], [44, 2, 1, "", "set"], [44, 2, 1, "", "set_dict"], [44, 2, 1, "", "write"]], "deepcave.utils.compression": [[46, 3, 1, "", "deserialize"], [46, 3, 1, "", "serialize"]], "deepcave.utils.configs": [[47, 3, 1, "", "parse_config"]], "deepcave.utils.configspace": [[48, 3, 1, "", "sample_border_config"], [48, 3, 1, "", "sample_random_config"]], "deepcave.utils.dash": [[49, 3, 1, "", "flash"]], "deepcave.utils.data_structures": [[50, 3, 1, "", "update_dict"]], "deepcave.utils.layout": [[54, 3, 1, "", "get_select_options"]], "deepcave.utils.run_caches": [[57, 1, 1, "", "RunCaches"]], "deepcave.utils.run_caches.RunCaches": [[57, 2, 1, "", "clear"], [57, 2, 1, "", "clear_run"], [57, 2, 1, "", "get"], [57, 2, 1, "", "set"], [57, 2, 1, "", "update"]], "deepcave.utils.styled_plot": [[58, 1, 1, "", "StyledPlot"]], "deepcave.utils.styled_plot.StyledPlot": [[58, 2, 1, "", "__getattr__"]], "deepcave.utils.styled_plotty": [[59, 3, 1, "", "get_color"], [59, 3, 1, "", "get_discrete_heatmap"], [59, 3, 1, "", "get_hyperparameter_ticks"], [59, 3, 1, "", "get_hyperparameter_ticks_from_values"], [59, 3, 1, "", "hex_to_rgb"], [59, 3, 1, "", "prettify_label"], [59, 3, 1, "", "save_image"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"api": [0, 63, 65], "refer": 0, "deepcav": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "evalu": [1, 2, 3, 4, 5, 6, 7, 8, 9], "epm": [2, 3, 4, 5, 6], "fanova_forest": 3, "random_forest": 4, "random_forest_surrog": 5, "util": [6, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "fanova": 7, "footprint": [8, 27, 77], "lpi": 9, "layout": [10, 11, 12, 54], "not_found": 11, "sidebar": 12, "plugin": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 81], "budget": [14, 75], "dynam": 15, "hyperparamet": [16, 17, 18], "import": [17, 80], "pdp": 18, "object": [19, 20, 21, 22, 23, 38, 78, 82], "configuration_cub": 20, "cost_over_tim": 21, "parallel_coordin": 22, "pareto_front": 23, "static": 24, "summari": [25, 26, 27, 28], "configur": [26, 76, 77, 78, 82], "overview": [28, 78, 82], "run": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 68], "convert": [30, 31, 32, 33, 34, 62], "bohb": 31, "smac3v1": 33, "smac3v2": 34, "except": 35, "group": 36, "handler": 37, "record": [39, 65, 67, 68], "statu": 41, "trial": 42, "cach": 44, "cast": 45, "compress": 46, "config": 47, "configspac": 48, "dash": 49, "data_structur": 50, "doc": 51, "file": 52, "hash": 53, "log": 55, "notif": 56, "run_cach": 57, "styled_plot": 58, "styled_plotti": 59, "url": 60, "custom": [62, 81], "parallel": [64, 83], "coordin": [64, 83], "exampl": 65, "multi": [66, 69], "layer": [66, 69], "perceptron": [66, 69], "via": [66, 69], "sklearn": 66, "minim": 68, "pytorch": 69, "frequent": 70, "ask": 70, "question": 70, "get": 71, "start": 71, "glossari": 72, "home": 73, "featur": 73, "citat": 73, "instal": [74, 86], "redi": [74, 86], "server": [74, 86], "mac": 74, "relat": 74, "correl": 75, "option": [75, 83], "interpret": [75, 79], "cube": 76, "perform": 77, "plot": [77, 83], "coverag": 77, "code": 78, "cost": 79, "over": 79, "time": 79, "input": 79, "filter": 79, "structur": 81, "type": 81, "quick": 82, "inform": 82, "meta": 82, "status": 82, "space": 82, "us": 83, "pareto": 84, "front": 84, "partial": 85, "depend": 85}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"API References": [[0, "api-references"]], "deepcave.evaluators": [[1, "module-deepcave.evaluators"]], "deepcave.evaluators.epm": [[2, "module-deepcave.evaluators.epm"]], "deepcave.evaluators.epm.fanova_forest": [[3, "module-deepcave.evaluators.epm.fanova_forest"]], "deepcave.evaluators.epm.random_forest": [[4, "module-deepcave.evaluators.epm.random_forest"]], "deepcave.evaluators.epm.random_forest_surrogate": [[5, "module-deepcave.evaluators.epm.random_forest_surrogate"]], "deepcave.evaluators.epm.utils": [[6, "module-deepcave.evaluators.epm.utils"]], "deepcave.evaluators.fanova": [[7, "module-deepcave.evaluators.fanova"]], "deepcave.evaluators.footprint": [[8, "module-deepcave.evaluators.footprint"]], "deepcave.evaluators.lpi": [[9, "module-deepcave.evaluators.lpi"]], "deepcave.layouts": [[10, "module-deepcave.layouts"]], "deepcave.layouts.not_found": [[11, "module-deepcave.layouts.not_found"]], "deepcave.layouts.sidebar": [[12, "module-deepcave.layouts.sidebar"]], "deepcave.plugins": [[13, "module-deepcave.plugins"]], "deepcave.plugins.budget": [[14, "module-deepcave.plugins.budget"]], "deepcave.plugins.dynamic": [[15, "module-deepcave.plugins.dynamic"]], "deepcave.plugins.hyperparameter": [[16, "module-deepcave.plugins.hyperparameter"]], "deepcave.plugins.hyperparameter.importances": [[17, "module-deepcave.plugins.hyperparameter.importances"]], "deepcave.plugins.hyperparameter.pdp": [[18, "module-deepcave.plugins.hyperparameter.pdp"]], "deepcave.plugins.objective": [[19, "module-deepcave.plugins.objective"]], "deepcave.plugins.objective.configuration_cube": [[20, "module-deepcave.plugins.objective.configuration_cube"]], "deepcave.plugins.objective.cost_over_time": [[21, "module-deepcave.plugins.objective.cost_over_time"]], "deepcave.plugins.objective.parallel_coordinates": [[22, "module-deepcave.plugins.objective.parallel_coordinates"]], "deepcave.plugins.objective.pareto_front": [[23, "module-deepcave.plugins.objective.pareto_front"]], "deepcave.plugins.static": [[24, "module-deepcave.plugins.static"]], "deepcave.plugins.summary": [[25, "module-deepcave.plugins.summary"]], "deepcave.plugins.summary.configurations": [[26, "module-deepcave.plugins.summary.configurations"]], "deepcave.plugins.summary.footprint": [[27, "module-deepcave.plugins.summary.footprint"]], "deepcave.plugins.summary.overview": [[28, "module-deepcave.plugins.summary.overview"]], "deepcave.runs": [[29, "module-deepcave.runs"]], "deepcave.runs.converters": [[30, "module-deepcave.runs.converters"]], "deepcave.runs.converters.bohb": [[31, "module-deepcave.runs.converters.bohb"]], "deepcave.runs.converters.deepcave": [[32, "module-deepcave.runs.converters.deepcave"]], "deepcave.runs.converters.smac3v1": [[33, "module-deepcave.runs.converters.smac3v1"]], "deepcave.runs.converters.smac3v2": [[34, "module-deepcave.runs.converters.smac3v2"]], "deepcave.runs.exceptions": [[35, "module-deepcave.runs.exceptions"]], "deepcave.runs.group": [[36, "module-deepcave.runs.group"]], "deepcave.runs.handler": [[37, "module-deepcave.runs.handler"]], "deepcave.runs.objective": [[38, "module-deepcave.runs.objective"]], "deepcave.runs.recorder": [[39, "module-deepcave.runs.recorder"]], "deepcave.runs.run": [[40, "module-deepcave.runs.run"]], "deepcave.runs.status": [[41, "module-deepcave.runs.status"]], "deepcave.runs.trial": [[42, "module-deepcave.runs.trial"]], "deepcave.utils": [[43, "module-deepcave.utils"]], "deepcave.utils.cache": [[44, "module-deepcave.utils.cache"]], "deepcave.utils.cast": [[45, "module-deepcave.utils.cast"]], "deepcave.utils.compression": [[46, "module-deepcave.utils.compression"]], "deepcave.utils.configs": [[47, "module-deepcave.utils.configs"]], "deepcave.utils.configspace": [[48, "module-deepcave.utils.configspace"]], "deepcave.utils.dash": [[49, "module-deepcave.utils.dash"]], "deepcave.utils.data_structures": [[50, "module-deepcave.utils.data_structures"]], "deepcave.utils.docs": [[51, "module-deepcave.utils.docs"]], "deepcave.utils.files": [[52, "module-deepcave.utils.files"]], "deepcave.utils.hash": [[53, "module-deepcave.utils.hash"]], "deepcave.utils.layout": [[54, "module-deepcave.utils.layout"]], "deepcave.utils.logs": [[55, "module-deepcave.utils.logs"]], "deepcave.utils.notification": [[56, "module-deepcave.utils.notification"]], "deepcave.utils.run_caches": [[57, "module-deepcave.utils.run_caches"]], "deepcave.utils.styled_plot": [[58, "module-deepcave.utils.styled_plot"]], "deepcave.utils.styled_plotty": [[59, "module-deepcave.utils.styled_plotty"]], "deepcave.utils.url": [[60, "module-deepcave.utils.url"]], "deepcave.utils.util": [[61, "module-deepcave.utils.util"]], "Converters": [[62, "converters"]], "Custom Converter": [[62, "custom-converter"]], "API": [[63, "api"], [65, "api"]], "Parallel Coordinates": [[64, "parallel-coordinates"], [83, "parallel-coordinates"]], "Examples": [[65, "examples"]], "Record": [[65, "record"], [67, "record"]], "Multi-Layer Perceptron via Sklearn": [[66, "multi-layer-perceptron-via-sklearn"]], "Record Minimal Run": [[68, "record-minimal-run"]], "Multi-Layer Perceptron via PyTorch": [[69, "multi-layer-perceptron-via-pytorch"]], "Frequently Asked Questions": [[70, "frequently-asked-questions"]], "Getting Started": [[71, "getting-started"]], "Glossary": [[72, "glossary"]], "Home": [[73, "home"]], "Features": [[73, "features"]], "Citation": [[73, "citation"]], "Installation": [[74, "installation"]], "Redis Server": [[74, "id1"]], "Mac Related": [[74, "mac-related"]], "Budget Correlation": [[75, "budget-correlation"]], "Options": [[75, "options"], [83, "options"]], "Correlation Interpretation": [[75, "correlation-interpretation"]], "Configuration Cube": [[76, "configuration-cube"]], "Configuration Footprint": [[77, "configuration-footprint"]], "Performance plot": [[77, "performance-plot"]], "Coverage plot": [[77, "coverage-plot"]], "Configurations": [[78, "configurations"]], "Overview": [[78, "overview"], [82, "overview"]], "Objectives": [[78, "objectives"], [82, "objectives"]], "Configuration": [[78, "configuration"]], "Code": [[78, "code"]], "Cost Over Time": [[79, "cost-over-time"]], "Inputs and Filters": [[79, "inputs-and-filters"]], "Interpretation": [[79, "interpretation"]], "Importances": [[80, "importances"]], "Plugins": [[81, "plugins"]], "Plugin Structure": [[81, "plugin-structure"]], "Plugin Types": [[81, "plugin-types"]], "Custom Plugin": [[81, "custom-plugin"]], "Quick Information": [[82, "quick-information"]], "Meta": [[82, "meta"]], "Statuses": [[82, "statuses"]], "Configuration Space": [[82, "configuration-space"]], "Using the plot": [[83, "using-the-plot"]], "Pareto Front": [[84, "pareto-front"]], "Partial Dependencies": [[85, "partial-dependencies"]], "Install Redis Server": [[86, "install-redis-server"]]}, "indexentries": {"deepcave.evaluators": [[1, "module-deepcave.evaluators"]], "module": [[1, "module-deepcave.evaluators"], [2, "module-deepcave.evaluators.epm"], [3, "module-deepcave.evaluators.epm.fanova_forest"], [4, "module-deepcave.evaluators.epm.random_forest"], [5, "module-deepcave.evaluators.epm.random_forest_surrogate"], [6, "module-deepcave.evaluators.epm.utils"], [7, "module-deepcave.evaluators.fanova"], [8, "module-deepcave.evaluators.footprint"], [9, "module-deepcave.evaluators.lpi"], [10, "module-deepcave.layouts"], [11, "module-deepcave.layouts.not_found"], [12, "module-deepcave.layouts.sidebar"], [13, "module-deepcave.plugins"], [14, "module-deepcave.plugins.budget"], [15, "module-deepcave.plugins.dynamic"], [16, "module-deepcave.plugins.hyperparameter"], [17, "module-deepcave.plugins.hyperparameter.importances"], [18, "module-deepcave.plugins.hyperparameter.pdp"], [19, "module-deepcave.plugins.objective"], [20, "module-deepcave.plugins.objective.configuration_cube"], [21, "module-deepcave.plugins.objective.cost_over_time"], [22, "module-deepcave.plugins.objective.parallel_coordinates"], [23, "module-deepcave.plugins.objective.pareto_front"], [24, "module-deepcave.plugins.static"], [25, "module-deepcave.plugins.summary"], [26, "module-deepcave.plugins.summary.configurations"], [27, "module-deepcave.plugins.summary.footprint"], [28, "module-deepcave.plugins.summary.overview"], [29, "module-deepcave.runs"], [30, "module-deepcave.runs.converters"], [31, "module-deepcave.runs.converters.bohb"], [32, "module-deepcave.runs.converters.deepcave"], [33, "module-deepcave.runs.converters.smac3v1"], [34, "module-deepcave.runs.converters.smac3v2"], [35, "module-deepcave.runs.exceptions"], [36, "module-deepcave.runs.group"], [37, "module-deepcave.runs.handler"], [38, "module-deepcave.runs.objective"], [39, "module-deepcave.runs.recorder"], [40, "module-deepcave.runs.run"], [41, "module-deepcave.runs.status"], [42, "module-deepcave.runs.trial"], [43, "module-deepcave.utils"], [44, "module-deepcave.utils.cache"], [45, "module-deepcave.utils.cast"], [46, "module-deepcave.utils.compression"], [47, "module-deepcave.utils.configs"], [48, "module-deepcave.utils.configspace"], [49, "module-deepcave.utils.dash"], [50, "module-deepcave.utils.data_structures"], [51, "module-deepcave.utils.docs"], [52, "module-deepcave.utils.files"], [53, "module-deepcave.utils.hash"], [54, "module-deepcave.utils.layout"], [55, "module-deepcave.utils.logs"], [56, "module-deepcave.utils.notification"], [57, "module-deepcave.utils.run_caches"], [58, "module-deepcave.utils.styled_plot"], [59, "module-deepcave.utils.styled_plotty"], [60, "module-deepcave.utils.url"], [61, "module-deepcave.utils.util"]], "deepcave.evaluators.epm": [[2, "module-deepcave.evaluators.epm"]], "fanovaforest (class in deepcave.evaluators.epm.fanova_forest)": [[3, "deepcave.evaluators.epm.fanova_forest.FanovaForest"]], "compute_marginals() (deepcave.evaluators.epm.fanova_forest.fanovaforest method)": [[3, "deepcave.evaluators.epm.fanova_forest.FanovaForest.compute_marginals"]], "deepcave.evaluators.epm.fanova_forest": [[3, "module-deepcave.evaluators.epm.fanova_forest"]], "randomforest (class in deepcave.evaluators.epm.random_forest)": [[4, "deepcave.evaluators.epm.random_forest.RandomForest"]], "deepcave.evaluators.epm.random_forest": [[4, "module-deepcave.evaluators.epm.random_forest"]], "predict() (deepcave.evaluators.epm.random_forest.randomforest method)": [[4, "deepcave.evaluators.epm.random_forest.RandomForest.predict"]], "predict_marginalized() (deepcave.evaluators.epm.random_forest.randomforest method)": [[4, "deepcave.evaluators.epm.random_forest.RandomForest.predict_marginalized"]], "random() (in module deepcave.evaluators.epm.random_forest)": [[4, "deepcave.evaluators.epm.random_forest.random"]], "train() (deepcave.evaluators.epm.random_forest.randomforest method)": [[4, "deepcave.evaluators.epm.random_forest.RandomForest.train"]], "randomforestsurrogate (class in deepcave.evaluators.epm.random_forest_surrogate)": [[5, "deepcave.evaluators.epm.random_forest_surrogate.RandomForestSurrogate"]], "deepcave.evaluators.epm.random_forest_surrogate": [[5, "module-deepcave.evaluators.epm.random_forest_surrogate"]], "predict() (deepcave.evaluators.epm.random_forest_surrogate.randomforestsurrogate method)": [[5, "deepcave.evaluators.epm.random_forest_surrogate.RandomForestSurrogate.predict"]], "deepcave.evaluators.epm.utils": [[6, "module-deepcave.evaluators.epm.utils"]], "get_types() (in module deepcave.evaluators.epm.utils)": [[6, "deepcave.evaluators.epm.utils.get_types"]], "calculate() (deepcave.evaluators.fanova.fanova method)": [[7, "deepcave.evaluators.fanova.fANOVA.calculate"]], "deepcave.evaluators.fanova": [[7, "module-deepcave.evaluators.fanova"]], "fanova (class in deepcave.evaluators.fanova)": [[7, "deepcave.evaluators.fanova.fANOVA"]], "get_importances() (deepcave.evaluators.fanova.fanova method)": [[7, "deepcave.evaluators.fanova.fANOVA.get_importances"]], "deepcave.evaluators.footprint": [[8, "module-deepcave.evaluators.footprint"]], "deepcave.evaluators.lpi": [[9, "module-deepcave.evaluators.lpi"]], "random() (in module deepcave.evaluators.lpi)": [[9, "deepcave.evaluators.lpi.random"]], "layout (class in deepcave.layouts)": [[10, "deepcave.layouts.Layout"]], "__call__() (deepcave.layouts.layout method)": [[10, "deepcave.layouts.Layout.__call__"]], "deepcave.layouts": [[10, "module-deepcave.layouts"]], "notfoundlayout (class in deepcave.layouts.not_found)": [[11, "deepcave.layouts.not_found.NotFoundLayout"]], "__call__() (deepcave.layouts.not_found.notfoundlayout method)": [[11, "deepcave.layouts.not_found.NotFoundLayout.__call__"]], "deepcave.layouts.not_found": [[11, "module-deepcave.layouts.not_found"]], "sidebarlayout (class in deepcave.layouts.sidebar)": [[12, "deepcave.layouts.sidebar.SidebarLayout"]], "__call__() (deepcave.layouts.sidebar.sidebarlayout method)": [[12, "deepcave.layouts.sidebar.SidebarLayout.__call__"]], "deepcave.layouts.sidebar": [[12, "module-deepcave.layouts.sidebar"]], "plugin (class in deepcave.plugins)": [[13, "deepcave.plugins.Plugin"]], "__call__() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.__call__"]], "activate_run_selection (deepcave.plugins.plugin attribute)": [[13, "deepcave.plugins.Plugin.activate_run_selection"]], "button_caption (deepcave.plugins.plugin attribute)": [[13, "deepcave.plugins.Plugin.button_caption"]], "check_run_compatibility() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.check_run_compatibility"]], "check_runs_compatibility() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.check_runs_compatibility"]], "deepcave.plugins": [[13, "module-deepcave.plugins"]], "description (deepcave.plugins.plugin attribute)": [[13, "deepcave.plugins.Plugin.description"]], "generate_inputs() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.generate_inputs"]], "generate_outputs() (deepcave.plugins.plugin class method)": [[13, "deepcave.plugins.Plugin.generate_outputs"]], "get_base_url() (deepcave.plugins.plugin class method)": [[13, "deepcave.plugins.Plugin.get_base_url"]], "get_filter_layout() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.get_filter_layout"]], "get_input_layout() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.get_input_layout"]], "get_mpl_output_layout() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.get_mpl_output_layout"]], "get_output_layout() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.get_output_layout"]], "get_run_input_layout() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.get_run_input_layout"]], "get_selected_runs() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.get_selected_runs"]], "help (deepcave.plugins.plugin attribute)": [[13, "deepcave.plugins.Plugin.help"]], "icon (deepcave.plugins.plugin attribute)": [[13, "deepcave.plugins.Plugin.icon"]], "id (deepcave.plugins.plugin attribute)": [[13, "deepcave.plugins.Plugin.id"]], "load_dependency_inputs() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.load_inputs"]], "load_mpl_outputs() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.load_mpl_outputs"]], "load_outputs() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.load_outputs"]], "load_run_inputs() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.load_run_inputs"]], "name (deepcave.plugins.plugin attribute)": [[13, "deepcave.plugins.Plugin.name"]], "process() (deepcave.plugins.plugin static method)": [[13, "deepcave.plugins.Plugin.process"]], "register_callbacks() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.register_callbacks"]], "register_input() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.register_input"]], "register_output() (deepcave.plugins.plugin method)": [[13, "deepcave.plugins.Plugin.register_output"]], "deepcave.plugins.budget": [[14, "module-deepcave.plugins.budget"]], "dynamicplugin (class in deepcave.plugins.dynamic)": [[15, "deepcave.plugins.dynamic.DynamicPlugin"]], "__call__() (deepcave.plugins.dynamic.dynamicplugin method)": [[15, "deepcave.plugins.dynamic.DynamicPlugin.__call__"]], "deepcave.plugins.dynamic": [[15, "module-deepcave.plugins.dynamic"]], "register_callbacks() (deepcave.plugins.dynamic.dynamicplugin method)": [[15, "deepcave.plugins.dynamic.DynamicPlugin.register_callbacks"]], "deepcave.plugins.hyperparameter": [[16, "module-deepcave.plugins.hyperparameter"]], "importances (class in deepcave.plugins.hyperparameter.importances)": [[17, "deepcave.plugins.hyperparameter.importances.Importances"]], "deepcave.plugins.hyperparameter.importances": [[17, "module-deepcave.plugins.hyperparameter.importances"]], "get_filter_layout() (deepcave.plugins.hyperparameter.importances.importances static method)": [[17, "deepcave.plugins.hyperparameter.importances.Importances.get_filter_layout"]], "get_input_layout() (deepcave.plugins.hyperparameter.importances.importances static method)": [[17, "deepcave.plugins.hyperparameter.importances.Importances.get_input_layout"]], "get_mpl_output_layout() (deepcave.plugins.hyperparameter.importances.importances static method)": [[17, "deepcave.plugins.hyperparameter.importances.Importances.get_mpl_output_layout"]], "get_output_layout() (deepcave.plugins.hyperparameter.importances.importances static method)": [[17, "deepcave.plugins.hyperparameter.importances.Importances.get_output_layout"]], "load_dependency_inputs() (deepcave.plugins.hyperparameter.importances.importances method)": [[17, "deepcave.plugins.hyperparameter.importances.Importances.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.hyperparameter.importances.importances method)": [[17, "deepcave.plugins.hyperparameter.importances.Importances.load_inputs"]], "load_mpl_outputs() (deepcave.plugins.hyperparameter.importances.importances static method)": [[17, "deepcave.plugins.hyperparameter.importances.Importances.load_mpl_outputs"]], "load_outputs() (deepcave.plugins.hyperparameter.importances.importances static method)": [[17, "deepcave.plugins.hyperparameter.importances.Importances.load_outputs"]], "process() (deepcave.plugins.hyperparameter.importances.importances static method)": [[17, "deepcave.plugins.hyperparameter.importances.Importances.process"]], "partialdependencies (class in deepcave.plugins.hyperparameter.pdp)": [[18, "deepcave.plugins.hyperparameter.pdp.PartialDependencies"]], "deepcave.plugins.hyperparameter.pdp": [[18, "module-deepcave.plugins.hyperparameter.pdp"]], "get_filter_layout() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[18, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.get_filter_layout"]], "get_input_layout() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[18, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.get_input_layout"]], "get_output_layout() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[18, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.get_output_layout"]], "load_dependency_inputs() (deepcave.plugins.hyperparameter.pdp.partialdependencies method)": [[18, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.hyperparameter.pdp.partialdependencies method)": [[18, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.load_inputs"]], "load_outputs() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[18, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.load_outputs"]], "process() (deepcave.plugins.hyperparameter.pdp.partialdependencies static method)": [[18, "deepcave.plugins.hyperparameter.pdp.PartialDependencies.process"]], "deepcave.plugins.objective": [[19, "module-deepcave.plugins.objective"]], "configurationcube (class in deepcave.plugins.objective.configuration_cube)": [[20, "deepcave.plugins.objective.configuration_cube.ConfigurationCube"]], "deepcave.plugins.objective.configuration_cube": [[20, "module-deepcave.plugins.objective.configuration_cube"]], "get_filter_layout() (deepcave.plugins.objective.configuration_cube.configurationcube static method)": [[20, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.get_filter_layout"]], "get_input_layout() (deepcave.plugins.objective.configuration_cube.configurationcube static method)": [[20, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.get_input_layout"]], "get_output_layout() (deepcave.plugins.objective.configuration_cube.configurationcube static method)": [[20, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.get_output_layout"]], "load_dependency_inputs() (deepcave.plugins.objective.configuration_cube.configurationcube method)": [[20, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.objective.configuration_cube.configurationcube method)": [[20, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.load_inputs"]], "load_outputs() (deepcave.plugins.objective.configuration_cube.configurationcube static method)": [[20, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.load_outputs"]], "process() (deepcave.plugins.objective.configuration_cube.configurationcube static method)": [[20, "deepcave.plugins.objective.configuration_cube.ConfigurationCube.process"]], "costovertime (class in deepcave.plugins.objective.cost_over_time)": [[21, "deepcave.plugins.objective.cost_over_time.CostOverTime"]], "check_runs_compatibility() (deepcave.plugins.objective.cost_over_time.costovertime method)": [[21, "deepcave.plugins.objective.cost_over_time.CostOverTime.check_runs_compatibility"]], "deepcave.plugins.objective.cost_over_time": [[21, "module-deepcave.plugins.objective.cost_over_time"]], "get_filter_layout() (deepcave.plugins.objective.cost_over_time.costovertime static method)": [[21, "deepcave.plugins.objective.cost_over_time.CostOverTime.get_filter_layout"]], "get_input_layout() (deepcave.plugins.objective.cost_over_time.costovertime static method)": [[21, "deepcave.plugins.objective.cost_over_time.CostOverTime.get_input_layout"]], "get_output_layout() (deepcave.plugins.objective.cost_over_time.costovertime static method)": [[21, "deepcave.plugins.objective.cost_over_time.CostOverTime.get_output_layout"]], "load_inputs() (deepcave.plugins.objective.cost_over_time.costovertime method)": [[21, "deepcave.plugins.objective.cost_over_time.CostOverTime.load_inputs"]], "load_outputs() (deepcave.plugins.objective.cost_over_time.costovertime static method)": [[21, "deepcave.plugins.objective.cost_over_time.CostOverTime.load_outputs"]], "process() (deepcave.plugins.objective.cost_over_time.costovertime static method)": [[21, "deepcave.plugins.objective.cost_over_time.CostOverTime.process"]], "parallelcoordinates (class in deepcave.plugins.objective.parallel_coordinates)": [[22, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates"]], "deepcave.plugins.objective.parallel_coordinates": [[22, "module-deepcave.plugins.objective.parallel_coordinates"]], "get_filter_layout() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates static method)": [[22, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.get_filter_layout"]], "get_input_layout() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates static method)": [[22, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.get_input_layout"]], "get_output_layout() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates static method)": [[22, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.get_output_layout"]], "load_dependency_inputs() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates method)": [[22, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates method)": [[22, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.load_inputs"]], "load_outputs() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates static method)": [[22, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.load_outputs"]], "process() (deepcave.plugins.objective.parallel_coordinates.parallelcoordinates static method)": [[22, "deepcave.plugins.objective.parallel_coordinates.ParallelCoordinates.process"]], "paretofront (class in deepcave.plugins.objective.pareto_front)": [[23, "deepcave.plugins.objective.pareto_front.ParetoFront"]], "check_runs_compatibility() (deepcave.plugins.objective.pareto_front.paretofront method)": [[23, "deepcave.plugins.objective.pareto_front.ParetoFront.check_runs_compatibility"]], "deepcave.plugins.objective.pareto_front": [[23, "module-deepcave.plugins.objective.pareto_front"]], "get_filter_layout() (deepcave.plugins.objective.pareto_front.paretofront static method)": [[23, "deepcave.plugins.objective.pareto_front.ParetoFront.get_filter_layout"]], "get_input_layout() (deepcave.plugins.objective.pareto_front.paretofront static method)": [[23, "deepcave.plugins.objective.pareto_front.ParetoFront.get_input_layout"]], "get_mpl_output_layout() (deepcave.plugins.objective.pareto_front.paretofront static method)": [[23, "deepcave.plugins.objective.pareto_front.ParetoFront.get_mpl_output_layout"]], "get_output_layout() (deepcave.plugins.objective.pareto_front.paretofront static method)": [[23, "deepcave.plugins.objective.pareto_front.ParetoFront.get_output_layout"]], "load_inputs() (deepcave.plugins.objective.pareto_front.paretofront method)": [[23, "deepcave.plugins.objective.pareto_front.ParetoFront.load_inputs"]], "load_mpl_outputs() (deepcave.plugins.objective.pareto_front.paretofront static method)": [[23, "deepcave.plugins.objective.pareto_front.ParetoFront.load_mpl_outputs"]], "load_outputs() (deepcave.plugins.objective.pareto_front.paretofront static method)": [[23, "deepcave.plugins.objective.pareto_front.ParetoFront.load_outputs"]], "process() (deepcave.plugins.objective.pareto_front.paretofront static method)": [[23, "deepcave.plugins.objective.pareto_front.ParetoFront.process"]], "pluginstate (class in deepcave.plugins.static)": [[24, "deepcave.plugins.static.PluginState"]], "staticplugin (class in deepcave.plugins.static)": [[24, "deepcave.plugins.static.StaticPlugin"]], "__call__() (deepcave.plugins.static.staticplugin method)": [[24, "deepcave.plugins.static.StaticPlugin.__call__"]], "deepcave.plugins.static": [[24, "module-deepcave.plugins.static"]], "register_callbacks() (deepcave.plugins.static.staticplugin method)": [[24, "deepcave.plugins.static.StaticPlugin.register_callbacks"]], "deepcave.plugins.summary": [[25, "module-deepcave.plugins.summary"]], "configurations (class in deepcave.plugins.summary.configurations)": [[26, "deepcave.plugins.summary.configurations.Configurations"]], "deepcave.plugins.summary.configurations": [[26, "module-deepcave.plugins.summary.configurations"]], "get_input_layout() (deepcave.plugins.summary.configurations.configurations static method)": [[26, "deepcave.plugins.summary.configurations.Configurations.get_input_layout"]], "get_link() (deepcave.plugins.summary.configurations.configurations static method)": [[26, "deepcave.plugins.summary.configurations.Configurations.get_link"]], "get_output_layout() (deepcave.plugins.summary.configurations.configurations static method)": [[26, "deepcave.plugins.summary.configurations.Configurations.get_output_layout"]], "load_dependency_inputs() (deepcave.plugins.summary.configurations.configurations method)": [[26, "deepcave.plugins.summary.configurations.Configurations.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.summary.configurations.configurations method)": [[26, "deepcave.plugins.summary.configurations.Configurations.load_inputs"]], "load_outputs() (deepcave.plugins.summary.configurations.configurations static method)": [[26, "deepcave.plugins.summary.configurations.Configurations.load_outputs"]], "process() (deepcave.plugins.summary.configurations.configurations static method)": [[26, "deepcave.plugins.summary.configurations.Configurations.process"]], "footprint (class in deepcave.plugins.summary.footprint)": [[27, "deepcave.plugins.summary.footprint.FootPrint"]], "deepcave.plugins.summary.footprint": [[27, "module-deepcave.plugins.summary.footprint"]], "get_filter_layout() (deepcave.plugins.summary.footprint.footprint static method)": [[27, "deepcave.plugins.summary.footprint.FootPrint.get_filter_layout"]], "get_input_layout() (deepcave.plugins.summary.footprint.footprint static method)": [[27, "deepcave.plugins.summary.footprint.FootPrint.get_input_layout"]], "get_mpl_output_layout() (deepcave.plugins.summary.footprint.footprint static method)": [[27, "deepcave.plugins.summary.footprint.FootPrint.get_mpl_output_layout"]], "get_output_layout() (deepcave.plugins.summary.footprint.footprint static method)": [[27, "deepcave.plugins.summary.footprint.FootPrint.get_output_layout"]], "load_dependency_inputs() (deepcave.plugins.summary.footprint.footprint method)": [[27, "deepcave.plugins.summary.footprint.FootPrint.load_dependency_inputs"]], "load_inputs() (deepcave.plugins.summary.footprint.footprint method)": [[27, "deepcave.plugins.summary.footprint.FootPrint.load_inputs"]], "load_mpl_outputs() (deepcave.plugins.summary.footprint.footprint static method)": [[27, "deepcave.plugins.summary.footprint.FootPrint.load_mpl_outputs"]], "load_outputs() (deepcave.plugins.summary.footprint.footprint static method)": [[27, "deepcave.plugins.summary.footprint.FootPrint.load_outputs"]], "process() (deepcave.plugins.summary.footprint.footprint static method)": [[27, "deepcave.plugins.summary.footprint.FootPrint.process"]], "overview (class in deepcave.plugins.summary.overview)": [[28, "deepcave.plugins.summary.overview.Overview"]], "deepcave.plugins.summary.overview": [[28, "module-deepcave.plugins.summary.overview"]], "get_output_layout() (deepcave.plugins.summary.overview.overview static method)": [[28, "deepcave.plugins.summary.overview.Overview.get_output_layout"]], "load_outputs() (deepcave.plugins.summary.overview.overview static method)": [[28, "deepcave.plugins.summary.overview.Overview.load_outputs"]], "abstractrun (class in deepcave.runs)": [[29, "deepcave.runs.AbstractRun"]], "check_equality() (in module deepcave.runs)": [[29, "deepcave.runs.check_equality"]], "deepcave.runs": [[29, "module-deepcave.runs"]], "encode_config() (deepcave.runs.abstractrun method)": [[29, "deepcave.runs.AbstractRun.encode_config"]], "get_all_costs() (deepcave.runs.abstractrun method)": [[29, "deepcave.runs.AbstractRun.get_all_costs"]], "get_budget() (deepcave.runs.abstractrun method)": [[29, "deepcave.runs.AbstractRun.get_budget"]], "get_budgets() (deepcave.runs.abstractrun method)": [[29, "deepcave.runs.AbstractRun.get_budgets"]], "get_configs() (deepcave.runs.abstractrun method)": [[29, "deepcave.runs.AbstractRun.get_configs"]], "get_costs() (deepcave.runs.abstractrun method)": [[29, "deepcave.runs.AbstractRun.get_costs"]], "get_encoded_data() (deepcave.runs.abstractrun method)": [[29, "deepcave.runs.AbstractRun.get_encoded_data"]], "get_highest_budget() (deepcave.runs.abstractrun method)": [[29, "deepcave.runs.AbstractRun.get_highest_budget"]], "get_incumbent() (deepcave.runs.abstractrun method)": [[29, "deepcave.runs.AbstractRun.get_incumbent"]], "get_objective() (deepcave.runs.abstractrun method)": [[29, "deepcave.runs.AbstractRun.get_objective"]], "get_objective_id() (deepcave.runs.abstractrun method)": [[29, "deepcave.runs.AbstractRun.get_objective_id"]], "get_objective_name() (deepcave.runs.abstractrun method)": [[29, "deepcave.runs.AbstractRun.get_objective_name"]], "get_status() (deepcave.runs.abstractrun method)": [[29, "deepcave.runs.AbstractRun.get_status"]], "get_trajectory() (deepcave.runs.abstractrun method)": [[29, "deepcave.runs.AbstractRun.get_trajectory"]], "hash (deepcave.runs.abstractrun property)": [[29, "deepcave.runs.AbstractRun.hash"]], "id (deepcave.runs.abstractrun property)": [[29, "deepcave.runs.AbstractRun.id"]], "merge_costs() (deepcave.runs.abstractrun method)": [[29, "deepcave.runs.AbstractRun.merge_costs"]], "deepcave.runs.converters": [[30, "module-deepcave.runs.converters"]], "bohbrun (class in deepcave.runs.converters.bohb)": [[31, "deepcave.runs.converters.bohb.BOHBRun"]], "deepcave.runs.converters.bohb": [[31, "module-deepcave.runs.converters.bohb"]], "from_path() (deepcave.runs.converters.bohb.bohbrun class method)": [[31, "deepcave.runs.converters.bohb.BOHBRun.from_path"]], "hash (deepcave.runs.converters.bohb.bohbrun property)": [[31, "deepcave.runs.converters.bohb.BOHBRun.hash"]], "deepcaverun (class in deepcave.runs.converters.deepcave)": [[32, "deepcave.runs.converters.deepcave.DeepCAVERun"]], "deepcave.runs.converters.deepcave": [[32, "module-deepcave.runs.converters.deepcave"]], "from_path() (deepcave.runs.converters.deepcave.deepcaverun class method)": [[32, "deepcave.runs.converters.deepcave.DeepCAVERun.from_path"]], "hash (deepcave.runs.converters.deepcave.deepcaverun property)": [[32, "deepcave.runs.converters.deepcave.DeepCAVERun.hash"]], "smac3v1run (class in deepcave.runs.converters.smac3v1)": [[33, "deepcave.runs.converters.smac3v1.SMAC3v1Run"]], "deepcave.runs.converters.smac3v1": [[33, "module-deepcave.runs.converters.smac3v1"]], "from_path() (deepcave.runs.converters.smac3v1.smac3v1run class method)": [[33, "deepcave.runs.converters.smac3v1.SMAC3v1Run.from_path"]], "hash (deepcave.runs.converters.smac3v1.smac3v1run property)": [[33, "deepcave.runs.converters.smac3v1.SMAC3v1Run.hash"]], "smac3v2run (class in deepcave.runs.converters.smac3v2)": [[34, "deepcave.runs.converters.smac3v2.SMAC3v2Run"]], "deepcave.runs.converters.smac3v2": [[34, "module-deepcave.runs.converters.smac3v2"]], "from_path() (deepcave.runs.converters.smac3v2.smac3v2run class method)": [[34, "deepcave.runs.converters.smac3v2.SMAC3v2Run.from_path"]], "hash (deepcave.runs.converters.smac3v2.smac3v2run property)": [[34, "deepcave.runs.converters.smac3v2.SMAC3v2Run.hash"]], "notmergeableerror": [[35, "deepcave.runs.exceptions.NotMergeableError"]], "notvalidrunerror": [[35, "deepcave.runs.exceptions.NotValidRunError"]], "deepcave.runs.exceptions": [[35, "module-deepcave.runs.exceptions"]], "group (class in deepcave.runs.group)": [[36, "deepcave.runs.group.Group"]], "deepcave.runs.group": [[36, "module-deepcave.runs.group"]], "get_trajectory() (deepcave.runs.group.group method)": [[36, "deepcave.runs.group.Group.get_trajectory"]], "hash (deepcave.runs.group.group property)": [[36, "deepcave.runs.group.Group.hash"]], "id (deepcave.runs.group.group property)": [[36, "deepcave.runs.group.Group.id"]], "runhandler (class in deepcave.runs.handler)": [[37, "deepcave.runs.handler.RunHandler"]], "add_run() (deepcave.runs.handler.runhandler method)": [[37, "deepcave.runs.handler.RunHandler.add_run"]], "deepcave.runs.handler": [[37, "module-deepcave.runs.handler"]], "get_available_run_paths() (deepcave.runs.handler.runhandler method)": [[37, "deepcave.runs.handler.RunHandler.get_available_run_paths"]], "get_groups() (deepcave.runs.handler.runhandler method)": [[37, "deepcave.runs.handler.RunHandler.get_groups"]], "get_run() (deepcave.runs.handler.runhandler method)": [[37, "deepcave.runs.handler.RunHandler.get_run"]], "get_run_name() (deepcave.runs.handler.runhandler method)": [[37, "deepcave.runs.handler.RunHandler.get_run_name"]], "get_runs() (deepcave.runs.handler.runhandler method)": [[37, "deepcave.runs.handler.RunHandler.get_runs"]], "get_selected_run_names() (deepcave.runs.handler.runhandler method)": [[37, "deepcave.runs.handler.RunHandler.get_selected_run_names"]], "get_selected_run_paths() (deepcave.runs.handler.runhandler method)": [[37, "deepcave.runs.handler.RunHandler.get_selected_run_paths"]], "get_working_directory() (deepcave.runs.handler.runhandler method)": [[37, "deepcave.runs.handler.RunHandler.get_working_directory"]], "remove_run() (deepcave.runs.handler.runhandler method)": [[37, "deepcave.runs.handler.RunHandler.remove_run"]], "set_working_directory() (deepcave.runs.handler.runhandler method)": [[37, "deepcave.runs.handler.RunHandler.set_working_directory"]], "update() (deepcave.runs.handler.runhandler method)": [[37, "deepcave.runs.handler.RunHandler.update"]], "update_groups() (deepcave.runs.handler.runhandler method)": [[37, "deepcave.runs.handler.RunHandler.update_groups"]], "update_run() (deepcave.runs.handler.runhandler method)": [[37, "deepcave.runs.handler.RunHandler.update_run"]], "update_runs() (deepcave.runs.handler.runhandler method)": [[37, "deepcave.runs.handler.RunHandler.update_runs"]], "objective (class in deepcave.runs.objective)": [[38, "deepcave.runs.objective.Objective"]], "__post_init__() (deepcave.runs.objective.objective method)": [[38, "deepcave.runs.objective.Objective.__post_init__"]], "deepcave.runs.objective": [[38, "module-deepcave.runs.objective"]], "deepcave.runs.recorder": [[39, "module-deepcave.runs.recorder"]], "run (class in deepcave.runs.run)": [[40, "deepcave.runs.run.Run"]], "add() (deepcave.runs.run.run method)": [[40, "deepcave.runs.run.Run.add"]], "deepcave.runs.run": [[40, "module-deepcave.runs.run"]], "exists() (deepcave.runs.run.run method)": [[40, "deepcave.runs.run.Run.exists"]], "from_path() (deepcave.runs.run.run class method)": [[40, "deepcave.runs.run.Run.from_path"]], "id (deepcave.runs.run.run property)": [[40, "deepcave.runs.run.Run.id"]], "status (class in deepcave.runs.status)": [[41, "deepcave.runs.status.Status"]], "deepcave.runs.status": [[41, "module-deepcave.runs.status"]], "trial (class in deepcave.runs.trial)": [[42, "deepcave.runs.trial.Trial"]], "deepcave.runs.trial": [[42, "module-deepcave.runs.trial"]], "deepcave.utils": [[43, "module-deepcave.utils"]], "cache (class in deepcave.utils.cache)": [[44, "deepcave.utils.cache.Cache"]], "clear() (deepcave.utils.cache.cache method)": [[44, "deepcave.utils.cache.Cache.clear"]], "deepcave.utils.cache": [[44, "module-deepcave.utils.cache"]], "get() (deepcave.utils.cache.cache method)": [[44, "deepcave.utils.cache.Cache.get"]], "has() (deepcave.utils.cache.cache method)": [[44, "deepcave.utils.cache.Cache.has"]], "read() (deepcave.utils.cache.cache method)": [[44, "deepcave.utils.cache.Cache.read"]], "set() (deepcave.utils.cache.cache method)": [[44, "deepcave.utils.cache.Cache.set"]], "set_dict() (deepcave.utils.cache.cache method)": [[44, "deepcave.utils.cache.Cache.set_dict"]], "write() (deepcave.utils.cache.cache method)": [[44, "deepcave.utils.cache.Cache.write"]], "deepcave.utils.cast": [[45, "module-deepcave.utils.cast"]], "deepcave.utils.compression": [[46, "module-deepcave.utils.compression"]], "deserialize() (in module deepcave.utils.compression)": [[46, "deepcave.utils.compression.deserialize"]], "serialize() (in module deepcave.utils.compression)": [[46, "deepcave.utils.compression.serialize"]], "deepcave.utils.configs": [[47, "module-deepcave.utils.configs"]], "parse_config() (in module deepcave.utils.configs)": [[47, "deepcave.utils.configs.parse_config"]], "deepcave.utils.configspace": [[48, "module-deepcave.utils.configspace"]], "sample_border_config() (in module deepcave.utils.configspace)": [[48, "deepcave.utils.configspace.sample_border_config"]], "sample_random_config() (in module deepcave.utils.configspace)": [[48, "deepcave.utils.configspace.sample_random_config"]], "deepcave.utils.dash": [[49, "module-deepcave.utils.dash"]], "flash() (in module deepcave.utils.dash)": [[49, "deepcave.utils.dash.flash"]], "deepcave.utils.data_structures": [[50, "module-deepcave.utils.data_structures"]], "update_dict() (in module deepcave.utils.data_structures)": [[50, "deepcave.utils.data_structures.update_dict"]], "deepcave.utils.docs": [[51, "module-deepcave.utils.docs"]], "deepcave.utils.files": [[52, "module-deepcave.utils.files"]], "deepcave.utils.hash": [[53, "module-deepcave.utils.hash"]], "deepcave.utils.layout": [[54, "module-deepcave.utils.layout"]], "get_select_options() (in module deepcave.utils.layout)": [[54, "deepcave.utils.layout.get_select_options"]], "deepcave.utils.logs": [[55, "module-deepcave.utils.logs"]], "deepcave.utils.notification": [[56, "module-deepcave.utils.notification"]], "runcaches (class in deepcave.utils.run_caches)": [[57, "deepcave.utils.run_caches.RunCaches"]], "clear() (deepcave.utils.run_caches.runcaches method)": [[57, "deepcave.utils.run_caches.RunCaches.clear"]], "clear_run() (deepcave.utils.run_caches.runcaches method)": [[57, "deepcave.utils.run_caches.RunCaches.clear_run"]], "deepcave.utils.run_caches": [[57, "module-deepcave.utils.run_caches"]], "get() (deepcave.utils.run_caches.runcaches method)": [[57, "deepcave.utils.run_caches.RunCaches.get"]], "set() (deepcave.utils.run_caches.runcaches method)": [[57, "deepcave.utils.run_caches.RunCaches.set"]], "update() (deepcave.utils.run_caches.runcaches method)": [[57, "deepcave.utils.run_caches.RunCaches.update"]], "styledplot (class in deepcave.utils.styled_plot)": [[58, "deepcave.utils.styled_plot.StyledPlot"]], "__getattr__() (deepcave.utils.styled_plot.styledplot method)": [[58, "deepcave.utils.styled_plot.StyledPlot.__getattr__"]], "deepcave.utils.styled_plot": [[58, "module-deepcave.utils.styled_plot"]], "deepcave.utils.styled_plotty": [[59, "module-deepcave.utils.styled_plotty"]], "get_color() (in module deepcave.utils.styled_plotty)": [[59, "deepcave.utils.styled_plotty.get_color"]], "get_discrete_heatmap() (in module deepcave.utils.styled_plotty)": [[59, "deepcave.utils.styled_plotty.get_discrete_heatmap"]], "get_hyperparameter_ticks() (in module deepcave.utils.styled_plotty)": [[59, "deepcave.utils.styled_plotty.get_hyperparameter_ticks"]], "get_hyperparameter_ticks_from_values() (in module deepcave.utils.styled_plotty)": [[59, "deepcave.utils.styled_plotty.get_hyperparameter_ticks_from_values"]], "hex_to_rgb() (in module deepcave.utils.styled_plotty)": [[59, "deepcave.utils.styled_plotty.hex_to_rgb"]], "prettify_label() (in module deepcave.utils.styled_plotty)": [[59, "deepcave.utils.styled_plotty.prettify_label"]], "save_image() (in module deepcave.utils.styled_plotty)": [[59, "deepcave.utils.styled_plotty.save_image"]], "deepcave.utils.url": [[60, "module-deepcave.utils.url"]], "deepcave.utils.util": [[61, "module-deepcave.utils.util"]], "bo": [[72, "term-BO"]], "budget": [[72, "term-Budget"]], "objective": [[72, "term-Objective"]], "smac": [[72, "term-SMAC"]]}})